// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pqcrystals_fips202_ref_sha3_256.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pqcrystals_fips202_ref_sha3_256::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pqcrystals_fips202_ref_sha3_256::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state1 = "1";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state2 = "10";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state3 = "100";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state4 = "1000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state5 = "10000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state6 = "100000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state7 = "1000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state8 = "10000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state9 = "100000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state10 = "1000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state11 = "10000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state12 = "100000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<94> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1 = "1";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_9 = "1001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_4D = "1001101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_4E = "1001110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_4F = "1001111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_50 = "1010000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_51 = "1010001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_52 = "1010010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_53 = "1010011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_54 = "1010100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_55 = "1010101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_56 = "1010110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_57 = "1010111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_58 = "1011000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_59 = "1011001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_5A = "1011010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_5B = "1011011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_5C = "1011100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2 = "10";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_8 = "1000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_C = "1100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_D = "1101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_10 = "10000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_11 = "10001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_14 = "10100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_15 = "10101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_18 = "11000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_19 = "11001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1C = "11100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1D = "11101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_20 = "100000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_21 = "100001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_24 = "100100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_25 = "100101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_28 = "101000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_29 = "101001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2C = "101100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2D = "101101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_30 = "110000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_31 = "110001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_34 = "110100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_35 = "110101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_38 = "111000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_39 = "111001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_3C = "111100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_3D = "111101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_40 = "1000000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_41 = "1000001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_44 = "1000100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_45 = "1000101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_48 = "1001000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_49 = "1001001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_A = "1010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_B = "1011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_E = "1110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_F = "1111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_12 = "10010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_13 = "10011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_16 = "10110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_17 = "10111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1A = "11010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1B = "11011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1E = "11110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1F = "11111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_22 = "100010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_23 = "100011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_26 = "100110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_27 = "100111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2A = "101010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2B = "101011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2E = "101110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2F = "101111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_32 = "110010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_33 = "110011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_36 = "110110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_37 = "110111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_3A = "111010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_3B = "111011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_3E = "111110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_3F = "111111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_42 = "1000010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_43 = "1000011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_46 = "1000110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_47 = "1000111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_4A = "1001010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_4B = "1001011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_4C = "1001100";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_0 = "000000000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_8 = "1000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_10 = "10000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_18 = "11000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_20 = "100000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_28 = "101000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_30 = "110000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_38 = "111000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_40 = "1000000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_48 = "1001000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_50 = "1010000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_58 = "1011000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_60 = "1100000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_68 = "1101000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_70 = "1110000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_78 = "1111000";
const sc_lv<9> pqcrystals_fips202_ref_sha3_256::ap_const_lv9_80 = "10000000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1 = "1";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_2 = "10";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_3 = "11";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_4 = "100";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_5 = "101";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_6 = "110";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_7 = "111";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_8 = "1000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_9 = "1001";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_A = "1010";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_B = "1011";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_C = "1100";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_D = "1101";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_E = "1110";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_F = "1111";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_10 = "10000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_11 = "10001";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_12 = "10010";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_13 = "10011";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_14 = "10100";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_15 = "10101";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_16 = "10110";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_17 = "10111";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_18 = "11000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_19 = "11001";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1A = "11010";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1B = "11011";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1C = "11100";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1D = "11101";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1E = "11110";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1F = "11111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_5D = "1011101";
const bool pqcrystals_fips202_ref_sha3_256::ap_const_boolean_1 = true;

pqcrystals_fips202_ref_sha3_256::pqcrystals_fips202_ref_sha3_256(sc_module_name name) : sc_module(name), mVcdFile(0) {
    out_assign_U = new pqcrystals_fips202_ref_sha3_256_out_assign("out_assign_U");
    out_assign_U->clk(ap_clk);
    out_assign_U->reset(ap_rst);
    out_assign_U->address0(out_assign_address0);
    out_assign_U->ce0(out_assign_ce0);
    out_assign_U->we0(out_assign_we0);
    out_assign_U->d0(grp_store64_fu_733_x_d0);
    out_assign_U->q0(out_assign_q0);
    out_assign_U->address1(out_assign_address1);
    out_assign_U->ce1(out_assign_ce1);
    out_assign_U->we1(out_assign_we1);
    out_assign_U->d1(grp_store64_fu_733_x_d1);
    out_assign_U->q1(out_assign_q1);
    grp_KeccakF1600_StatePer_fu_700 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_700");
    grp_KeccakF1600_StatePer_fu_700->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_700->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_700->state_0_read(s_0_reg_894);
    grp_KeccakF1600_StatePer_fu_700->state_1_read(s_1_reg_899);
    grp_KeccakF1600_StatePer_fu_700->state_2_read(s_2_reg_904);
    grp_KeccakF1600_StatePer_fu_700->state_3_read(s_3_reg_909);
    grp_KeccakF1600_StatePer_fu_700->state_4_read(s_4_reg_914);
    grp_KeccakF1600_StatePer_fu_700->state_5_read(s_5_reg_919);
    grp_KeccakF1600_StatePer_fu_700->state_6_read(s_6_reg_924);
    grp_KeccakF1600_StatePer_fu_700->state_7_read(s_7_reg_929);
    grp_KeccakF1600_StatePer_fu_700->state_8_read(s_8_reg_934);
    grp_KeccakF1600_StatePer_fu_700->state_9_read(s_9_reg_939);
    grp_KeccakF1600_StatePer_fu_700->state_10_read(s_10_reg_944);
    grp_KeccakF1600_StatePer_fu_700->state_11_read(s_11_reg_949);
    grp_KeccakF1600_StatePer_fu_700->state_12_read(s_12_reg_954);
    grp_KeccakF1600_StatePer_fu_700->state_13_read(s_13_reg_959);
    grp_KeccakF1600_StatePer_fu_700->state_14_read(s_14_reg_964);
    grp_KeccakF1600_StatePer_fu_700->state_15_read(s_15_reg_969);
    grp_KeccakF1600_StatePer_fu_700->state_16_read(s_16_reg_974);
    grp_KeccakF1600_StatePer_fu_700->ap_return_0(grp_KeccakF1600_StatePer_fu_700_ap_return_0);
    grp_KeccakF1600_StatePer_fu_700->ap_return_1(grp_KeccakF1600_StatePer_fu_700_ap_return_1);
    grp_KeccakF1600_StatePer_fu_700->ap_return_2(grp_KeccakF1600_StatePer_fu_700_ap_return_2);
    grp_KeccakF1600_StatePer_fu_700->ap_return_3(grp_KeccakF1600_StatePer_fu_700_ap_return_3);
    grp_KeccakF1600_StatePer_fu_700->ap_return_4(grp_KeccakF1600_StatePer_fu_700_ap_return_4);
    grp_KeccakF1600_StatePer_fu_700->ap_return_5(grp_KeccakF1600_StatePer_fu_700_ap_return_5);
    grp_KeccakF1600_StatePer_fu_700->ap_return_6(grp_KeccakF1600_StatePer_fu_700_ap_return_6);
    grp_KeccakF1600_StatePer_fu_700->ap_return_7(grp_KeccakF1600_StatePer_fu_700_ap_return_7);
    grp_KeccakF1600_StatePer_fu_700->ap_return_8(grp_KeccakF1600_StatePer_fu_700_ap_return_8);
    grp_KeccakF1600_StatePer_fu_700->ap_return_9(grp_KeccakF1600_StatePer_fu_700_ap_return_9);
    grp_KeccakF1600_StatePer_fu_700->ap_return_10(grp_KeccakF1600_StatePer_fu_700_ap_return_10);
    grp_KeccakF1600_StatePer_fu_700->ap_return_11(grp_KeccakF1600_StatePer_fu_700_ap_return_11);
    grp_KeccakF1600_StatePer_fu_700->ap_return_12(grp_KeccakF1600_StatePer_fu_700_ap_return_12);
    grp_KeccakF1600_StatePer_fu_700->ap_return_13(grp_KeccakF1600_StatePer_fu_700_ap_return_13);
    grp_KeccakF1600_StatePer_fu_700->ap_return_14(grp_KeccakF1600_StatePer_fu_700_ap_return_14);
    grp_KeccakF1600_StatePer_fu_700->ap_return_15(grp_KeccakF1600_StatePer_fu_700_ap_return_15);
    grp_KeccakF1600_StatePer_fu_700->ap_return_16(grp_KeccakF1600_StatePer_fu_700_ap_return_16);
    grp_keccak_absorb_fu_721 = new keccak_absorb("grp_keccak_absorb_fu_721");
    grp_keccak_absorb_fu_721->ap_clk(ap_clk);
    grp_keccak_absorb_fu_721->ap_rst(ap_rst);
    grp_keccak_absorb_fu_721->ap_start(grp_keccak_absorb_fu_721_ap_start);
    grp_keccak_absorb_fu_721->ap_done(grp_keccak_absorb_fu_721_ap_done);
    grp_keccak_absorb_fu_721->ap_idle(grp_keccak_absorb_fu_721_ap_idle);
    grp_keccak_absorb_fu_721->ap_ready(grp_keccak_absorb_fu_721_ap_ready);
    grp_keccak_absorb_fu_721->m_address0(grp_keccak_absorb_fu_721_m_address0);
    grp_keccak_absorb_fu_721->m_ce0(grp_keccak_absorb_fu_721_m_ce0);
    grp_keccak_absorb_fu_721->m_q0(in_r_q0);
    grp_keccak_absorb_fu_721->m_address1(grp_keccak_absorb_fu_721_m_address1);
    grp_keccak_absorb_fu_721->m_ce1(grp_keccak_absorb_fu_721_m_ce1);
    grp_keccak_absorb_fu_721->m_q1(in_r_q1);
    grp_keccak_absorb_fu_721->ap_return_0(grp_keccak_absorb_fu_721_ap_return_0);
    grp_keccak_absorb_fu_721->ap_return_1(grp_keccak_absorb_fu_721_ap_return_1);
    grp_keccak_absorb_fu_721->ap_return_2(grp_keccak_absorb_fu_721_ap_return_2);
    grp_keccak_absorb_fu_721->ap_return_3(grp_keccak_absorb_fu_721_ap_return_3);
    grp_keccak_absorb_fu_721->ap_return_4(grp_keccak_absorb_fu_721_ap_return_4);
    grp_keccak_absorb_fu_721->ap_return_5(grp_keccak_absorb_fu_721_ap_return_5);
    grp_keccak_absorb_fu_721->ap_return_6(grp_keccak_absorb_fu_721_ap_return_6);
    grp_keccak_absorb_fu_721->ap_return_7(grp_keccak_absorb_fu_721_ap_return_7);
    grp_keccak_absorb_fu_721->ap_return_8(grp_keccak_absorb_fu_721_ap_return_8);
    grp_keccak_absorb_fu_721->ap_return_9(grp_keccak_absorb_fu_721_ap_return_9);
    grp_keccak_absorb_fu_721->ap_return_10(grp_keccak_absorb_fu_721_ap_return_10);
    grp_keccak_absorb_fu_721->ap_return_11(grp_keccak_absorb_fu_721_ap_return_11);
    grp_keccak_absorb_fu_721->ap_return_12(grp_keccak_absorb_fu_721_ap_return_12);
    grp_keccak_absorb_fu_721->ap_return_13(grp_keccak_absorb_fu_721_ap_return_13);
    grp_keccak_absorb_fu_721->ap_return_14(grp_keccak_absorb_fu_721_ap_return_14);
    grp_keccak_absorb_fu_721->ap_return_15(grp_keccak_absorb_fu_721_ap_return_15);
    grp_keccak_absorb_fu_721->ap_return_16(grp_keccak_absorb_fu_721_ap_return_16);
    grp_store64_fu_733 = new store64("grp_store64_fu_733");
    grp_store64_fu_733->ap_clk(ap_clk);
    grp_store64_fu_733->ap_rst(ap_rst);
    grp_store64_fu_733->ap_start(grp_store64_fu_733_ap_start);
    grp_store64_fu_733->ap_done(grp_store64_fu_733_ap_done);
    grp_store64_fu_733->ap_idle(grp_store64_fu_733_ap_idle);
    grp_store64_fu_733->ap_ready(grp_store64_fu_733_ap_ready);
    grp_store64_fu_733->x_address0(grp_store64_fu_733_x_address0);
    grp_store64_fu_733->x_ce0(grp_store64_fu_733_x_ce0);
    grp_store64_fu_733->x_we0(grp_store64_fu_733_x_we0);
    grp_store64_fu_733->x_d0(grp_store64_fu_733_x_d0);
    grp_store64_fu_733->x_address1(grp_store64_fu_733_x_address1);
    grp_store64_fu_733->x_ce1(grp_store64_fu_733_x_ce1);
    grp_store64_fu_733->x_we1(grp_store64_fu_733_x_we1);
    grp_store64_fu_733->x_d1(grp_store64_fu_733_x_d1);
    grp_store64_fu_733->x_offset(grp_store64_fu_733_x_offset);
    grp_store64_fu_733->u(grp_store64_fu_733_u);
    grp_store64_fu_733->ap_ce(ap_var_for_const0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state85);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state90);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state93);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state10);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state14);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state18);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state22);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state26);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state30);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state34);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state38);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state42);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state46);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state50);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state54);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state58);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state62);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state66);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state70);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state74);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_grp_keccak_absorb_fu_721_ap_start);
    sensitive << ( grp_keccak_absorb_fu_721_ap_start_reg );

    SC_METHOD(thread_grp_store64_fu_733_ap_start);
    sensitive << ( grp_store64_fu_733_ap_start_reg );

    SC_METHOD(thread_grp_store64_fu_733_u);
    sensitive << ( newret1_i_reg_979 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( newret3_i_reg_984 );
    sensitive << ( newret5_i_reg_989 );
    sensitive << ( newret7_i_reg_994 );
    sensitive << ( newret9_i_reg_999 );
    sensitive << ( newret11_i_reg_1004 );
    sensitive << ( newret13_i_reg_1009 );
    sensitive << ( newret15_i_reg_1014 );
    sensitive << ( newret17_i_reg_1019 );
    sensitive << ( newret18_i_reg_1024 );
    sensitive << ( newret19_i_reg_1029 );
    sensitive << ( newret20_i_reg_1034 );
    sensitive << ( newret21_i_reg_1039 );
    sensitive << ( newret22_i_reg_1044 );
    sensitive << ( newret23_i_reg_1049 );
    sensitive << ( newret24_i_reg_1054 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_700_ap_return_0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_grp_store64_fu_733_x_offset);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state74 );

    SC_METHOD(thread_h_address0);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_h_address1);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_h_ce0);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_h_ce1);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_h_d0);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( out_assign_q0 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_h_d1);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( out_assign_q1 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_h_we0);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_h_we1);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( ap_CS_fsm_state94 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_keccak_absorb_fu_721_m_address0 );

    SC_METHOD(thread_in_r_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_keccak_absorb_fu_721_m_address1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_keccak_absorb_fu_721_m_ce0 );

    SC_METHOD(thread_in_r_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_keccak_absorb_fu_721_m_ce1 );

    SC_METHOD(thread_out_assign_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( grp_store64_fu_733_x_address0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_out_assign_address1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( grp_store64_fu_733_x_address1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_out_assign_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( grp_store64_fu_733_x_ce0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_out_assign_ce1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state85 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state91 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state93 );
    sensitive << ( grp_store64_fu_733_x_ce1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_out_assign_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_store64_fu_733_x_we0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_out_assign_we1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_store64_fu_733_x_we1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state73 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_keccak_absorb_fu_721_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    grp_keccak_absorb_fu_721_ap_start_reg = SC_LOGIC_0;
    grp_store64_fu_733_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pqcrystals_fips202_ref_sha3_256_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, h_address0, "(port)h_address0");
    sc_trace(mVcdFile, h_ce0, "(port)h_ce0");
    sc_trace(mVcdFile, h_we0, "(port)h_we0");
    sc_trace(mVcdFile, h_d0, "(port)h_d0");
    sc_trace(mVcdFile, h_address1, "(port)h_address1");
    sc_trace(mVcdFile, h_ce1, "(port)h_ce1");
    sc_trace(mVcdFile, h_we1, "(port)h_we1");
    sc_trace(mVcdFile, h_d1, "(port)h_d1");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, in_r_address1, "(port)in_r_address1");
    sc_trace(mVcdFile, in_r_ce1, "(port)in_r_ce1");
    sc_trace(mVcdFile, in_r_q1, "(port)in_r_q1");
    sc_trace(mVcdFile, inlen, "(port)inlen");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, s_0_reg_894, "s_0_reg_894");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_ready, "grp_keccak_absorb_fu_721_ap_ready");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_done, "grp_keccak_absorb_fu_721_ap_done");
    sc_trace(mVcdFile, s_1_reg_899, "s_1_reg_899");
    sc_trace(mVcdFile, s_2_reg_904, "s_2_reg_904");
    sc_trace(mVcdFile, s_3_reg_909, "s_3_reg_909");
    sc_trace(mVcdFile, s_4_reg_914, "s_4_reg_914");
    sc_trace(mVcdFile, s_5_reg_919, "s_5_reg_919");
    sc_trace(mVcdFile, s_6_reg_924, "s_6_reg_924");
    sc_trace(mVcdFile, s_7_reg_929, "s_7_reg_929");
    sc_trace(mVcdFile, s_8_reg_934, "s_8_reg_934");
    sc_trace(mVcdFile, s_9_reg_939, "s_9_reg_939");
    sc_trace(mVcdFile, s_10_reg_944, "s_10_reg_944");
    sc_trace(mVcdFile, s_11_reg_949, "s_11_reg_949");
    sc_trace(mVcdFile, s_12_reg_954, "s_12_reg_954");
    sc_trace(mVcdFile, s_13_reg_959, "s_13_reg_959");
    sc_trace(mVcdFile, s_14_reg_964, "s_14_reg_964");
    sc_trace(mVcdFile, s_15_reg_969, "s_15_reg_969");
    sc_trace(mVcdFile, s_16_reg_974, "s_16_reg_974");
    sc_trace(mVcdFile, newret1_i_reg_979, "newret1_i_reg_979");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, newret3_i_reg_984, "newret3_i_reg_984");
    sc_trace(mVcdFile, newret5_i_reg_989, "newret5_i_reg_989");
    sc_trace(mVcdFile, newret7_i_reg_994, "newret7_i_reg_994");
    sc_trace(mVcdFile, newret9_i_reg_999, "newret9_i_reg_999");
    sc_trace(mVcdFile, newret11_i_reg_1004, "newret11_i_reg_1004");
    sc_trace(mVcdFile, newret13_i_reg_1009, "newret13_i_reg_1009");
    sc_trace(mVcdFile, newret15_i_reg_1014, "newret15_i_reg_1014");
    sc_trace(mVcdFile, newret17_i_reg_1019, "newret17_i_reg_1019");
    sc_trace(mVcdFile, newret18_i_reg_1024, "newret18_i_reg_1024");
    sc_trace(mVcdFile, newret19_i_reg_1029, "newret19_i_reg_1029");
    sc_trace(mVcdFile, newret20_i_reg_1034, "newret20_i_reg_1034");
    sc_trace(mVcdFile, newret21_i_reg_1039, "newret21_i_reg_1039");
    sc_trace(mVcdFile, newret22_i_reg_1044, "newret22_i_reg_1044");
    sc_trace(mVcdFile, newret23_i_reg_1049, "newret23_i_reg_1049");
    sc_trace(mVcdFile, newret24_i_reg_1054, "newret24_i_reg_1054");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, ap_CS_fsm_state82, "ap_CS_fsm_state82");
    sc_trace(mVcdFile, ap_CS_fsm_state83, "ap_CS_fsm_state83");
    sc_trace(mVcdFile, ap_CS_fsm_state84, "ap_CS_fsm_state84");
    sc_trace(mVcdFile, ap_CS_fsm_state85, "ap_CS_fsm_state85");
    sc_trace(mVcdFile, ap_CS_fsm_state86, "ap_CS_fsm_state86");
    sc_trace(mVcdFile, ap_CS_fsm_state87, "ap_CS_fsm_state87");
    sc_trace(mVcdFile, ap_CS_fsm_state88, "ap_CS_fsm_state88");
    sc_trace(mVcdFile, ap_CS_fsm_state89, "ap_CS_fsm_state89");
    sc_trace(mVcdFile, ap_CS_fsm_state90, "ap_CS_fsm_state90");
    sc_trace(mVcdFile, ap_CS_fsm_state91, "ap_CS_fsm_state91");
    sc_trace(mVcdFile, ap_CS_fsm_state92, "ap_CS_fsm_state92");
    sc_trace(mVcdFile, ap_CS_fsm_state93, "ap_CS_fsm_state93");
    sc_trace(mVcdFile, out_assign_address0, "out_assign_address0");
    sc_trace(mVcdFile, out_assign_ce0, "out_assign_ce0");
    sc_trace(mVcdFile, out_assign_we0, "out_assign_we0");
    sc_trace(mVcdFile, out_assign_q0, "out_assign_q0");
    sc_trace(mVcdFile, out_assign_address1, "out_assign_address1");
    sc_trace(mVcdFile, out_assign_ce1, "out_assign_ce1");
    sc_trace(mVcdFile, out_assign_we1, "out_assign_we1");
    sc_trace(mVcdFile, out_assign_q1, "out_assign_q1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_0, "grp_KeccakF1600_StatePer_fu_700_ap_return_0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_1, "grp_KeccakF1600_StatePer_fu_700_ap_return_1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_2, "grp_KeccakF1600_StatePer_fu_700_ap_return_2");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_3, "grp_KeccakF1600_StatePer_fu_700_ap_return_3");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_4, "grp_KeccakF1600_StatePer_fu_700_ap_return_4");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_5, "grp_KeccakF1600_StatePer_fu_700_ap_return_5");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_6, "grp_KeccakF1600_StatePer_fu_700_ap_return_6");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_7, "grp_KeccakF1600_StatePer_fu_700_ap_return_7");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_8, "grp_KeccakF1600_StatePer_fu_700_ap_return_8");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_9, "grp_KeccakF1600_StatePer_fu_700_ap_return_9");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_10, "grp_KeccakF1600_StatePer_fu_700_ap_return_10");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_11, "grp_KeccakF1600_StatePer_fu_700_ap_return_11");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_12, "grp_KeccakF1600_StatePer_fu_700_ap_return_12");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_13, "grp_KeccakF1600_StatePer_fu_700_ap_return_13");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_14, "grp_KeccakF1600_StatePer_fu_700_ap_return_14");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_15, "grp_KeccakF1600_StatePer_fu_700_ap_return_15");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_700_ap_return_16, "grp_KeccakF1600_StatePer_fu_700_ap_return_16");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_start, "grp_keccak_absorb_fu_721_ap_start");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_idle, "grp_keccak_absorb_fu_721_ap_idle");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_m_address0, "grp_keccak_absorb_fu_721_m_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_m_ce0, "grp_keccak_absorb_fu_721_m_ce0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_m_address1, "grp_keccak_absorb_fu_721_m_address1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_m_ce1, "grp_keccak_absorb_fu_721_m_ce1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_0, "grp_keccak_absorb_fu_721_ap_return_0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_1, "grp_keccak_absorb_fu_721_ap_return_1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_2, "grp_keccak_absorb_fu_721_ap_return_2");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_3, "grp_keccak_absorb_fu_721_ap_return_3");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_4, "grp_keccak_absorb_fu_721_ap_return_4");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_5, "grp_keccak_absorb_fu_721_ap_return_5");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_6, "grp_keccak_absorb_fu_721_ap_return_6");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_7, "grp_keccak_absorb_fu_721_ap_return_7");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_8, "grp_keccak_absorb_fu_721_ap_return_8");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_9, "grp_keccak_absorb_fu_721_ap_return_9");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_10, "grp_keccak_absorb_fu_721_ap_return_10");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_11, "grp_keccak_absorb_fu_721_ap_return_11");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_12, "grp_keccak_absorb_fu_721_ap_return_12");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_13, "grp_keccak_absorb_fu_721_ap_return_13");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_14, "grp_keccak_absorb_fu_721_ap_return_14");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_15, "grp_keccak_absorb_fu_721_ap_return_15");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_return_16, "grp_keccak_absorb_fu_721_ap_return_16");
    sc_trace(mVcdFile, grp_store64_fu_733_ap_start, "grp_store64_fu_733_ap_start");
    sc_trace(mVcdFile, grp_store64_fu_733_ap_done, "grp_store64_fu_733_ap_done");
    sc_trace(mVcdFile, grp_store64_fu_733_ap_idle, "grp_store64_fu_733_ap_idle");
    sc_trace(mVcdFile, grp_store64_fu_733_ap_ready, "grp_store64_fu_733_ap_ready");
    sc_trace(mVcdFile, grp_store64_fu_733_x_address0, "grp_store64_fu_733_x_address0");
    sc_trace(mVcdFile, grp_store64_fu_733_x_ce0, "grp_store64_fu_733_x_ce0");
    sc_trace(mVcdFile, grp_store64_fu_733_x_we0, "grp_store64_fu_733_x_we0");
    sc_trace(mVcdFile, grp_store64_fu_733_x_d0, "grp_store64_fu_733_x_d0");
    sc_trace(mVcdFile, grp_store64_fu_733_x_address1, "grp_store64_fu_733_x_address1");
    sc_trace(mVcdFile, grp_store64_fu_733_x_ce1, "grp_store64_fu_733_x_ce1");
    sc_trace(mVcdFile, grp_store64_fu_733_x_we1, "grp_store64_fu_733_x_we1");
    sc_trace(mVcdFile, grp_store64_fu_733_x_d1, "grp_store64_fu_733_x_d1");
    sc_trace(mVcdFile, grp_store64_fu_733_x_offset, "grp_store64_fu_733_x_offset");
    sc_trace(mVcdFile, grp_store64_fu_733_u, "grp_store64_fu_733_u");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_721_ap_start_reg, "grp_keccak_absorb_fu_721_ap_start_reg");
    sc_trace(mVcdFile, grp_store64_fu_733_ap_start_reg, "grp_store64_fu_733_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_NS_fsm_state10, "ap_NS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_NS_fsm_state14, "ap_NS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_NS_fsm_state18, "ap_NS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_NS_fsm_state22, "ap_NS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_NS_fsm_state26, "ap_NS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_NS_fsm_state30, "ap_NS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_NS_fsm_state34, "ap_NS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_NS_fsm_state38, "ap_NS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_NS_fsm_state42, "ap_NS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_NS_fsm_state46, "ap_NS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_NS_fsm_state50, "ap_NS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_NS_fsm_state54, "ap_NS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_NS_fsm_state58, "ap_NS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_NS_fsm_state62, "ap_NS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, ap_NS_fsm_state66, "ap_NS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_NS_fsm_state70, "ap_NS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, ap_NS_fsm_state74, "ap_NS_fsm_state74");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, ap_CS_fsm_state94, "ap_CS_fsm_state94");
#endif

    }
    mHdltvinHandle.open("pqcrystals_fips202_ref_sha3_256.hdltvin.dat");
    mHdltvoutHandle.open("pqcrystals_fips202_ref_sha3_256.hdltvout.dat");
}

pqcrystals_fips202_ref_sha3_256::~pqcrystals_fips202_ref_sha3_256() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete out_assign_U;
    delete grp_KeccakF1600_StatePer_fu_700;
    delete grp_keccak_absorb_fu_721;
    delete grp_store64_fu_733;
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_absorb_fu_721_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_keccak_absorb_fu_721_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_absorb_fu_721_ap_ready.read())) {
            grp_keccak_absorb_fu_721_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_store64_fu_733_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state10.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state14.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state18.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state22.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state26.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state30.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state34.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state38.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state42.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state46.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state50.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state54.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state58.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state62.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state66.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state70.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state74.read())))) {
            grp_store64_fu_733_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_store64_fu_733_ap_ready.read())) {
            grp_store64_fu_733_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        newret11_i_reg_1004 = grp_KeccakF1600_StatePer_fu_700_ap_return_6.read();
        newret13_i_reg_1009 = grp_KeccakF1600_StatePer_fu_700_ap_return_7.read();
        newret15_i_reg_1014 = grp_KeccakF1600_StatePer_fu_700_ap_return_8.read();
        newret17_i_reg_1019 = grp_KeccakF1600_StatePer_fu_700_ap_return_9.read();
        newret18_i_reg_1024 = grp_KeccakF1600_StatePer_fu_700_ap_return_10.read();
        newret19_i_reg_1029 = grp_KeccakF1600_StatePer_fu_700_ap_return_11.read();
        newret1_i_reg_979 = grp_KeccakF1600_StatePer_fu_700_ap_return_1.read();
        newret20_i_reg_1034 = grp_KeccakF1600_StatePer_fu_700_ap_return_12.read();
        newret21_i_reg_1039 = grp_KeccakF1600_StatePer_fu_700_ap_return_13.read();
        newret22_i_reg_1044 = grp_KeccakF1600_StatePer_fu_700_ap_return_14.read();
        newret23_i_reg_1049 = grp_KeccakF1600_StatePer_fu_700_ap_return_15.read();
        newret24_i_reg_1054 = grp_KeccakF1600_StatePer_fu_700_ap_return_16.read();
        newret3_i_reg_984 = grp_KeccakF1600_StatePer_fu_700_ap_return_2.read();
        newret5_i_reg_989 = grp_KeccakF1600_StatePer_fu_700_ap_return_3.read();
        newret7_i_reg_994 = grp_KeccakF1600_StatePer_fu_700_ap_return_4.read();
        newret9_i_reg_999 = grp_KeccakF1600_StatePer_fu_700_ap_return_5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_keccak_absorb_fu_721_ap_done.read(), ap_const_logic_1))) {
        s_0_reg_894 = grp_keccak_absorb_fu_721_ap_return_0.read();
        s_10_reg_944 = grp_keccak_absorb_fu_721_ap_return_10.read();
        s_11_reg_949 = grp_keccak_absorb_fu_721_ap_return_11.read();
        s_12_reg_954 = grp_keccak_absorb_fu_721_ap_return_12.read();
        s_13_reg_959 = grp_keccak_absorb_fu_721_ap_return_13.read();
        s_14_reg_964 = grp_keccak_absorb_fu_721_ap_return_14.read();
        s_15_reg_969 = grp_keccak_absorb_fu_721_ap_return_15.read();
        s_16_reg_974 = grp_keccak_absorb_fu_721_ap_return_16.read();
        s_1_reg_899 = grp_keccak_absorb_fu_721_ap_return_1.read();
        s_2_reg_904 = grp_keccak_absorb_fu_721_ap_return_2.read();
        s_3_reg_909 = grp_keccak_absorb_fu_721_ap_return_3.read();
        s_4_reg_914 = grp_keccak_absorb_fu_721_ap_return_4.read();
        s_5_reg_919 = grp_keccak_absorb_fu_721_ap_return_5.read();
        s_6_reg_924 = grp_keccak_absorb_fu_721_ap_return_6.read();
        s_7_reg_929 = grp_keccak_absorb_fu_721_ap_return_7.read();
        s_8_reg_934 = grp_keccak_absorb_fu_721_ap_return_8.read();
        s_9_reg_939 = grp_keccak_absorb_fu_721_ap_return_9.read();
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read()[72];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[75];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read()[76];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[77];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[78];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[80];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state82() {
    ap_CS_fsm_state82 = ap_CS_fsm.read()[81];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state83() {
    ap_CS_fsm_state83 = ap_CS_fsm.read()[82];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state84() {
    ap_CS_fsm_state84 = ap_CS_fsm.read()[83];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state85() {
    ap_CS_fsm_state85 = ap_CS_fsm.read()[84];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state86() {
    ap_CS_fsm_state86 = ap_CS_fsm.read()[85];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state87() {
    ap_CS_fsm_state87 = ap_CS_fsm.read()[86];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state88() {
    ap_CS_fsm_state88 = ap_CS_fsm.read()[87];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state89() {
    ap_CS_fsm_state89 = ap_CS_fsm.read()[88];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state90() {
    ap_CS_fsm_state90 = ap_CS_fsm.read()[89];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state91() {
    ap_CS_fsm_state91 = ap_CS_fsm.read()[90];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state92() {
    ap_CS_fsm_state92 = ap_CS_fsm.read()[91];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state93() {
    ap_CS_fsm_state93 = ap_CS_fsm.read()[92];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state94() {
    ap_CS_fsm_state94 = ap_CS_fsm.read()[93];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state10() {
    ap_NS_fsm_state10 = ap_NS_fsm.read()[9];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state14() {
    ap_NS_fsm_state14 = ap_NS_fsm.read()[13];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state18() {
    ap_NS_fsm_state18 = ap_NS_fsm.read()[17];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state22() {
    ap_NS_fsm_state22 = ap_NS_fsm.read()[21];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state26() {
    ap_NS_fsm_state26 = ap_NS_fsm.read()[25];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state30() {
    ap_NS_fsm_state30 = ap_NS_fsm.read()[29];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state34() {
    ap_NS_fsm_state34 = ap_NS_fsm.read()[33];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state38() {
    ap_NS_fsm_state38 = ap_NS_fsm.read()[37];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state42() {
    ap_NS_fsm_state42 = ap_NS_fsm.read()[41];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state46() {
    ap_NS_fsm_state46 = ap_NS_fsm.read()[45];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state50() {
    ap_NS_fsm_state50 = ap_NS_fsm.read()[49];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state54() {
    ap_NS_fsm_state54 = ap_NS_fsm.read()[53];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state58() {
    ap_NS_fsm_state58 = ap_NS_fsm.read()[57];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state62() {
    ap_NS_fsm_state62 = ap_NS_fsm.read()[61];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state66() {
    ap_NS_fsm_state66 = ap_NS_fsm.read()[65];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state70() {
    ap_NS_fsm_state70 = ap_NS_fsm.read()[69];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm_state74() {
    ap_NS_fsm_state74 = ap_NS_fsm.read()[73];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_grp_keccak_absorb_fu_721_ap_start() {
    grp_keccak_absorb_fu_721_ap_start = grp_keccak_absorb_fu_721_ap_start_reg.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_grp_store64_fu_733_ap_start() {
    grp_store64_fu_733_ap_start = grp_store64_fu_733_ap_start_reg.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_grp_store64_fu_733_u() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        grp_store64_fu_733_u = newret24_i_reg_1054.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        grp_store64_fu_733_u = newret23_i_reg_1049.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        grp_store64_fu_733_u = newret22_i_reg_1044.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        grp_store64_fu_733_u = newret21_i_reg_1039.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        grp_store64_fu_733_u = newret20_i_reg_1034.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        grp_store64_fu_733_u = newret19_i_reg_1029.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        grp_store64_fu_733_u = newret18_i_reg_1024.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        grp_store64_fu_733_u = newret17_i_reg_1019.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_store64_fu_733_u = newret15_i_reg_1014.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_store64_fu_733_u = newret13_i_reg_1009.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_store64_fu_733_u = newret11_i_reg_1004.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_store64_fu_733_u = newret9_i_reg_999.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_store64_fu_733_u = newret7_i_reg_994.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_store64_fu_733_u = newret5_i_reg_989.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_store64_fu_733_u = newret3_i_reg_984.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_store64_fu_733_u = newret1_i_reg_979.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_store64_fu_733_u = grp_KeccakF1600_StatePer_fu_700_ap_return_0.read();
    } else {
        grp_store64_fu_733_u = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_grp_store64_fu_733_x_offset() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_80;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_78;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_70;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_68;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_60;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_58;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_50;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_48;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_40;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_38;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_30;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_28;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_20;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_store64_fu_733_x_offset = ap_const_lv9_0;
    } else {
        grp_store64_fu_733_x_offset =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        h_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_1);
    } else {
        h_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()))) {
        h_ce0 = ap_const_logic_1;
    } else {
        h_ce0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()))) {
        h_ce1 = ap_const_logic_1;
    } else {
        h_ce1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_d0() {
    h_d0 = out_assign_q0.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_h_d1() {
    h_d1 = out_assign_q1.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_h_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()))) {
        h_we0 = ap_const_logic_1;
    } else {
        h_we0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()))) {
        h_we1 = ap_const_logic_1;
    } else {
        h_we1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_in_r_address0() {
    in_r_address0 = grp_keccak_absorb_fu_721_m_address0.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_in_r_address1() {
    in_r_address1 = grp_keccak_absorb_fu_721_m_address1.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_in_r_ce0() {
    in_r_ce0 = grp_keccak_absorb_fu_721_m_ce0.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_in_r_ce1() {
    in_r_ce1 = grp_keccak_absorb_fu_721_m_ce1.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        out_assign_address0 = grp_store64_fu_733_x_address0.read();
    } else {
        out_assign_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        out_assign_address1 = grp_store64_fu_733_x_address1.read();
    } else {
        out_assign_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()))) {
        out_assign_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        out_assign_ce0 = grp_store64_fu_733_x_ce0.read();
    } else {
        out_assign_ce0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()))) {
        out_assign_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        out_assign_ce1 = grp_store64_fu_733_x_ce1.read();
    } else {
        out_assign_ce1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        out_assign_we0 = grp_store64_fu_733_x_we0.read();
    } else {
        out_assign_we0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        out_assign_we1 = grp_store64_fu_733_x_we1.read();
    } else {
        out_assign_we1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm() {
    if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_keccak_absorb_fu_721_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,94,94>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<94>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void pqcrystals_fips202_ref_sha3_256::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_address0\" :  \"" << h_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_ce0\" :  \"" << h_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_we0\" :  \"" << h_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_d0\" :  \"" << h_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_address1\" :  \"" << h_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_ce1\" :  \"" << h_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_we1\" :  \"" << h_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_d1\" :  \"" << h_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address0\" :  \"" << in_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce0\" :  \"" << in_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q0\" :  \"" << in_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address1\" :  \"" << in_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce1\" :  \"" << in_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q1\" :  \"" << in_r_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inlen\" :  \"" << inlen.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

