// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pqcrystals_fips202_ref_sha3_256,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx980tffg1930-2l,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.736000,HLS_SYN_LAT=392,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=17517,HLS_SYN_LUT=196095,HLS_VERSION=2018_3}" *)

module pqcrystals_fips202_ref_sha3_256 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        h_address0,
        h_ce0,
        h_we0,
        h_d0,
        h_address1,
        h_ce1,
        h_we1,
        h_d1,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        in_r_address1,
        in_r_ce1,
        in_r_q1,
        inlen
);

parameter    ap_ST_fsm_state1 = 94'd1;
parameter    ap_ST_fsm_state2 = 94'd2;
parameter    ap_ST_fsm_state3 = 94'd4;
parameter    ap_ST_fsm_state4 = 94'd8;
parameter    ap_ST_fsm_state5 = 94'd16;
parameter    ap_ST_fsm_state6 = 94'd32;
parameter    ap_ST_fsm_state7 = 94'd64;
parameter    ap_ST_fsm_state8 = 94'd128;
parameter    ap_ST_fsm_state9 = 94'd256;
parameter    ap_ST_fsm_state10 = 94'd512;
parameter    ap_ST_fsm_state11 = 94'd1024;
parameter    ap_ST_fsm_state12 = 94'd2048;
parameter    ap_ST_fsm_state13 = 94'd4096;
parameter    ap_ST_fsm_state14 = 94'd8192;
parameter    ap_ST_fsm_state15 = 94'd16384;
parameter    ap_ST_fsm_state16 = 94'd32768;
parameter    ap_ST_fsm_state17 = 94'd65536;
parameter    ap_ST_fsm_state18 = 94'd131072;
parameter    ap_ST_fsm_state19 = 94'd262144;
parameter    ap_ST_fsm_state20 = 94'd524288;
parameter    ap_ST_fsm_state21 = 94'd1048576;
parameter    ap_ST_fsm_state22 = 94'd2097152;
parameter    ap_ST_fsm_state23 = 94'd4194304;
parameter    ap_ST_fsm_state24 = 94'd8388608;
parameter    ap_ST_fsm_state25 = 94'd16777216;
parameter    ap_ST_fsm_state26 = 94'd33554432;
parameter    ap_ST_fsm_state27 = 94'd67108864;
parameter    ap_ST_fsm_state28 = 94'd134217728;
parameter    ap_ST_fsm_state29 = 94'd268435456;
parameter    ap_ST_fsm_state30 = 94'd536870912;
parameter    ap_ST_fsm_state31 = 94'd1073741824;
parameter    ap_ST_fsm_state32 = 94'd2147483648;
parameter    ap_ST_fsm_state33 = 94'd4294967296;
parameter    ap_ST_fsm_state34 = 94'd8589934592;
parameter    ap_ST_fsm_state35 = 94'd17179869184;
parameter    ap_ST_fsm_state36 = 94'd34359738368;
parameter    ap_ST_fsm_state37 = 94'd68719476736;
parameter    ap_ST_fsm_state38 = 94'd137438953472;
parameter    ap_ST_fsm_state39 = 94'd274877906944;
parameter    ap_ST_fsm_state40 = 94'd549755813888;
parameter    ap_ST_fsm_state41 = 94'd1099511627776;
parameter    ap_ST_fsm_state42 = 94'd2199023255552;
parameter    ap_ST_fsm_state43 = 94'd4398046511104;
parameter    ap_ST_fsm_state44 = 94'd8796093022208;
parameter    ap_ST_fsm_state45 = 94'd17592186044416;
parameter    ap_ST_fsm_state46 = 94'd35184372088832;
parameter    ap_ST_fsm_state47 = 94'd70368744177664;
parameter    ap_ST_fsm_state48 = 94'd140737488355328;
parameter    ap_ST_fsm_state49 = 94'd281474976710656;
parameter    ap_ST_fsm_state50 = 94'd562949953421312;
parameter    ap_ST_fsm_state51 = 94'd1125899906842624;
parameter    ap_ST_fsm_state52 = 94'd2251799813685248;
parameter    ap_ST_fsm_state53 = 94'd4503599627370496;
parameter    ap_ST_fsm_state54 = 94'd9007199254740992;
parameter    ap_ST_fsm_state55 = 94'd18014398509481984;
parameter    ap_ST_fsm_state56 = 94'd36028797018963968;
parameter    ap_ST_fsm_state57 = 94'd72057594037927936;
parameter    ap_ST_fsm_state58 = 94'd144115188075855872;
parameter    ap_ST_fsm_state59 = 94'd288230376151711744;
parameter    ap_ST_fsm_state60 = 94'd576460752303423488;
parameter    ap_ST_fsm_state61 = 94'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 94'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 94'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 94'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 94'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 94'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 94'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 94'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 94'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 94'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 94'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 94'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 94'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 94'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 94'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 94'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 94'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 94'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 94'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 94'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 94'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 94'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 94'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 94'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 94'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 94'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 94'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 94'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 94'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 94'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 94'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 94'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 94'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 94'd9903520314283042199192993792;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] h_address0;
output   h_ce0;
output   h_we0;
output  [7:0] h_d0;
output  [4:0] h_address1;
output   h_ce1;
output   h_we1;
output  [7:0] h_d1;
output  [1:0] in_r_address0;
output   in_r_ce0;
input  [7:0] in_r_q0;
output  [1:0] in_r_address1;
output   in_r_ce1;
input  [7:0] in_r_q1;
input  [63:0] inlen;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] h_address0;
reg h_ce0;
reg h_we0;
reg[4:0] h_address1;
reg h_ce1;
reg h_we1;

(* fsm_encoding = "none" *) reg   [93:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] s_0_reg_894;
wire    ap_CS_fsm_state2;
wire    grp_keccak_absorb_fu_721_ap_ready;
wire    grp_keccak_absorb_fu_721_ap_done;
reg   [63:0] s_1_reg_899;
reg   [63:0] s_2_reg_904;
reg   [63:0] s_3_reg_909;
reg   [63:0] s_4_reg_914;
reg   [63:0] s_5_reg_919;
reg   [63:0] s_6_reg_924;
reg   [63:0] s_7_reg_929;
reg   [63:0] s_8_reg_934;
reg   [63:0] s_9_reg_939;
reg   [63:0] s_10_reg_944;
reg   [63:0] s_11_reg_949;
reg   [63:0] s_12_reg_954;
reg   [63:0] s_13_reg_959;
reg   [63:0] s_14_reg_964;
reg   [63:0] s_15_reg_969;
reg   [63:0] s_16_reg_974;
reg   [63:0] newret1_i_reg_979;
wire    ap_CS_fsm_state10;
reg   [63:0] newret3_i_reg_984;
reg   [63:0] newret5_i_reg_989;
reg   [63:0] newret7_i_reg_994;
reg   [63:0] newret9_i_reg_999;
reg   [63:0] newret11_i_reg_1004;
reg   [63:0] newret13_i_reg_1009;
reg   [63:0] newret15_i_reg_1014;
reg   [63:0] newret17_i_reg_1019;
reg   [63:0] newret18_i_reg_1024;
reg   [63:0] newret19_i_reg_1029;
reg   [63:0] newret20_i_reg_1034;
reg   [63:0] newret21_i_reg_1039;
reg   [63:0] newret22_i_reg_1044;
reg   [63:0] newret23_i_reg_1049;
reg   [63:0] newret24_i_reg_1054;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
reg   [7:0] out_assign_address0;
reg    out_assign_ce0;
reg    out_assign_we0;
wire   [7:0] out_assign_q0;
reg   [7:0] out_assign_address1;
reg    out_assign_ce1;
reg    out_assign_we1;
wire   [7:0] out_assign_q1;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_0;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_1;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_2;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_3;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_4;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_5;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_6;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_7;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_8;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_9;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_10;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_11;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_12;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_13;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_14;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_15;
wire   [63:0] grp_KeccakF1600_StatePer_fu_700_ap_return_16;
wire    grp_keccak_absorb_fu_721_ap_start;
wire    grp_keccak_absorb_fu_721_ap_idle;
wire   [1:0] grp_keccak_absorb_fu_721_m_address0;
wire    grp_keccak_absorb_fu_721_m_ce0;
wire   [1:0] grp_keccak_absorb_fu_721_m_address1;
wire    grp_keccak_absorb_fu_721_m_ce1;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_0;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_1;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_2;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_3;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_4;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_5;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_6;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_7;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_8;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_9;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_10;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_11;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_12;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_13;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_14;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_15;
wire   [63:0] grp_keccak_absorb_fu_721_ap_return_16;
wire    grp_store64_fu_733_ap_start;
wire    grp_store64_fu_733_ap_done;
wire    grp_store64_fu_733_ap_idle;
wire    grp_store64_fu_733_ap_ready;
wire   [7:0] grp_store64_fu_733_x_address0;
wire    grp_store64_fu_733_x_ce0;
wire    grp_store64_fu_733_x_we0;
wire   [7:0] grp_store64_fu_733_x_d0;
wire   [7:0] grp_store64_fu_733_x_address1;
wire    grp_store64_fu_733_x_ce1;
wire    grp_store64_fu_733_x_we1;
wire   [7:0] grp_store64_fu_733_x_d1;
reg   [8:0] grp_store64_fu_733_x_offset;
reg   [63:0] grp_store64_fu_733_u;
wire    ap_CS_fsm_state3;
reg    grp_keccak_absorb_fu_721_ap_start_reg;
reg    grp_store64_fu_733_ap_start_reg;
wire    ap_CS_fsm_state9;
reg   [93:0] ap_NS_fsm;
wire    ap_NS_fsm_state10;
wire    ap_CS_fsm_state13;
wire    ap_NS_fsm_state14;
wire    ap_CS_fsm_state17;
wire    ap_NS_fsm_state18;
wire    ap_CS_fsm_state21;
wire    ap_NS_fsm_state22;
wire    ap_CS_fsm_state25;
wire    ap_NS_fsm_state26;
wire    ap_CS_fsm_state29;
wire    ap_NS_fsm_state30;
wire    ap_CS_fsm_state33;
wire    ap_NS_fsm_state34;
wire    ap_CS_fsm_state37;
wire    ap_NS_fsm_state38;
wire    ap_CS_fsm_state41;
wire    ap_NS_fsm_state42;
wire    ap_CS_fsm_state45;
wire    ap_NS_fsm_state46;
wire    ap_CS_fsm_state49;
wire    ap_NS_fsm_state50;
wire    ap_CS_fsm_state53;
wire    ap_NS_fsm_state54;
wire    ap_CS_fsm_state57;
wire    ap_NS_fsm_state58;
wire    ap_CS_fsm_state61;
wire    ap_NS_fsm_state62;
wire    ap_CS_fsm_state65;
wire    ap_NS_fsm_state66;
wire    ap_CS_fsm_state69;
wire    ap_NS_fsm_state70;
wire    ap_CS_fsm_state73;
wire    ap_NS_fsm_state74;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state94;

// power-on initialization
initial begin
#0 ap_CS_fsm = 94'd1;
#0 grp_keccak_absorb_fu_721_ap_start_reg = 1'b0;
#0 grp_store64_fu_733_ap_start_reg = 1'b0;
end

pqcrystals_fips202_ref_sha3_256_out_assign #(
    .DataWidth( 8 ),
    .AddressRange( 136 ),
    .AddressWidth( 8 ))
out_assign_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_assign_address0),
    .ce0(out_assign_ce0),
    .we0(out_assign_we0),
    .d0(grp_store64_fu_733_x_d0),
    .q0(out_assign_q0),
    .address1(out_assign_address1),
    .ce1(out_assign_ce1),
    .we1(out_assign_we1),
    .d1(grp_store64_fu_733_x_d1),
    .q1(out_assign_q1)
);

KeccakF1600_StatePer grp_KeccakF1600_StatePer_fu_700(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .state_0_read(s_0_reg_894),
    .state_1_read(s_1_reg_899),
    .state_2_read(s_2_reg_904),
    .state_3_read(s_3_reg_909),
    .state_4_read(s_4_reg_914),
    .state_5_read(s_5_reg_919),
    .state_6_read(s_6_reg_924),
    .state_7_read(s_7_reg_929),
    .state_8_read(s_8_reg_934),
    .state_9_read(s_9_reg_939),
    .state_10_read(s_10_reg_944),
    .state_11_read(s_11_reg_949),
    .state_12_read(s_12_reg_954),
    .state_13_read(s_13_reg_959),
    .state_14_read(s_14_reg_964),
    .state_15_read(s_15_reg_969),
    .state_16_read(s_16_reg_974),
    .ap_return_0(grp_KeccakF1600_StatePer_fu_700_ap_return_0),
    .ap_return_1(grp_KeccakF1600_StatePer_fu_700_ap_return_1),
    .ap_return_2(grp_KeccakF1600_StatePer_fu_700_ap_return_2),
    .ap_return_3(grp_KeccakF1600_StatePer_fu_700_ap_return_3),
    .ap_return_4(grp_KeccakF1600_StatePer_fu_700_ap_return_4),
    .ap_return_5(grp_KeccakF1600_StatePer_fu_700_ap_return_5),
    .ap_return_6(grp_KeccakF1600_StatePer_fu_700_ap_return_6),
    .ap_return_7(grp_KeccakF1600_StatePer_fu_700_ap_return_7),
    .ap_return_8(grp_KeccakF1600_StatePer_fu_700_ap_return_8),
    .ap_return_9(grp_KeccakF1600_StatePer_fu_700_ap_return_9),
    .ap_return_10(grp_KeccakF1600_StatePer_fu_700_ap_return_10),
    .ap_return_11(grp_KeccakF1600_StatePer_fu_700_ap_return_11),
    .ap_return_12(grp_KeccakF1600_StatePer_fu_700_ap_return_12),
    .ap_return_13(grp_KeccakF1600_StatePer_fu_700_ap_return_13),
    .ap_return_14(grp_KeccakF1600_StatePer_fu_700_ap_return_14),
    .ap_return_15(grp_KeccakF1600_StatePer_fu_700_ap_return_15),
    .ap_return_16(grp_KeccakF1600_StatePer_fu_700_ap_return_16)
);

keccak_absorb grp_keccak_absorb_fu_721(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_keccak_absorb_fu_721_ap_start),
    .ap_done(grp_keccak_absorb_fu_721_ap_done),
    .ap_idle(grp_keccak_absorb_fu_721_ap_idle),
    .ap_ready(grp_keccak_absorb_fu_721_ap_ready),
    .m_address0(grp_keccak_absorb_fu_721_m_address0),
    .m_ce0(grp_keccak_absorb_fu_721_m_ce0),
    .m_q0(in_r_q0),
    .m_address1(grp_keccak_absorb_fu_721_m_address1),
    .m_ce1(grp_keccak_absorb_fu_721_m_ce1),
    .m_q1(in_r_q1),
    .ap_return_0(grp_keccak_absorb_fu_721_ap_return_0),
    .ap_return_1(grp_keccak_absorb_fu_721_ap_return_1),
    .ap_return_2(grp_keccak_absorb_fu_721_ap_return_2),
    .ap_return_3(grp_keccak_absorb_fu_721_ap_return_3),
    .ap_return_4(grp_keccak_absorb_fu_721_ap_return_4),
    .ap_return_5(grp_keccak_absorb_fu_721_ap_return_5),
    .ap_return_6(grp_keccak_absorb_fu_721_ap_return_6),
    .ap_return_7(grp_keccak_absorb_fu_721_ap_return_7),
    .ap_return_8(grp_keccak_absorb_fu_721_ap_return_8),
    .ap_return_9(grp_keccak_absorb_fu_721_ap_return_9),
    .ap_return_10(grp_keccak_absorb_fu_721_ap_return_10),
    .ap_return_11(grp_keccak_absorb_fu_721_ap_return_11),
    .ap_return_12(grp_keccak_absorb_fu_721_ap_return_12),
    .ap_return_13(grp_keccak_absorb_fu_721_ap_return_13),
    .ap_return_14(grp_keccak_absorb_fu_721_ap_return_14),
    .ap_return_15(grp_keccak_absorb_fu_721_ap_return_15),
    .ap_return_16(grp_keccak_absorb_fu_721_ap_return_16)
);

store64 grp_store64_fu_733(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_store64_fu_733_ap_start),
    .ap_done(grp_store64_fu_733_ap_done),
    .ap_idle(grp_store64_fu_733_ap_idle),
    .ap_ready(grp_store64_fu_733_ap_ready),
    .x_address0(grp_store64_fu_733_x_address0),
    .x_ce0(grp_store64_fu_733_x_ce0),
    .x_we0(grp_store64_fu_733_x_we0),
    .x_d0(grp_store64_fu_733_x_d0),
    .x_address1(grp_store64_fu_733_x_address1),
    .x_ce1(grp_store64_fu_733_x_ce1),
    .x_we1(grp_store64_fu_733_x_we1),
    .x_d1(grp_store64_fu_733_x_d1),
    .x_offset(grp_store64_fu_733_x_offset),
    .u(grp_store64_fu_733_u),
    .ap_ce(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_keccak_absorb_fu_721_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_keccak_absorb_fu_721_ap_start_reg <= 1'b1;
        end else if ((grp_keccak_absorb_fu_721_ap_ready == 1'b1)) begin
            grp_keccak_absorb_fu_721_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_store64_fu_733_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state74) & (1'b1 == ap_CS_fsm_state73)) | ((1'b1 == ap_NS_fsm_state70) & (1'b1 == ap_CS_fsm_state69)) | ((1'b1 == ap_NS_fsm_state66) & (1'b1 == ap_CS_fsm_state65)) | ((1'b1 == ap_NS_fsm_state62) & (1'b1 == ap_CS_fsm_state61)) | ((1'b1 == ap_NS_fsm_state58) & (1'b1 == ap_CS_fsm_state57)) | ((1'b1 == ap_NS_fsm_state54) & (1'b1 == ap_CS_fsm_state53)) | ((1'b1 == ap_NS_fsm_state50) & (1'b1 == ap_CS_fsm_state49)) | ((1'b1 == ap_NS_fsm_state46) & (1'b1 == ap_CS_fsm_state45)) | ((1'b1 == ap_NS_fsm_state42) & (1'b1 == ap_CS_fsm_state41)) | ((1'b1 == ap_NS_fsm_state38) & (1'b1 == ap_CS_fsm_state37)) | ((1'b1 == ap_NS_fsm_state34) & (1'b1 == ap_CS_fsm_state33)) | ((1'b1 == ap_NS_fsm_state30) & (1'b1 == ap_CS_fsm_state29)) | ((1'b1 == ap_NS_fsm_state26) & (1'b1 == ap_CS_fsm_state25)) | ((1'b1 == ap_NS_fsm_state22) & (1'b1 == ap_CS_fsm_state21)) | ((1'b1 == ap_NS_fsm_state18) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_NS_fsm_state14) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == ap_NS_fsm_state10) & (1'b1 == ap_CS_fsm_state9)))) begin
            grp_store64_fu_733_ap_start_reg <= 1'b1;
        end else if ((grp_store64_fu_733_ap_ready == 1'b1)) begin
            grp_store64_fu_733_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        newret11_i_reg_1004 <= grp_KeccakF1600_StatePer_fu_700_ap_return_6;
        newret13_i_reg_1009 <= grp_KeccakF1600_StatePer_fu_700_ap_return_7;
        newret15_i_reg_1014 <= grp_KeccakF1600_StatePer_fu_700_ap_return_8;
        newret17_i_reg_1019 <= grp_KeccakF1600_StatePer_fu_700_ap_return_9;
        newret18_i_reg_1024 <= grp_KeccakF1600_StatePer_fu_700_ap_return_10;
        newret19_i_reg_1029 <= grp_KeccakF1600_StatePer_fu_700_ap_return_11;
        newret1_i_reg_979 <= grp_KeccakF1600_StatePer_fu_700_ap_return_1;
        newret20_i_reg_1034 <= grp_KeccakF1600_StatePer_fu_700_ap_return_12;
        newret21_i_reg_1039 <= grp_KeccakF1600_StatePer_fu_700_ap_return_13;
        newret22_i_reg_1044 <= grp_KeccakF1600_StatePer_fu_700_ap_return_14;
        newret23_i_reg_1049 <= grp_KeccakF1600_StatePer_fu_700_ap_return_15;
        newret24_i_reg_1054 <= grp_KeccakF1600_StatePer_fu_700_ap_return_16;
        newret3_i_reg_984 <= grp_KeccakF1600_StatePer_fu_700_ap_return_2;
        newret5_i_reg_989 <= grp_KeccakF1600_StatePer_fu_700_ap_return_3;
        newret7_i_reg_994 <= grp_KeccakF1600_StatePer_fu_700_ap_return_4;
        newret9_i_reg_999 <= grp_KeccakF1600_StatePer_fu_700_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_keccak_absorb_fu_721_ap_done == 1'b1))) begin
        s_0_reg_894 <= grp_keccak_absorb_fu_721_ap_return_0;
        s_10_reg_944 <= grp_keccak_absorb_fu_721_ap_return_10;
        s_11_reg_949 <= grp_keccak_absorb_fu_721_ap_return_11;
        s_12_reg_954 <= grp_keccak_absorb_fu_721_ap_return_12;
        s_13_reg_959 <= grp_keccak_absorb_fu_721_ap_return_13;
        s_14_reg_964 <= grp_keccak_absorb_fu_721_ap_return_14;
        s_15_reg_969 <= grp_keccak_absorb_fu_721_ap_return_15;
        s_16_reg_974 <= grp_keccak_absorb_fu_721_ap_return_16;
        s_1_reg_899 <= grp_keccak_absorb_fu_721_ap_return_1;
        s_2_reg_904 <= grp_keccak_absorb_fu_721_ap_return_2;
        s_3_reg_909 <= grp_keccak_absorb_fu_721_ap_return_3;
        s_4_reg_914 <= grp_keccak_absorb_fu_721_ap_return_4;
        s_5_reg_919 <= grp_keccak_absorb_fu_721_ap_return_5;
        s_6_reg_924 <= grp_keccak_absorb_fu_721_ap_return_6;
        s_7_reg_929 <= grp_keccak_absorb_fu_721_ap_return_7;
        s_8_reg_934 <= grp_keccak_absorb_fu_721_ap_return_8;
        s_9_reg_939 <= grp_keccak_absorb_fu_721_ap_return_9;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_store64_fu_733_u = newret24_i_reg_1054;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_store64_fu_733_u = newret23_i_reg_1049;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_store64_fu_733_u = newret22_i_reg_1044;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_store64_fu_733_u = newret21_i_reg_1039;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_store64_fu_733_u = newret20_i_reg_1034;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_store64_fu_733_u = newret19_i_reg_1029;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_store64_fu_733_u = newret18_i_reg_1024;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_store64_fu_733_u = newret17_i_reg_1019;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_store64_fu_733_u = newret15_i_reg_1014;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_store64_fu_733_u = newret13_i_reg_1009;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_store64_fu_733_u = newret11_i_reg_1004;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_store64_fu_733_u = newret9_i_reg_999;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_store64_fu_733_u = newret7_i_reg_994;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_store64_fu_733_u = newret5_i_reg_989;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_store64_fu_733_u = newret3_i_reg_984;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_store64_fu_733_u = newret1_i_reg_979;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_store64_fu_733_u = grp_KeccakF1600_StatePer_fu_700_ap_return_0;
    end else begin
        grp_store64_fu_733_u = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_store64_fu_733_x_offset = 9'd128;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_store64_fu_733_x_offset = 9'd120;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_store64_fu_733_x_offset = 9'd112;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_store64_fu_733_x_offset = 9'd104;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_store64_fu_733_x_offset = 9'd96;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_store64_fu_733_x_offset = 9'd88;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_store64_fu_733_x_offset = 9'd80;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_store64_fu_733_x_offset = 9'd72;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_store64_fu_733_x_offset = 9'd64;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_store64_fu_733_x_offset = 9'd56;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_store64_fu_733_x_offset = 9'd48;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_store64_fu_733_x_offset = 9'd40;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_store64_fu_733_x_offset = 9'd32;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_store64_fu_733_x_offset = 9'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_store64_fu_733_x_offset = 9'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_store64_fu_733_x_offset = 9'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_store64_fu_733_x_offset = 9'd0;
    end else begin
        grp_store64_fu_733_x_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        h_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        h_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        h_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        h_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        h_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        h_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        h_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        h_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        h_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        h_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        h_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        h_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        h_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        h_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        h_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        h_address0 = 64'd0;
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        h_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        h_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        h_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        h_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        h_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        h_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        h_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        h_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        h_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        h_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        h_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        h_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        h_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        h_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        h_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        h_address1 = 64'd1;
    end else begin
        h_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state94))) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state94))) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state94))) begin
        h_we0 = 1'b1;
    end else begin
        h_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state94))) begin
        h_we1 = 1'b1;
    end else begin
        h_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        out_assign_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        out_assign_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        out_assign_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        out_assign_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        out_assign_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        out_assign_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        out_assign_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        out_assign_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        out_assign_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        out_assign_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        out_assign_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        out_assign_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        out_assign_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        out_assign_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        out_assign_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        out_assign_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75))) begin
        out_assign_address0 = grp_store64_fu_733_x_address0;
    end else begin
        out_assign_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        out_assign_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        out_assign_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        out_assign_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        out_assign_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        out_assign_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        out_assign_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        out_assign_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        out_assign_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        out_assign_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        out_assign_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        out_assign_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        out_assign_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        out_assign_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        out_assign_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        out_assign_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        out_assign_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75))) begin
        out_assign_address1 = grp_store64_fu_733_x_address1;
    end else begin
        out_assign_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78))) begin
        out_assign_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75))) begin
        out_assign_ce0 = grp_store64_fu_733_x_ce0;
    end else begin
        out_assign_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78))) begin
        out_assign_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75))) begin
        out_assign_ce1 = grp_store64_fu_733_x_ce1;
    end else begin
        out_assign_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75))) begin
        out_assign_we0 = grp_store64_fu_733_x_we0;
    end else begin
        out_assign_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state75))) begin
        out_assign_we1 = grp_store64_fu_733_x_we1;
    end else begin
        out_assign_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_keccak_absorb_fu_721_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_NS_fsm_state10 = ap_NS_fsm[32'd9];

assign ap_NS_fsm_state14 = ap_NS_fsm[32'd13];

assign ap_NS_fsm_state18 = ap_NS_fsm[32'd17];

assign ap_NS_fsm_state22 = ap_NS_fsm[32'd21];

assign ap_NS_fsm_state26 = ap_NS_fsm[32'd25];

assign ap_NS_fsm_state30 = ap_NS_fsm[32'd29];

assign ap_NS_fsm_state34 = ap_NS_fsm[32'd33];

assign ap_NS_fsm_state38 = ap_NS_fsm[32'd37];

assign ap_NS_fsm_state42 = ap_NS_fsm[32'd41];

assign ap_NS_fsm_state46 = ap_NS_fsm[32'd45];

assign ap_NS_fsm_state50 = ap_NS_fsm[32'd49];

assign ap_NS_fsm_state54 = ap_NS_fsm[32'd53];

assign ap_NS_fsm_state58 = ap_NS_fsm[32'd57];

assign ap_NS_fsm_state62 = ap_NS_fsm[32'd61];

assign ap_NS_fsm_state66 = ap_NS_fsm[32'd65];

assign ap_NS_fsm_state70 = ap_NS_fsm[32'd69];

assign ap_NS_fsm_state74 = ap_NS_fsm[32'd73];

assign grp_keccak_absorb_fu_721_ap_start = grp_keccak_absorb_fu_721_ap_start_reg;

assign grp_store64_fu_733_ap_start = grp_store64_fu_733_ap_start_reg;

assign h_d0 = out_assign_q0;

assign h_d1 = out_assign_q1;

assign in_r_address0 = grp_keccak_absorb_fu_721_m_address0;

assign in_r_address1 = grp_keccak_absorb_fu_721_m_address1;

assign in_r_ce0 = grp_keccak_absorb_fu_721_m_ce0;

assign in_r_ce1 = grp_keccak_absorb_fu_721_m_ce1;

endmodule //pqcrystals_fips202_ref_sha3_256
