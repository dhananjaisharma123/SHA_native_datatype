// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_absorb.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_absorb::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_absorb::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<36> keccak_absorb::ap_ST_fsm_state1 = "1";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state2 = "10";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state3 = "100";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state4 = "1000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state5 = "10000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state6 = "100000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state7 = "1000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state8 = "10000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state9 = "100000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state10 = "1000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state11 = "10000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state12 = "100000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<36> keccak_absorb::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_1 = "1";
const sc_lv<32> keccak_absorb::ap_const_lv32_D = "1101";
const sc_lv<32> keccak_absorb::ap_const_lv32_E = "1110";
const sc_lv<32> keccak_absorb::ap_const_lv32_F = "1111";
const sc_lv<1> keccak_absorb::ap_const_lv1_0 = "0";
const sc_lv<1> keccak_absorb::ap_const_lv1_1 = "1";
const sc_lv<32> keccak_absorb::ap_const_lv32_10 = "10000";
const sc_lv<32> keccak_absorb::ap_const_lv32_11 = "10001";
const sc_lv<32> keccak_absorb::ap_const_lv32_12 = "10010";
const sc_lv<32> keccak_absorb::ap_const_lv32_14 = "10100";
const sc_lv<32> keccak_absorb::ap_const_lv32_15 = "10101";
const sc_lv<32> keccak_absorb::ap_const_lv32_16 = "10110";
const sc_lv<32> keccak_absorb::ap_const_lv32_19 = "11001";
const sc_lv<32> keccak_absorb::ap_const_lv32_1B = "11011";
const sc_lv<32> keccak_absorb::ap_const_lv32_1C = "11100";
const sc_lv<32> keccak_absorb::ap_const_lv32_1D = "11101";
const sc_lv<32> keccak_absorb::ap_const_lv32_1E = "11110";
const sc_lv<32> keccak_absorb::ap_const_lv32_1F = "11111";
const sc_lv<32> keccak_absorb::ap_const_lv32_20 = "100000";
const sc_lv<32> keccak_absorb::ap_const_lv32_21 = "100001";
const sc_lv<32> keccak_absorb::ap_const_lv32_22 = "100010";
const sc_lv<8> keccak_absorb::ap_const_lv8_0 = "00000000";
const sc_lv<64> keccak_absorb::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<5> keccak_absorb::ap_const_lv5_0 = "00000";
const sc_lv<32> keccak_absorb::ap_const_lv32_13 = "10011";
const sc_lv<32> keccak_absorb::ap_const_lv32_17 = "10111";
const sc_lv<32> keccak_absorb::ap_const_lv32_1A = "11010";
const sc_lv<32> keccak_absorb::ap_const_lv32_23 = "100011";
const sc_lv<64> keccak_absorb::ap_const_lv64_1 = "1";
const sc_lv<32> keccak_absorb::ap_const_lv32_2 = "10";
const sc_lv<64> keccak_absorb::ap_const_lv64_2 = "10";
const sc_lv<64> keccak_absorb::ap_const_lv64_3 = "11";
const sc_lv<32> keccak_absorb::ap_const_lv32_3 = "11";
const sc_lv<64> keccak_absorb::ap_const_lv64_4 = "100";
const sc_lv<64> keccak_absorb::ap_const_lv64_5 = "101";
const sc_lv<32> keccak_absorb::ap_const_lv32_4 = "100";
const sc_lv<64> keccak_absorb::ap_const_lv64_6 = "110";
const sc_lv<64> keccak_absorb::ap_const_lv64_7 = "111";
const sc_lv<32> keccak_absorb::ap_const_lv32_5 = "101";
const sc_lv<64> keccak_absorb::ap_const_lv64_8 = "1000";
const sc_lv<64> keccak_absorb::ap_const_lv64_9 = "1001";
const sc_lv<32> keccak_absorb::ap_const_lv32_6 = "110";
const sc_lv<64> keccak_absorb::ap_const_lv64_A = "1010";
const sc_lv<64> keccak_absorb::ap_const_lv64_B = "1011";
const sc_lv<32> keccak_absorb::ap_const_lv32_7 = "111";
const sc_lv<64> keccak_absorb::ap_const_lv64_C = "1100";
const sc_lv<64> keccak_absorb::ap_const_lv64_D = "1101";
const sc_lv<32> keccak_absorb::ap_const_lv32_8 = "1000";
const sc_lv<64> keccak_absorb::ap_const_lv64_E = "1110";
const sc_lv<64> keccak_absorb::ap_const_lv64_F = "1111";
const sc_lv<32> keccak_absorb::ap_const_lv32_9 = "1001";
const sc_lv<64> keccak_absorb::ap_const_lv64_10 = "10000";
const sc_lv<64> keccak_absorb::ap_const_lv64_11 = "10001";
const sc_lv<32> keccak_absorb::ap_const_lv32_A = "1010";
const sc_lv<64> keccak_absorb::ap_const_lv64_12 = "10010";
const sc_lv<64> keccak_absorb::ap_const_lv64_13 = "10011";
const sc_lv<32> keccak_absorb::ap_const_lv32_B = "1011";
const sc_lv<64> keccak_absorb::ap_const_lv64_14 = "10100";
const sc_lv<64> keccak_absorb::ap_const_lv64_15 = "10101";
const sc_lv<32> keccak_absorb::ap_const_lv32_C = "1100";
const sc_lv<64> keccak_absorb::ap_const_lv64_16 = "10110";
const sc_lv<64> keccak_absorb::ap_const_lv64_17 = "10111";
const sc_lv<64> keccak_absorb::ap_const_lv64_18 = "11000";
const sc_lv<32> keccak_absorb::ap_const_lv32_18 = "11000";
const sc_lv<64> keccak_absorb::ap_const_lv64_87 = "10000111";
const sc_lv<8> keccak_absorb::ap_const_lv8_6 = "110";
const sc_lv<8> keccak_absorb::ap_const_lv8_1 = "1";
const sc_lv<8> keccak_absorb::ap_const_lv8_C7 = "11000111";
const sc_lv<8> keccak_absorb::ap_const_lv8_87 = "10000111";
const sc_lv<5> keccak_absorb::ap_const_lv5_11 = "10001";
const sc_lv<5> keccak_absorb::ap_const_lv5_1 = "1";
const sc_lv<3> keccak_absorb::ap_const_lv3_0 = "000";
const sc_lv<14> keccak_absorb::ap_const_lv14_1 = "1";
const sc_lv<64> keccak_absorb::ap_const_lv64_88 = "10001000";
const sc_lv<8> keccak_absorb::ap_const_lv8_78 = "1111000";
const sc_lv<14> keccak_absorb::ap_const_lv14_2 = "10";
const sc_lv<14> keccak_absorb::ap_const_lv14_3 = "11";
const sc_lv<14> keccak_absorb::ap_const_lv14_4 = "100";
const sc_lv<14> keccak_absorb::ap_const_lv14_5 = "101";
const sc_lv<14> keccak_absorb::ap_const_lv14_6 = "110";
const sc_lv<14> keccak_absorb::ap_const_lv14_7 = "111";
const sc_lv<64> keccak_absorb::ap_const_lv64_FFFFFFFFFFFFFF78 = "1111111111111111111111111111111111111111111111111111111101111000";
const sc_lv<8> keccak_absorb::ap_const_lv8_2 = "10";
const sc_lv<8> keccak_absorb::ap_const_lv8_80 = "10000000";
const sc_lv<8> keccak_absorb::ap_const_lv8_3 = "11";
const sc_lv<8> keccak_absorb::ap_const_lv8_4 = "100";
const sc_lv<8> keccak_absorb::ap_const_lv8_5 = "101";
const sc_lv<8> keccak_absorb::ap_const_lv8_7 = "111";
const sc_lv<5> keccak_absorb::ap_const_lv5_2 = "10";
const bool keccak_absorb::ap_const_boolean_1 = true;

keccak_absorb::keccak_absorb(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new keccak_absorb_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->q1(t_q1);
    grp_KeccakF1600_StatePer_fu_736 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_736");
    grp_KeccakF1600_StatePer_fu_736->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_736->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_736->ap_start(grp_KeccakF1600_StatePer_fu_736_ap_start);
    grp_KeccakF1600_StatePer_fu_736->ap_done(grp_KeccakF1600_StatePer_fu_736_ap_done);
    grp_KeccakF1600_StatePer_fu_736->ap_idle(grp_KeccakF1600_StatePer_fu_736_ap_idle);
    grp_KeccakF1600_StatePer_fu_736->ap_ready(grp_KeccakF1600_StatePer_fu_736_ap_ready);
    grp_KeccakF1600_StatePer_fu_736->state_address0(grp_KeccakF1600_StatePer_fu_736_state_address0);
    grp_KeccakF1600_StatePer_fu_736->state_ce0(grp_KeccakF1600_StatePer_fu_736_state_ce0);
    grp_KeccakF1600_StatePer_fu_736->state_we0(grp_KeccakF1600_StatePer_fu_736_state_we0);
    grp_KeccakF1600_StatePer_fu_736->state_d0(grp_KeccakF1600_StatePer_fu_736_state_d0);
    grp_KeccakF1600_StatePer_fu_736->state_q0(s_q0);
    grp_KeccakF1600_StatePer_fu_736->state_address1(grp_KeccakF1600_StatePer_fu_736_state_address1);
    grp_KeccakF1600_StatePer_fu_736->state_ce1(grp_KeccakF1600_StatePer_fu_736_state_ce1);
    grp_KeccakF1600_StatePer_fu_736->state_we1(grp_KeccakF1600_StatePer_fu_736_state_we1);
    grp_KeccakF1600_StatePer_fu_736->state_d1(grp_KeccakF1600_StatePer_fu_736_state_d1);
    grp_KeccakF1600_StatePer_fu_736->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_3_reg_1409 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_15_1_fu_1117_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_3_reg_1409 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_15_1_fu_1117_p2 );

    SC_METHOD(thread_exitcond_1_fu_961_p2);
    sensitive << ( exitcond_reg_1377 );
    sensitive << ( tmp_14_cast_fu_957_p1 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( i_reg_668 );

    SC_METHOD(thread_exitcond_fu_931_p2);
    sensitive << ( i_2_cast_fu_927_p1 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( i_reg_668 );

    SC_METHOD(thread_ff_1_fu_830_p2);
    sensitive << ( ff1_reg_691 );

    SC_METHOD(thread_ff_fu_761_p1);
    sensitive << ( mlen );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_fu_736_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_ap_start_reg );

    SC_METHOD(thread_i_1_cast8_fu_774_p1);
    sensitive << ( i_1_reg_701 );

    SC_METHOD(thread_i_2_cast6_fu_923_p1);
    sensitive << ( i_2_reg_712 );

    SC_METHOD(thread_i_2_cast_fu_927_p1);
    sensitive << ( i_2_reg_712 );

    SC_METHOD(thread_i_3_fu_785_p2);
    sensitive << ( i_1_reg_701 );

    SC_METHOD(thread_i_7_1_fu_1147_p2);
    sensitive << ( i_s_reg_724 );

    SC_METHOD(thread_i_7_cast2_fu_1112_p1);
    sensitive << ( i_7_s_fu_1106_p2 );

    SC_METHOD(thread_i_7_s_fu_1106_p2);
    sensitive << ( i_s_reg_724 );

    SC_METHOD(thread_i_cast4_fu_990_p1);
    sensitive << ( i_s_reg_724 );

    SC_METHOD(thread_indvarinc_fu_744_p2);
    sensitive << ( invdar_reg_657 );

    SC_METHOD(thread_m_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( sum7_cast_fu_808_p1 );
    sensitive << ( sum_2_i_cast_fu_841_p1 );
    sensitive << ( sum_4_i_cast_fu_861_p1 );
    sensitive << ( sum_6_i_cast_fu_881_p1 );
    sensitive << ( sum9_cast_fu_942_p1 );

    SC_METHOD(thread_m_address1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( sum_1_i_cast_fu_819_p1 );
    sensitive << ( sum_3_i_cast_fu_851_p1 );
    sensitive << ( sum_5_i_cast_fu_871_p1 );
    sensitive << ( sum_7_i_cast_fu_891_p1 );
    sensitive << ( sum9_1_cast_fu_972_p1 );

    SC_METHOD(thread_m_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_m_ce1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_mlen_assign_fu_917_p2);
    sensitive << ( i_reg_668 );

    SC_METHOD(thread_p_rec_fu_824_p2);
    sensitive << ( p_0_rec_reg_679 );

    SC_METHOD(thread_r_1_7_i1_fu_1085_p9);
    sensitive << ( t_q0 );
    sensitive << ( t_load_1_reg_1439 );
    sensitive << ( t_q1 );
    sensitive << ( t_load_2_reg_1444 );
    sensitive << ( t_load_3_reg_1459 );
    sensitive << ( t_load_4_reg_1464 );
    sensitive << ( t_load_5_reg_1479 );
    sensitive << ( t_load_6_reg_1484 );

    SC_METHOD(thread_r_1_7_i2_fu_1213_p9);
    sensitive << ( t_q0 );
    sensitive << ( t_q1 );
    sensitive << ( t_load_9_reg_1533 );
    sensitive << ( t_load_10_reg_1538 );
    sensitive << ( t_load_11_reg_1553 );
    sensitive << ( t_load_12_reg_1558 );
    sensitive << ( t_load_13_reg_1573 );
    sensitive << ( t_load_14_reg_1578 );

    SC_METHOD(thread_r_1_7_i_fu_896_p9);
    sensitive << ( m_q0 );
    sensitive << ( m_q1 );
    sensitive << ( m_load_2_reg_1307 );
    sensitive << ( m_load_3_reg_1312 );
    sensitive << ( m_load_4_reg_1327 );
    sensitive << ( m_load_5_reg_1332 );
    sensitive << ( m_load_6_reg_1347 );
    sensitive << ( m_load_7_reg_1352 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( s_addr_13_reg_1291 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( s_addr_26_reg_1433 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( s_addr_27_reg_1522 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_state_address0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_address1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( s_addr_13_reg_1291 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( s_addr_26_reg_1433 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( s_addr_27_reg_1522 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_state_address1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_state_ce0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_state_ce1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_state_d0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_4_fu_910_p2 );
    sensitive << ( tmp_7_fu_1099_p2 );
    sensitive << ( tmp_18_1_fu_1227_p2 );

    SC_METHOD(thread_s_d1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_state_d1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_3_reg_1409 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_state_we0 );
    sensitive << ( tmp_s_fu_755_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_s_we1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_state_we1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_sum7_cast_fu_808_p1);
    sensitive << ( sum7_fu_803_p2 );

    SC_METHOD(thread_sum7_fu_803_p2);
    sensitive << ( tmp_11_reg_1253 );
    sensitive << ( tmp_2_cast_fu_799_p1 );

    SC_METHOD(thread_sum9_1_cast_fu_972_p1);
    sensitive << ( sum9_1_fu_967_p2 );

    SC_METHOD(thread_sum9_1_fu_967_p2);
    sensitive << ( tmp_11_reg_1253 );
    sensitive << ( tmp_14_cast5_fu_953_p1 );

    SC_METHOD(thread_sum9_cast_fu_942_p1);
    sensitive << ( sum9_fu_937_p2 );

    SC_METHOD(thread_sum9_fu_937_p2);
    sensitive << ( tmp_11_reg_1253 );
    sensitive << ( i_2_cast6_fu_923_p1 );

    SC_METHOD(thread_sum_1_i1_cast_fu_1020_p1);
    sensitive << ( sum_1_i1_fu_1014_p2 );

    SC_METHOD(thread_sum_1_i1_fu_1014_p2);
    sensitive << ( tmp_6_fu_1001_p3 );

    SC_METHOD(thread_sum_1_i2_cast_fu_1142_p1);
    sensitive << ( sum_1_i2_fu_1136_p2 );

    SC_METHOD(thread_sum_1_i2_fu_1136_p2);
    sensitive << ( tmp_16_1_fu_1123_p3 );

    SC_METHOD(thread_sum_1_i_cast_fu_819_p1);
    sensitive << ( sum_1_i_fu_813_p2 );

    SC_METHOD(thread_sum_1_i_fu_813_p2);
    sensitive << ( sum7_fu_803_p2 );

    SC_METHOD(thread_sum_2_i1_cast_fu_1030_p1);
    sensitive << ( sum_2_i1_fu_1025_p2 );

    SC_METHOD(thread_sum_2_i1_fu_1025_p2);
    sensitive << ( tmp_6_reg_1413 );

    SC_METHOD(thread_sum_2_i2_cast_fu_1158_p1);
    sensitive << ( sum_2_i2_fu_1153_p2 );

    SC_METHOD(thread_sum_2_i2_fu_1153_p2);
    sensitive << ( tmp_16_1_reg_1502 );

    SC_METHOD(thread_sum_2_i_cast_fu_841_p1);
    sensitive << ( sum_2_i_fu_836_p2 );

    SC_METHOD(thread_sum_2_i_fu_836_p2);
    sensitive << ( sum7_reg_1271 );

    SC_METHOD(thread_sum_3_i1_cast_fu_1040_p1);
    sensitive << ( sum_3_i1_fu_1035_p2 );

    SC_METHOD(thread_sum_3_i1_fu_1035_p2);
    sensitive << ( tmp_6_reg_1413 );

    SC_METHOD(thread_sum_3_i2_cast_fu_1168_p1);
    sensitive << ( sum_3_i2_fu_1163_p2 );

    SC_METHOD(thread_sum_3_i2_fu_1163_p2);
    sensitive << ( tmp_16_1_reg_1502 );

    SC_METHOD(thread_sum_3_i_cast_fu_851_p1);
    sensitive << ( sum_3_i_fu_846_p2 );

    SC_METHOD(thread_sum_3_i_fu_846_p2);
    sensitive << ( sum7_reg_1271 );

    SC_METHOD(thread_sum_4_i1_cast_fu_1050_p1);
    sensitive << ( sum_4_i1_fu_1045_p2 );

    SC_METHOD(thread_sum_4_i1_fu_1045_p2);
    sensitive << ( tmp_6_reg_1413 );

    SC_METHOD(thread_sum_4_i2_cast_fu_1178_p1);
    sensitive << ( sum_4_i2_fu_1173_p2 );

    SC_METHOD(thread_sum_4_i2_fu_1173_p2);
    sensitive << ( tmp_16_1_reg_1502 );

    SC_METHOD(thread_sum_4_i_cast_fu_861_p1);
    sensitive << ( sum_4_i_fu_856_p2 );

    SC_METHOD(thread_sum_4_i_fu_856_p2);
    sensitive << ( sum7_reg_1271 );

    SC_METHOD(thread_sum_5_i1_cast_fu_1060_p1);
    sensitive << ( sum_5_i1_fu_1055_p2 );

    SC_METHOD(thread_sum_5_i1_fu_1055_p2);
    sensitive << ( tmp_6_reg_1413 );

    SC_METHOD(thread_sum_5_i2_cast_fu_1188_p1);
    sensitive << ( sum_5_i2_fu_1183_p2 );

    SC_METHOD(thread_sum_5_i2_fu_1183_p2);
    sensitive << ( tmp_16_1_reg_1502 );

    SC_METHOD(thread_sum_5_i_cast_fu_871_p1);
    sensitive << ( sum_5_i_fu_866_p2 );

    SC_METHOD(thread_sum_5_i_fu_866_p2);
    sensitive << ( sum7_reg_1271 );

    SC_METHOD(thread_sum_6_i1_cast_fu_1070_p1);
    sensitive << ( sum_6_i1_fu_1065_p2 );

    SC_METHOD(thread_sum_6_i1_fu_1065_p2);
    sensitive << ( tmp_6_reg_1413 );

    SC_METHOD(thread_sum_6_i2_cast_fu_1198_p1);
    sensitive << ( sum_6_i2_fu_1193_p2 );

    SC_METHOD(thread_sum_6_i2_fu_1193_p2);
    sensitive << ( tmp_16_1_reg_1502 );

    SC_METHOD(thread_sum_6_i_cast_fu_881_p1);
    sensitive << ( sum_6_i_fu_876_p2 );

    SC_METHOD(thread_sum_6_i_fu_876_p2);
    sensitive << ( sum7_reg_1271 );

    SC_METHOD(thread_sum_7_i1_cast_fu_1080_p1);
    sensitive << ( sum_7_i1_fu_1075_p2 );

    SC_METHOD(thread_sum_7_i1_fu_1075_p2);
    sensitive << ( tmp_6_reg_1413 );

    SC_METHOD(thread_sum_7_i2_cast_fu_1208_p1);
    sensitive << ( sum_7_i2_fu_1203_p2 );

    SC_METHOD(thread_sum_7_i2_fu_1203_p2);
    sensitive << ( tmp_16_1_reg_1502 );

    SC_METHOD(thread_sum_7_i_cast_fu_891_p1);
    sensitive << ( sum_7_i_fu_886_p2 );

    SC_METHOD(thread_sum_7_i_fu_886_p2);
    sensitive << ( sum7_reg_1271 );

    SC_METHOD(thread_t_addr_3_reg_1404);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_2_cast_reg_1372 );
    sensitive << ( tmp_14_cast_reg_1386 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( t_addr_3_reg_1404 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( i_reg_668 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( tmp_fu_750_p1 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_6_cast_fu_1009_p1 );
    sensitive << ( sum_3_i1_cast_fu_1040_p1 );
    sensitive << ( sum_5_i1_cast_fu_1060_p1 );
    sensitive << ( sum_7_i1_cast_fu_1080_p1 );
    sensitive << ( sum_1_i2_cast_fu_1142_p1 );
    sensitive << ( sum_3_i2_cast_fu_1168_p1 );
    sensitive << ( sum_5_i2_cast_fu_1188_p1 );
    sensitive << ( sum_7_i2_cast_fu_1208_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( sum_1_i1_cast_fu_1020_p1 );
    sensitive << ( sum_2_i1_cast_fu_1030_p1 );
    sensitive << ( sum_4_i1_cast_fu_1050_p1 );
    sensitive << ( sum_6_i1_cast_fu_1070_p1 );
    sensitive << ( tmp_16_1_cast_fu_1131_p1 );
    sensitive << ( sum_2_i2_cast_fu_1158_p1 );
    sensitive << ( sum_4_i2_cast_fu_1178_p1 );
    sensitive << ( sum_6_i2_cast_fu_1198_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_t_d0);
    sensitive << ( m_q0 );
    sensitive << ( m_q1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_5_fu_983_p2 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_reg_1377 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_tmp_11_fu_764_p1);
    sensitive << ( p_0_rec_reg_679 );

    SC_METHOD(thread_tmp_14_1_fu_977_p2);
    sensitive << ( i_2_reg_712 );

    SC_METHOD(thread_tmp_14_cast5_fu_953_p1);
    sensitive << ( tmp_14_s_fu_947_p2 );

    SC_METHOD(thread_tmp_14_cast_fu_957_p1);
    sensitive << ( tmp_14_s_fu_947_p2 );

    SC_METHOD(thread_tmp_14_s_fu_947_p2);
    sensitive << ( i_2_reg_712 );

    SC_METHOD(thread_tmp_15_1_fu_1117_p2);
    sensitive << ( tmp_3_reg_1409 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( i_7_s_fu_1106_p2 );

    SC_METHOD(thread_tmp_16_1_cast_fu_1131_p1);
    sensitive << ( tmp_16_1_fu_1123_p3 );

    SC_METHOD(thread_tmp_16_1_fu_1123_p3);
    sensitive << ( i_7_s_fu_1106_p2 );

    SC_METHOD(thread_tmp_18_1_fu_1227_p2);
    sensitive << ( s_q1 );
    sensitive << ( r_1_7_i2_fu_1213_p9 );

    SC_METHOD(thread_tmp_2_cast_fu_799_p1);
    sensitive << ( tmp_2_fu_791_p3 );

    SC_METHOD(thread_tmp_2_fu_791_p3);
    sensitive << ( i_1_reg_701 );

    SC_METHOD(thread_tmp_3_fu_995_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( i_s_reg_724 );

    SC_METHOD(thread_tmp_4_fu_910_p2);
    sensitive << ( s_q1 );
    sensitive << ( r_1_7_i_fu_896_p9 );

    SC_METHOD(thread_tmp_5_fu_983_p2);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_6_cast_fu_1009_p1);
    sensitive << ( tmp_6_fu_1001_p3 );

    SC_METHOD(thread_tmp_6_fu_1001_p3);
    sensitive << ( i_s_reg_724 );

    SC_METHOD(thread_tmp_7_fu_1099_p2);
    sensitive << ( s_q1 );
    sensitive << ( r_1_7_i1_fu_1085_p9 );

    SC_METHOD(thread_tmp_8_fu_768_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ff1_reg_691 );

    SC_METHOD(thread_tmp_9_fu_779_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( i_1_reg_701 );

    SC_METHOD(thread_tmp_fu_750_p1);
    sensitive << ( invdar_reg_657 );

    SC_METHOD(thread_tmp_s_fu_755_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( invdar_reg_657 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_9_fu_779_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_736_ap_done );
    sensitive << ( exitcond_reg_1377 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( exitcond_1_fu_961_p2 );
    sensitive << ( tmp_3_fu_995_p2 );
    sensitive << ( tmp_3_reg_1409 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( tmp_15_1_fu_1117_p2 );
    sensitive << ( tmp_s_fu_755_p2 );
    sensitive << ( tmp_8_fu_768_p2 );

    ap_CS_fsm = "000000000000000000000000000000000001";
    grp_KeccakF1600_StatePer_fu_736_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_absorb_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
    sc_trace(mVcdFile, m_address0, "(port)m_address0");
    sc_trace(mVcdFile, m_ce0, "(port)m_ce0");
    sc_trace(mVcdFile, m_q0, "(port)m_q0");
    sc_trace(mVcdFile, m_address1, "(port)m_address1");
    sc_trace(mVcdFile, m_ce1, "(port)m_ce1");
    sc_trace(mVcdFile, m_q1, "(port)m_q1");
    sc_trace(mVcdFile, mlen, "(port)mlen");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvarinc_fu_744_p2, "indvarinc_fu_744_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ff_fu_761_p1, "ff_fu_761_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_11_fu_764_p1, "tmp_11_fu_764_p1");
    sc_trace(mVcdFile, tmp_11_reg_1253, "tmp_11_reg_1253");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, i_3_fu_785_p2, "i_3_fu_785_p2");
    sc_trace(mVcdFile, i_3_reg_1266, "i_3_reg_1266");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, sum7_fu_803_p2, "sum7_fu_803_p2");
    sc_trace(mVcdFile, sum7_reg_1271, "sum7_reg_1271");
    sc_trace(mVcdFile, tmp_9_fu_779_p2, "tmp_9_fu_779_p2");
    sc_trace(mVcdFile, s_addr_13_reg_1291, "s_addr_13_reg_1291");
    sc_trace(mVcdFile, p_rec_fu_824_p2, "p_rec_fu_824_p2");
    sc_trace(mVcdFile, p_rec_reg_1297, "p_rec_reg_1297");
    sc_trace(mVcdFile, ff_1_fu_830_p2, "ff_1_fu_830_p2");
    sc_trace(mVcdFile, ff_1_reg_1302, "ff_1_reg_1302");
    sc_trace(mVcdFile, m_load_2_reg_1307, "m_load_2_reg_1307");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, m_load_3_reg_1312, "m_load_3_reg_1312");
    sc_trace(mVcdFile, m_load_4_reg_1327, "m_load_4_reg_1327");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, m_load_5_reg_1332, "m_load_5_reg_1332");
    sc_trace(mVcdFile, m_load_6_reg_1347, "m_load_6_reg_1347");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, m_load_7_reg_1352, "m_load_7_reg_1352");
    sc_trace(mVcdFile, mlen_assign_fu_917_p2, "mlen_assign_fu_917_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_ap_ready, "grp_KeccakF1600_StatePer_fu_736_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_ap_done, "grp_KeccakF1600_StatePer_fu_736_ap_done");
    sc_trace(mVcdFile, i_2_cast_fu_927_p1, "i_2_cast_fu_927_p1");
    sc_trace(mVcdFile, i_2_cast_reg_1372, "i_2_cast_reg_1372");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, exitcond_fu_931_p2, "exitcond_fu_931_p2");
    sc_trace(mVcdFile, exitcond_reg_1377, "exitcond_reg_1377");
    sc_trace(mVcdFile, tmp_14_cast_fu_957_p1, "tmp_14_cast_fu_957_p1");
    sc_trace(mVcdFile, tmp_14_cast_reg_1386, "tmp_14_cast_reg_1386");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, exitcond_1_fu_961_p2, "exitcond_1_fu_961_p2");
    sc_trace(mVcdFile, tmp_14_1_fu_977_p2, "tmp_14_1_fu_977_p2");
    sc_trace(mVcdFile, tmp_14_1_reg_1399, "tmp_14_1_reg_1399");
    sc_trace(mVcdFile, t_addr_3_reg_1404, "t_addr_3_reg_1404");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_3_fu_995_p2, "tmp_3_fu_995_p2");
    sc_trace(mVcdFile, tmp_3_reg_1409, "tmp_3_reg_1409");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_6_fu_1001_p3, "tmp_6_fu_1001_p3");
    sc_trace(mVcdFile, tmp_6_reg_1413, "tmp_6_reg_1413");
    sc_trace(mVcdFile, s_addr_26_reg_1433, "s_addr_26_reg_1433");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_load_1_reg_1439, "t_load_1_reg_1439");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, t_load_2_reg_1444, "t_load_2_reg_1444");
    sc_trace(mVcdFile, t_load_3_reg_1459, "t_load_3_reg_1459");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, t_load_4_reg_1464, "t_load_4_reg_1464");
    sc_trace(mVcdFile, t_load_5_reg_1479, "t_load_5_reg_1479");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, t_load_6_reg_1484, "t_load_6_reg_1484");
    sc_trace(mVcdFile, tmp_16_1_fu_1123_p3, "tmp_16_1_fu_1123_p3");
    sc_trace(mVcdFile, tmp_16_1_reg_1502, "tmp_16_1_reg_1502");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, tmp_15_1_fu_1117_p2, "tmp_15_1_fu_1117_p2");
    sc_trace(mVcdFile, s_addr_27_reg_1522, "s_addr_27_reg_1522");
    sc_trace(mVcdFile, i_7_1_fu_1147_p2, "i_7_1_fu_1147_p2");
    sc_trace(mVcdFile, i_7_1_reg_1528, "i_7_1_reg_1528");
    sc_trace(mVcdFile, t_load_9_reg_1533, "t_load_9_reg_1533");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, t_load_10_reg_1538, "t_load_10_reg_1538");
    sc_trace(mVcdFile, t_load_11_reg_1553, "t_load_11_reg_1553");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, t_load_12_reg_1558, "t_load_12_reg_1558");
    sc_trace(mVcdFile, t_load_13_reg_1573, "t_load_13_reg_1573");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, t_load_14_reg_1578, "t_load_14_reg_1578");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_ap_start, "grp_KeccakF1600_StatePer_fu_736_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_ap_idle, "grp_KeccakF1600_StatePer_fu_736_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_state_address0, "grp_KeccakF1600_StatePer_fu_736_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_state_ce0, "grp_KeccakF1600_StatePer_fu_736_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_state_we0, "grp_KeccakF1600_StatePer_fu_736_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_state_d0, "grp_KeccakF1600_StatePer_fu_736_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_state_address1, "grp_KeccakF1600_StatePer_fu_736_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_state_ce1, "grp_KeccakF1600_StatePer_fu_736_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_state_we1, "grp_KeccakF1600_StatePer_fu_736_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_state_d1, "grp_KeccakF1600_StatePer_fu_736_state_d1");
    sc_trace(mVcdFile, invdar_reg_657, "invdar_reg_657");
    sc_trace(mVcdFile, tmp_s_fu_755_p2, "tmp_s_fu_755_p2");
    sc_trace(mVcdFile, i_reg_668, "i_reg_668");
    sc_trace(mVcdFile, p_0_rec_reg_679, "p_0_rec_reg_679");
    sc_trace(mVcdFile, ff1_reg_691, "ff1_reg_691");
    sc_trace(mVcdFile, i_1_reg_701, "i_1_reg_701");
    sc_trace(mVcdFile, tmp_8_fu_768_p2, "tmp_8_fu_768_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, i_2_reg_712, "i_2_reg_712");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, i_s_reg_724, "i_s_reg_724");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_736_ap_start_reg, "grp_KeccakF1600_StatePer_fu_736_ap_start_reg");
    sc_trace(mVcdFile, tmp_fu_750_p1, "tmp_fu_750_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, sum7_cast_fu_808_p1, "sum7_cast_fu_808_p1");
    sc_trace(mVcdFile, sum_1_i_cast_fu_819_p1, "sum_1_i_cast_fu_819_p1");
    sc_trace(mVcdFile, i_1_cast8_fu_774_p1, "i_1_cast8_fu_774_p1");
    sc_trace(mVcdFile, sum_2_i_cast_fu_841_p1, "sum_2_i_cast_fu_841_p1");
    sc_trace(mVcdFile, sum_3_i_cast_fu_851_p1, "sum_3_i_cast_fu_851_p1");
    sc_trace(mVcdFile, sum_4_i_cast_fu_861_p1, "sum_4_i_cast_fu_861_p1");
    sc_trace(mVcdFile, sum_5_i_cast_fu_871_p1, "sum_5_i_cast_fu_871_p1");
    sc_trace(mVcdFile, sum_6_i_cast_fu_881_p1, "sum_6_i_cast_fu_881_p1");
    sc_trace(mVcdFile, sum_7_i_cast_fu_891_p1, "sum_7_i_cast_fu_891_p1");
    sc_trace(mVcdFile, sum9_cast_fu_942_p1, "sum9_cast_fu_942_p1");
    sc_trace(mVcdFile, sum9_1_cast_fu_972_p1, "sum9_1_cast_fu_972_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, tmp_6_cast_fu_1009_p1, "tmp_6_cast_fu_1009_p1");
    sc_trace(mVcdFile, sum_1_i1_cast_fu_1020_p1, "sum_1_i1_cast_fu_1020_p1");
    sc_trace(mVcdFile, i_cast4_fu_990_p1, "i_cast4_fu_990_p1");
    sc_trace(mVcdFile, sum_2_i1_cast_fu_1030_p1, "sum_2_i1_cast_fu_1030_p1");
    sc_trace(mVcdFile, sum_3_i1_cast_fu_1040_p1, "sum_3_i1_cast_fu_1040_p1");
    sc_trace(mVcdFile, sum_4_i1_cast_fu_1050_p1, "sum_4_i1_cast_fu_1050_p1");
    sc_trace(mVcdFile, sum_5_i1_cast_fu_1060_p1, "sum_5_i1_cast_fu_1060_p1");
    sc_trace(mVcdFile, sum_6_i1_cast_fu_1070_p1, "sum_6_i1_cast_fu_1070_p1");
    sc_trace(mVcdFile, sum_7_i1_cast_fu_1080_p1, "sum_7_i1_cast_fu_1080_p1");
    sc_trace(mVcdFile, tmp_16_1_cast_fu_1131_p1, "tmp_16_1_cast_fu_1131_p1");
    sc_trace(mVcdFile, sum_1_i2_cast_fu_1142_p1, "sum_1_i2_cast_fu_1142_p1");
    sc_trace(mVcdFile, i_7_cast2_fu_1112_p1, "i_7_cast2_fu_1112_p1");
    sc_trace(mVcdFile, sum_2_i2_cast_fu_1158_p1, "sum_2_i2_cast_fu_1158_p1");
    sc_trace(mVcdFile, sum_3_i2_cast_fu_1168_p1, "sum_3_i2_cast_fu_1168_p1");
    sc_trace(mVcdFile, sum_4_i2_cast_fu_1178_p1, "sum_4_i2_cast_fu_1178_p1");
    sc_trace(mVcdFile, sum_5_i2_cast_fu_1188_p1, "sum_5_i2_cast_fu_1188_p1");
    sc_trace(mVcdFile, sum_6_i2_cast_fu_1198_p1, "sum_6_i2_cast_fu_1198_p1");
    sc_trace(mVcdFile, sum_7_i2_cast_fu_1208_p1, "sum_7_i2_cast_fu_1208_p1");
    sc_trace(mVcdFile, tmp_5_fu_983_p2, "tmp_5_fu_983_p2");
    sc_trace(mVcdFile, tmp_4_fu_910_p2, "tmp_4_fu_910_p2");
    sc_trace(mVcdFile, tmp_7_fu_1099_p2, "tmp_7_fu_1099_p2");
    sc_trace(mVcdFile, tmp_18_1_fu_1227_p2, "tmp_18_1_fu_1227_p2");
    sc_trace(mVcdFile, tmp_2_fu_791_p3, "tmp_2_fu_791_p3");
    sc_trace(mVcdFile, tmp_2_cast_fu_799_p1, "tmp_2_cast_fu_799_p1");
    sc_trace(mVcdFile, sum_1_i_fu_813_p2, "sum_1_i_fu_813_p2");
    sc_trace(mVcdFile, sum_2_i_fu_836_p2, "sum_2_i_fu_836_p2");
    sc_trace(mVcdFile, sum_3_i_fu_846_p2, "sum_3_i_fu_846_p2");
    sc_trace(mVcdFile, sum_4_i_fu_856_p2, "sum_4_i_fu_856_p2");
    sc_trace(mVcdFile, sum_5_i_fu_866_p2, "sum_5_i_fu_866_p2");
    sc_trace(mVcdFile, sum_6_i_fu_876_p2, "sum_6_i_fu_876_p2");
    sc_trace(mVcdFile, sum_7_i_fu_886_p2, "sum_7_i_fu_886_p2");
    sc_trace(mVcdFile, r_1_7_i_fu_896_p9, "r_1_7_i_fu_896_p9");
    sc_trace(mVcdFile, i_2_cast6_fu_923_p1, "i_2_cast6_fu_923_p1");
    sc_trace(mVcdFile, sum9_fu_937_p2, "sum9_fu_937_p2");
    sc_trace(mVcdFile, tmp_14_s_fu_947_p2, "tmp_14_s_fu_947_p2");
    sc_trace(mVcdFile, tmp_14_cast5_fu_953_p1, "tmp_14_cast5_fu_953_p1");
    sc_trace(mVcdFile, sum9_1_fu_967_p2, "sum9_1_fu_967_p2");
    sc_trace(mVcdFile, sum_1_i1_fu_1014_p2, "sum_1_i1_fu_1014_p2");
    sc_trace(mVcdFile, sum_2_i1_fu_1025_p2, "sum_2_i1_fu_1025_p2");
    sc_trace(mVcdFile, sum_3_i1_fu_1035_p2, "sum_3_i1_fu_1035_p2");
    sc_trace(mVcdFile, sum_4_i1_fu_1045_p2, "sum_4_i1_fu_1045_p2");
    sc_trace(mVcdFile, sum_5_i1_fu_1055_p2, "sum_5_i1_fu_1055_p2");
    sc_trace(mVcdFile, sum_6_i1_fu_1065_p2, "sum_6_i1_fu_1065_p2");
    sc_trace(mVcdFile, sum_7_i1_fu_1075_p2, "sum_7_i1_fu_1075_p2");
    sc_trace(mVcdFile, r_1_7_i1_fu_1085_p9, "r_1_7_i1_fu_1085_p9");
    sc_trace(mVcdFile, i_7_s_fu_1106_p2, "i_7_s_fu_1106_p2");
    sc_trace(mVcdFile, sum_1_i2_fu_1136_p2, "sum_1_i2_fu_1136_p2");
    sc_trace(mVcdFile, sum_2_i2_fu_1153_p2, "sum_2_i2_fu_1153_p2");
    sc_trace(mVcdFile, sum_3_i2_fu_1163_p2, "sum_3_i2_fu_1163_p2");
    sc_trace(mVcdFile, sum_4_i2_fu_1173_p2, "sum_4_i2_fu_1173_p2");
    sc_trace(mVcdFile, sum_5_i2_fu_1183_p2, "sum_5_i2_fu_1183_p2");
    sc_trace(mVcdFile, sum_6_i2_fu_1193_p2, "sum_6_i2_fu_1193_p2");
    sc_trace(mVcdFile, sum_7_i2_fu_1203_p2, "sum_7_i2_fu_1203_p2");
    sc_trace(mVcdFile, r_1_7_i2_fu_1213_p9, "r_1_7_i2_fu_1213_p9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

keccak_absorb::~keccak_absorb() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete grp_KeccakF1600_StatePer_fu_736;
}

void keccak_absorb::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ff1_reg_691 = ff_fu_761_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_736_ap_done.read(), ap_const_logic_1))) {
        ff1_reg_691 = ff_1_reg_1302.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_fu_736_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
             esl_seteq<1,1,1>(tmp_9_fu_779_p2.read(), ap_const_lv1_1))) {
            grp_KeccakF1600_StatePer_fu_736_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_fu_736_ap_ready.read())) {
            grp_KeccakF1600_StatePer_fu_736_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_1_reg_701 = i_3_reg_1266.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_768_p2.read()))) {
        i_1_reg_701 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_768_p2.read()))) {
        i_2_reg_712 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        i_2_reg_712 = tmp_14_1_reg_1399.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_reg_668 = mlen.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_736_ap_done.read(), ap_const_logic_1))) {
        i_reg_668 = mlen_assign_fu_917_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        i_s_reg_724 = i_7_1_reg_1528.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        i_s_reg_724 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_755_p2.read()))) {
        invdar_reg_657 = indvarinc_fu_744_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        invdar_reg_657 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_0_rec_reg_679 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_736_ap_done.read(), ap_const_logic_1))) {
        p_0_rec_reg_679 = p_rec_reg_1297.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        exitcond_reg_1377 = exitcond_fu_931_p2.read();
        i_2_cast_reg_1372 = i_2_cast_fu_927_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(tmp_9_fu_779_p2.read(), ap_const_lv1_1))) {
        ff_1_reg_1302 = ff_1_fu_830_p2.read();
        p_rec_reg_1297 = p_rec_fu_824_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_3_reg_1266 = i_3_fu_785_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1409.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_1_fu_1117_p2.read()))) {
        i_7_1_reg_1528 = i_7_1_fu_1147_p2.read();
        s_addr_27_reg_1522 =  (sc_lv<5>) (i_7_cast2_fu_1112_p1.read());
        tmp_16_1_reg_1502 = tmp_16_1_fu_1123_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        m_load_2_reg_1307 = m_q0.read();
        m_load_3_reg_1312 = m_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        m_load_4_reg_1327 = m_q0.read();
        m_load_5_reg_1332 = m_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        m_load_6_reg_1347 = m_q0.read();
        m_load_7_reg_1352 = m_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(tmp_9_fu_779_p2.read(), ap_const_lv1_0))) {
        s_addr_13_reg_1291 =  (sc_lv<5>) (i_1_cast8_fu_774_p1.read());
        sum7_reg_1271 = sum7_fu_803_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_995_p2.read()))) {
        s_addr_26_reg_1433 =  (sc_lv<5>) (i_cast4_fu_990_p1.read());
        tmp_6_reg_1413 = tmp_6_fu_1001_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        t_load_10_reg_1538 = t_q0.read();
        t_load_9_reg_1533 = t_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        t_load_11_reg_1553 = t_q1.read();
        t_load_12_reg_1558 = t_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        t_load_13_reg_1573 = t_q1.read();
        t_load_14_reg_1578 = t_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        t_load_1_reg_1439 = t_q0.read();
        t_load_2_reg_1444 = t_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        t_load_3_reg_1459 = t_q1.read();
        t_load_4_reg_1464 = t_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        t_load_5_reg_1479 = t_q1.read();
        t_load_6_reg_1484 = t_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_11_reg_1253 = tmp_11_fu_764_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1377.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_1_fu_961_p2.read()))) {
        tmp_14_1_reg_1399 = tmp_14_1_fu_977_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1377.read()))) {
        tmp_14_cast_reg_1386 = tmp_14_cast_fu_957_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tmp_3_reg_1409 = tmp_3_fu_995_p2.read();
    }
}

void keccak_absorb::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_absorb::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void keccak_absorb::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void keccak_absorb::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void keccak_absorb::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void keccak_absorb::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void keccak_absorb::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void keccak_absorb::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void keccak_absorb::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void keccak_absorb::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void keccak_absorb::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void keccak_absorb::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_absorb::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void keccak_absorb::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void keccak_absorb::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void keccak_absorb::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void keccak_absorb::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void keccak_absorb::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void keccak_absorb::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void keccak_absorb::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void keccak_absorb::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void keccak_absorb::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void keccak_absorb::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_absorb::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void keccak_absorb::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void keccak_absorb::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void keccak_absorb::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void keccak_absorb::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void keccak_absorb::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void keccak_absorb::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void keccak_absorb::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_absorb::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void keccak_absorb::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void keccak_absorb::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void keccak_absorb::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void keccak_absorb::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void keccak_absorb::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_1_fu_1117_p2.read()) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1409.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_1_fu_1117_p2.read()) || 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1409.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_absorb::thread_exitcond_1_fu_961_p2() {
    exitcond_1_fu_961_p2 = (!tmp_14_cast_fu_957_p1.read().is_01() || !i_reg_668.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_cast_fu_957_p1.read() == i_reg_668.read());
}

void keccak_absorb::thread_exitcond_fu_931_p2() {
    exitcond_fu_931_p2 = (!i_2_cast_fu_927_p1.read().is_01() || !i_reg_668.read().is_01())? sc_lv<1>(): sc_lv<1>(i_2_cast_fu_927_p1.read() == i_reg_668.read());
}

void keccak_absorb::thread_ff_1_fu_830_p2() {
    ff_1_fu_830_p2 = (!ff1_reg_691.read().is_01() || !ap_const_lv8_78.is_01())? sc_lv<8>(): (sc_biguint<8>(ff1_reg_691.read()) + sc_biguint<8>(ap_const_lv8_78));
}

void keccak_absorb::thread_ff_fu_761_p1() {
    ff_fu_761_p1 = mlen.read().range(8-1, 0);
}

void keccak_absorb::thread_grp_KeccakF1600_StatePer_fu_736_ap_start() {
    grp_KeccakF1600_StatePer_fu_736_ap_start = grp_KeccakF1600_StatePer_fu_736_ap_start_reg.read();
}

void keccak_absorb::thread_i_1_cast8_fu_774_p1() {
    i_1_cast8_fu_774_p1 = esl_zext<64,5>(i_1_reg_701.read());
}

void keccak_absorb::thread_i_2_cast6_fu_923_p1() {
    i_2_cast6_fu_923_p1 = esl_zext<14,8>(i_2_reg_712.read());
}

void keccak_absorb::thread_i_2_cast_fu_927_p1() {
    i_2_cast_fu_927_p1 = esl_zext<64,8>(i_2_reg_712.read());
}

void keccak_absorb::thread_i_3_fu_785_p2() {
    i_3_fu_785_p2 = (!i_1_reg_701.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_reg_701.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_7_1_fu_1147_p2() {
    i_7_1_fu_1147_p2 = (!i_s_reg_724.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(i_s_reg_724.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void keccak_absorb::thread_i_7_cast2_fu_1112_p1() {
    i_7_cast2_fu_1112_p1 = esl_zext<64,5>(i_7_s_fu_1106_p2.read());
}

void keccak_absorb::thread_i_7_s_fu_1106_p2() {
    i_7_s_fu_1106_p2 = (i_s_reg_724.read() | ap_const_lv5_1);
}

void keccak_absorb::thread_i_cast4_fu_990_p1() {
    i_cast4_fu_990_p1 = esl_zext<64,5>(i_s_reg_724.read());
}

void keccak_absorb::thread_indvarinc_fu_744_p2() {
    indvarinc_fu_744_p2 = (!invdar_reg_657.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(invdar_reg_657.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void keccak_absorb::thread_m_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        m_address0 =  (sc_lv<12>) (sum9_cast_fu_942_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        m_address0 =  (sc_lv<12>) (sum_6_i_cast_fu_881_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        m_address0 =  (sc_lv<12>) (sum_4_i_cast_fu_861_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        m_address0 =  (sc_lv<12>) (sum_2_i_cast_fu_841_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        m_address0 =  (sc_lv<12>) (sum7_cast_fu_808_p1.read());
    } else {
        m_address0 = "XXXXXXXXXXXX";
    }
}

void keccak_absorb::thread_m_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        m_address1 =  (sc_lv<12>) (sum9_1_cast_fu_972_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        m_address1 =  (sc_lv<12>) (sum_7_i_cast_fu_891_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        m_address1 =  (sc_lv<12>) (sum_5_i_cast_fu_871_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        m_address1 =  (sc_lv<12>) (sum_3_i_cast_fu_851_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        m_address1 =  (sc_lv<12>) (sum_1_i_cast_fu_819_p1.read());
    } else {
        m_address1 = "XXXXXXXXXXXX";
    }
}

void keccak_absorb::thread_m_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        m_ce0 = ap_const_logic_1;
    } else {
        m_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_m_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        m_ce1 = ap_const_logic_1;
    } else {
        m_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_mlen_assign_fu_917_p2() {
    mlen_assign_fu_917_p2 = (!i_reg_668.read().is_01() || !ap_const_lv64_FFFFFFFFFFFFFF78.is_01())? sc_lv<64>(): (sc_biguint<64>(i_reg_668.read()) + sc_bigint<64>(ap_const_lv64_FFFFFFFFFFFFFF78));
}

void keccak_absorb::thread_p_rec_fu_824_p2() {
    p_rec_fu_824_p2 = (!p_0_rec_reg_679.read().is_01() || !ap_const_lv64_88.is_01())? sc_lv<64>(): (sc_biguint<64>(p_0_rec_reg_679.read()) + sc_biguint<64>(ap_const_lv64_88));
}

void keccak_absorb::thread_r_1_7_i1_fu_1085_p9() {
    r_1_7_i1_fu_1085_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(t_q0.read(), t_q1.read()), t_load_6_reg_1484.read()), t_load_5_reg_1479.read()), t_load_4_reg_1464.read()), t_load_3_reg_1459.read()), t_load_2_reg_1444.read()), t_load_1_reg_1439.read());
}

void keccak_absorb::thread_r_1_7_i2_fu_1213_p9() {
    r_1_7_i2_fu_1213_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(t_q0.read(), t_q1.read()), t_load_14_reg_1578.read()), t_load_13_reg_1573.read()), t_load_12_reg_1558.read()), t_load_11_reg_1553.read()), t_load_10_reg_1538.read()), t_load_9_reg_1533.read());
}

void keccak_absorb::thread_r_1_7_i_fu_896_p9() {
    r_1_7_i_fu_896_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(m_q1.read(), m_q0.read()), m_load_7_reg_1352.read()), m_load_6_reg_1347.read()), m_load_5_reg_1332.read()), m_load_4_reg_1327.read()), m_load_3_reg_1312.read()), m_load_2_reg_1307.read());
}

void keccak_absorb::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        s_address0 = s_addr_27_reg_1522.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        s_address0 = s_addr_26_reg_1433.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        s_address0 = s_addr_13_reg_1291.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_address0 = grp_KeccakF1600_StatePer_fu_736_state_address0.read();
    } else {
        s_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void keccak_absorb::thread_s_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        s_address1 = s_addr_27_reg_1522.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        s_address1 = s_addr_26_reg_1433.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        s_address1 = s_addr_13_reg_1291.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_address1 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_address1 = grp_KeccakF1600_StatePer_fu_736_state_address1.read();
    } else {
        s_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void keccak_absorb::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_ce0 = grp_KeccakF1600_StatePer_fu_736_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        s_ce1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_ce1 = grp_KeccakF1600_StatePer_fu_736_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        s_d0 = tmp_18_1_fu_1227_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        s_d0 = tmp_7_fu_1099_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        s_d0 = tmp_4_fu_910_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        s_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_d0 = grp_KeccakF1600_StatePer_fu_736_state_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb::thread_s_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        s_d1 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_d1 = grp_KeccakF1600_StatePer_fu_736_state_d1.read();
    } else {
        s_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb::thread_s_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_755_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_1409.read())))) {
        s_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_we0 = grp_KeccakF1600_StatePer_fu_736_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        s_we1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        s_we1 = grp_KeccakF1600_StatePer_fu_736_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_sum7_cast_fu_808_p1() {
    sum7_cast_fu_808_p1 = esl_zext<64,14>(sum7_fu_803_p2.read());
}

void keccak_absorb::thread_sum7_fu_803_p2() {
    sum7_fu_803_p2 = (!tmp_11_reg_1253.read().is_01() || !tmp_2_cast_fu_799_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_11_reg_1253.read()) + sc_biguint<14>(tmp_2_cast_fu_799_p1.read()));
}

void keccak_absorb::thread_sum9_1_cast_fu_972_p1() {
    sum9_1_cast_fu_972_p1 = esl_zext<64,14>(sum9_1_fu_967_p2.read());
}

void keccak_absorb::thread_sum9_1_fu_967_p2() {
    sum9_1_fu_967_p2 = (!tmp_14_cast5_fu_953_p1.read().is_01() || !tmp_11_reg_1253.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_14_cast5_fu_953_p1.read()) + sc_biguint<14>(tmp_11_reg_1253.read()));
}

void keccak_absorb::thread_sum9_cast_fu_942_p1() {
    sum9_cast_fu_942_p1 = esl_zext<64,14>(sum9_fu_937_p2.read());
}

void keccak_absorb::thread_sum9_fu_937_p2() {
    sum9_fu_937_p2 = (!i_2_cast6_fu_923_p1.read().is_01() || !tmp_11_reg_1253.read().is_01())? sc_lv<14>(): (sc_biguint<14>(i_2_cast6_fu_923_p1.read()) + sc_biguint<14>(tmp_11_reg_1253.read()));
}

void keccak_absorb::thread_sum_1_i1_cast_fu_1020_p1() {
    sum_1_i1_cast_fu_1020_p1 = esl_zext<64,8>(sum_1_i1_fu_1014_p2.read());
}

void keccak_absorb::thread_sum_1_i1_fu_1014_p2() {
    sum_1_i1_fu_1014_p2 = (tmp_6_fu_1001_p3.read() | ap_const_lv8_1);
}

void keccak_absorb::thread_sum_1_i2_cast_fu_1142_p1() {
    sum_1_i2_cast_fu_1142_p1 = esl_zext<64,8>(sum_1_i2_fu_1136_p2.read());
}

void keccak_absorb::thread_sum_1_i2_fu_1136_p2() {
    sum_1_i2_fu_1136_p2 = (tmp_16_1_fu_1123_p3.read() | ap_const_lv8_1);
}

void keccak_absorb::thread_sum_1_i_cast_fu_819_p1() {
    sum_1_i_cast_fu_819_p1 = esl_zext<64,14>(sum_1_i_fu_813_p2.read());
}

void keccak_absorb::thread_sum_1_i_fu_813_p2() {
    sum_1_i_fu_813_p2 = (sum7_fu_803_p2.read() | ap_const_lv14_1);
}

void keccak_absorb::thread_sum_2_i1_cast_fu_1030_p1() {
    sum_2_i1_cast_fu_1030_p1 = esl_zext<64,8>(sum_2_i1_fu_1025_p2.read());
}

void keccak_absorb::thread_sum_2_i1_fu_1025_p2() {
    sum_2_i1_fu_1025_p2 = (tmp_6_reg_1413.read() | ap_const_lv8_2);
}

void keccak_absorb::thread_sum_2_i2_cast_fu_1158_p1() {
    sum_2_i2_cast_fu_1158_p1 = esl_zext<64,8>(sum_2_i2_fu_1153_p2.read());
}

void keccak_absorb::thread_sum_2_i2_fu_1153_p2() {
    sum_2_i2_fu_1153_p2 = (tmp_16_1_reg_1502.read() | ap_const_lv8_2);
}

void keccak_absorb::thread_sum_2_i_cast_fu_841_p1() {
    sum_2_i_cast_fu_841_p1 = esl_zext<64,14>(sum_2_i_fu_836_p2.read());
}

void keccak_absorb::thread_sum_2_i_fu_836_p2() {
    sum_2_i_fu_836_p2 = (sum7_reg_1271.read() | ap_const_lv14_2);
}

void keccak_absorb::thread_sum_3_i1_cast_fu_1040_p1() {
    sum_3_i1_cast_fu_1040_p1 = esl_zext<64,8>(sum_3_i1_fu_1035_p2.read());
}

void keccak_absorb::thread_sum_3_i1_fu_1035_p2() {
    sum_3_i1_fu_1035_p2 = (tmp_6_reg_1413.read() | ap_const_lv8_3);
}

void keccak_absorb::thread_sum_3_i2_cast_fu_1168_p1() {
    sum_3_i2_cast_fu_1168_p1 = esl_zext<64,8>(sum_3_i2_fu_1163_p2.read());
}

void keccak_absorb::thread_sum_3_i2_fu_1163_p2() {
    sum_3_i2_fu_1163_p2 = (tmp_16_1_reg_1502.read() | ap_const_lv8_3);
}

void keccak_absorb::thread_sum_3_i_cast_fu_851_p1() {
    sum_3_i_cast_fu_851_p1 = esl_zext<64,14>(sum_3_i_fu_846_p2.read());
}

void keccak_absorb::thread_sum_3_i_fu_846_p2() {
    sum_3_i_fu_846_p2 = (sum7_reg_1271.read() | ap_const_lv14_3);
}

void keccak_absorb::thread_sum_4_i1_cast_fu_1050_p1() {
    sum_4_i1_cast_fu_1050_p1 = esl_zext<64,8>(sum_4_i1_fu_1045_p2.read());
}

void keccak_absorb::thread_sum_4_i1_fu_1045_p2() {
    sum_4_i1_fu_1045_p2 = (tmp_6_reg_1413.read() | ap_const_lv8_4);
}

void keccak_absorb::thread_sum_4_i2_cast_fu_1178_p1() {
    sum_4_i2_cast_fu_1178_p1 = esl_zext<64,8>(sum_4_i2_fu_1173_p2.read());
}

void keccak_absorb::thread_sum_4_i2_fu_1173_p2() {
    sum_4_i2_fu_1173_p2 = (tmp_16_1_reg_1502.read() | ap_const_lv8_4);
}

void keccak_absorb::thread_sum_4_i_cast_fu_861_p1() {
    sum_4_i_cast_fu_861_p1 = esl_zext<64,14>(sum_4_i_fu_856_p2.read());
}

void keccak_absorb::thread_sum_4_i_fu_856_p2() {
    sum_4_i_fu_856_p2 = (sum7_reg_1271.read() | ap_const_lv14_4);
}

void keccak_absorb::thread_sum_5_i1_cast_fu_1060_p1() {
    sum_5_i1_cast_fu_1060_p1 = esl_zext<64,8>(sum_5_i1_fu_1055_p2.read());
}

void keccak_absorb::thread_sum_5_i1_fu_1055_p2() {
    sum_5_i1_fu_1055_p2 = (tmp_6_reg_1413.read() | ap_const_lv8_5);
}

void keccak_absorb::thread_sum_5_i2_cast_fu_1188_p1() {
    sum_5_i2_cast_fu_1188_p1 = esl_zext<64,8>(sum_5_i2_fu_1183_p2.read());
}

void keccak_absorb::thread_sum_5_i2_fu_1183_p2() {
    sum_5_i2_fu_1183_p2 = (tmp_16_1_reg_1502.read() | ap_const_lv8_5);
}

void keccak_absorb::thread_sum_5_i_cast_fu_871_p1() {
    sum_5_i_cast_fu_871_p1 = esl_zext<64,14>(sum_5_i_fu_866_p2.read());
}

void keccak_absorb::thread_sum_5_i_fu_866_p2() {
    sum_5_i_fu_866_p2 = (sum7_reg_1271.read() | ap_const_lv14_5);
}

void keccak_absorb::thread_sum_6_i1_cast_fu_1070_p1() {
    sum_6_i1_cast_fu_1070_p1 = esl_zext<64,8>(sum_6_i1_fu_1065_p2.read());
}

void keccak_absorb::thread_sum_6_i1_fu_1065_p2() {
    sum_6_i1_fu_1065_p2 = (tmp_6_reg_1413.read() | ap_const_lv8_6);
}

void keccak_absorb::thread_sum_6_i2_cast_fu_1198_p1() {
    sum_6_i2_cast_fu_1198_p1 = esl_zext<64,8>(sum_6_i2_fu_1193_p2.read());
}

void keccak_absorb::thread_sum_6_i2_fu_1193_p2() {
    sum_6_i2_fu_1193_p2 = (tmp_16_1_reg_1502.read() | ap_const_lv8_6);
}

void keccak_absorb::thread_sum_6_i_cast_fu_881_p1() {
    sum_6_i_cast_fu_881_p1 = esl_zext<64,14>(sum_6_i_fu_876_p2.read());
}

void keccak_absorb::thread_sum_6_i_fu_876_p2() {
    sum_6_i_fu_876_p2 = (sum7_reg_1271.read() | ap_const_lv14_6);
}

void keccak_absorb::thread_sum_7_i1_cast_fu_1080_p1() {
    sum_7_i1_cast_fu_1080_p1 = esl_zext<64,8>(sum_7_i1_fu_1075_p2.read());
}

void keccak_absorb::thread_sum_7_i1_fu_1075_p2() {
    sum_7_i1_fu_1075_p2 = (tmp_6_reg_1413.read() | ap_const_lv8_7);
}

void keccak_absorb::thread_sum_7_i2_cast_fu_1208_p1() {
    sum_7_i2_cast_fu_1208_p1 = esl_zext<64,8>(sum_7_i2_fu_1203_p2.read());
}

void keccak_absorb::thread_sum_7_i2_fu_1203_p2() {
    sum_7_i2_fu_1203_p2 = (tmp_16_1_reg_1502.read() | ap_const_lv8_7);
}

void keccak_absorb::thread_sum_7_i_cast_fu_891_p1() {
    sum_7_i_cast_fu_891_p1 = esl_zext<64,14>(sum_7_i_fu_886_p2.read());
}

void keccak_absorb::thread_sum_7_i_fu_886_p2() {
    sum_7_i_fu_886_p2 = (sum7_reg_1271.read() | ap_const_lv14_7);
}

void keccak_absorb::thread_t_addr_3_reg_1404() {
    t_addr_3_reg_1404 =  (sc_lv<8>) (ap_const_lv64_87);
}

void keccak_absorb::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        t_address0 =  (sc_lv<8>) (sum_7_i2_cast_fu_1208_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        t_address0 =  (sc_lv<8>) (sum_5_i2_cast_fu_1188_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        t_address0 =  (sc_lv<8>) (sum_3_i2_cast_fu_1168_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        t_address0 =  (sc_lv<8>) (sum_1_i2_cast_fu_1142_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        t_address0 =  (sc_lv<8>) (sum_7_i1_cast_fu_1080_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        t_address0 =  (sc_lv<8>) (sum_5_i1_cast_fu_1060_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        t_address0 =  (sc_lv<8>) (sum_3_i1_cast_fu_1040_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        t_address0 =  (sc_lv<8>) (tmp_6_cast_fu_1009_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        t_address0 = t_addr_3_reg_1404.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        t_address0 =  (sc_lv<8>) (ap_const_lv64_87);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        t_address0 =  (sc_lv<8>) (i_reg_668.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        t_address0 =  (sc_lv<8>) (tmp_14_cast_reg_1386.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        t_address0 =  (sc_lv<8>) (i_2_cast_reg_1372.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_address0 =  (sc_lv<8>) (tmp_fu_750_p1.read());
    } else {
        t_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        t_address1 =  (sc_lv<8>) (sum_6_i2_cast_fu_1198_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        t_address1 =  (sc_lv<8>) (sum_4_i2_cast_fu_1178_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        t_address1 =  (sc_lv<8>) (sum_2_i2_cast_fu_1158_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        t_address1 =  (sc_lv<8>) (tmp_16_1_cast_fu_1131_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        t_address1 =  (sc_lv<8>) (sum_6_i1_cast_fu_1070_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        t_address1 =  (sc_lv<8>) (sum_4_i1_cast_fu_1050_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        t_address1 =  (sc_lv<8>) (sum_2_i1_cast_fu_1030_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        t_address1 =  (sc_lv<8>) (sum_1_i1_cast_fu_1020_p1.read());
    } else {
        t_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        t_d0 = tmp_5_fu_983_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        t_d0 = ap_const_lv8_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        t_d0 = m_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        t_d0 = m_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_d0 = ap_const_lv8_0;
    } else {
        t_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1377.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_tmp_11_fu_764_p1() {
    tmp_11_fu_764_p1 = p_0_rec_reg_679.read().range(14-1, 0);
}

void keccak_absorb::thread_tmp_14_1_fu_977_p2() {
    tmp_14_1_fu_977_p2 = (!i_2_reg_712.read().is_01() || !ap_const_lv8_2.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_712.read()) + sc_biguint<8>(ap_const_lv8_2));
}

void keccak_absorb::thread_tmp_14_cast5_fu_953_p1() {
    tmp_14_cast5_fu_953_p1 = esl_zext<14,8>(tmp_14_s_fu_947_p2.read());
}

void keccak_absorb::thread_tmp_14_cast_fu_957_p1() {
    tmp_14_cast_fu_957_p1 = esl_zext<64,8>(tmp_14_s_fu_947_p2.read());
}

void keccak_absorb::thread_tmp_14_s_fu_947_p2() {
    tmp_14_s_fu_947_p2 = (i_2_reg_712.read() | ap_const_lv8_1);
}

void keccak_absorb::thread_tmp_15_1_fu_1117_p2() {
    tmp_15_1_fu_1117_p2 = (!i_7_s_fu_1106_p2.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_7_s_fu_1106_p2.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_tmp_16_1_cast_fu_1131_p1() {
    tmp_16_1_cast_fu_1131_p1 = esl_zext<64,8>(tmp_16_1_fu_1123_p3.read());
}

void keccak_absorb::thread_tmp_16_1_fu_1123_p3() {
    tmp_16_1_fu_1123_p3 = esl_concat<5,3>(i_7_s_fu_1106_p2.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_18_1_fu_1227_p2() {
    tmp_18_1_fu_1227_p2 = (s_q1.read() ^ r_1_7_i2_fu_1213_p9.read());
}

void keccak_absorb::thread_tmp_2_cast_fu_799_p1() {
    tmp_2_cast_fu_799_p1 = esl_zext<14,8>(tmp_2_fu_791_p3.read());
}

void keccak_absorb::thread_tmp_2_fu_791_p3() {
    tmp_2_fu_791_p3 = esl_concat<5,3>(i_1_reg_701.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_3_fu_995_p2() {
    tmp_3_fu_995_p2 = (!i_s_reg_724.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_s_reg_724.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_tmp_4_fu_910_p2() {
    tmp_4_fu_910_p2 = (s_q1.read() ^ r_1_7_i_fu_896_p9.read());
}

void keccak_absorb::thread_tmp_5_fu_983_p2() {
    tmp_5_fu_983_p2 = (t_q0.read() | ap_const_lv8_80);
}

void keccak_absorb::thread_tmp_6_cast_fu_1009_p1() {
    tmp_6_cast_fu_1009_p1 = esl_zext<64,8>(tmp_6_fu_1001_p3.read());
}

void keccak_absorb::thread_tmp_6_fu_1001_p3() {
    tmp_6_fu_1001_p3 = esl_concat<5,3>(i_s_reg_724.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_7_fu_1099_p2() {
    tmp_7_fu_1099_p2 = (s_q1.read() ^ r_1_7_i1_fu_1085_p9.read());
}

void keccak_absorb::thread_tmp_8_fu_768_p2() {
    tmp_8_fu_768_p2 = (!ff1_reg_691.read().is_01() || !ap_const_lv8_87.is_01())? sc_lv<1>(): (sc_biguint<8>(ff1_reg_691.read()) > sc_biguint<8>(ap_const_lv8_87));
}

void keccak_absorb::thread_tmp_9_fu_779_p2() {
    tmp_9_fu_779_p2 = (!i_1_reg_701.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_701.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_tmp_fu_750_p1() {
    tmp_fu_750_p1 = esl_zext<64,8>(invdar_reg_657.read());
}

void keccak_absorb::thread_tmp_s_fu_755_p2() {
    tmp_s_fu_755_p2 = (!invdar_reg_657.read().is_01() || !ap_const_lv8_C7.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_657.read() == ap_const_lv8_C7);
}

void keccak_absorb::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_755_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_768_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(tmp_9_fu_779_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_736_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_1_fu_961_p2.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_1377.read())))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_995_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_15_1_fu_1117_p2.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_1409.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<36>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

