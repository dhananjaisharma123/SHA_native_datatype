// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pqcrystals_fips202_ref_sha3_256.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pqcrystals_fips202_ref_sha3_256::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pqcrystals_fips202_ref_sha3_256::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state1 = "1";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state2 = "10";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state3 = "100";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state4 = "1000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state5 = "10000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state6 = "100000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state8 = "10000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state9 = "100000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state10 = "1000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state11 = "10000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state12 = "100000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<25> pqcrystals_fips202_ref_sha3_256::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_4 = "100";
const sc_lv<1> pqcrystals_fips202_ref_sha3_256::ap_const_lv1_1 = "1";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_5 = "101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_9 = "1001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_A = "1010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_B = "1011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_C = "1100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_D = "1101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_E = "1110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_F = "1111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_10 = "10000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_11 = "10001";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_12 = "10010";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_13 = "10011";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_14 = "10100";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_15 = "10101";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_16 = "10110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_17 = "10111";
const sc_lv<5> pqcrystals_fips202_ref_sha3_256::ap_const_lv5_0 = "00000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_3 = "11";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_8 = "1000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1 = "1";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2 = "10";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1 = "1";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_6 = "110";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_7 = "111";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_2 = "10";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_3 = "11";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_4 = "100";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_5 = "101";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_6 = "110";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_7 = "111";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_8 = "1000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_9 = "1001";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_A = "1010";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_B = "1011";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_C = "1100";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_D = "1101";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_E = "1110";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_F = "1111";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_10 = "10000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_11 = "10001";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_12 = "10010";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_13 = "10011";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_14 = "10100";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_15 = "10101";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_16 = "10110";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_17 = "10111";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_18 = "11000";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_19 = "11001";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1A = "11010";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1B = "11011";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1C = "11100";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1D = "11101";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1E = "11110";
const sc_lv<64> pqcrystals_fips202_ref_sha3_256::ap_const_lv64_1F = "11111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_18 = "11000";
const sc_lv<5> pqcrystals_fips202_ref_sha3_256::ap_const_lv5_11 = "10001";
const sc_lv<5> pqcrystals_fips202_ref_sha3_256::ap_const_lv5_1 = "1";
const sc_lv<3> pqcrystals_fips202_ref_sha3_256::ap_const_lv3_0 = "000";
const sc_lv<8> pqcrystals_fips202_ref_sha3_256::ap_const_lv8_1 = "1";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_1F = "11111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_20 = "100000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_27 = "100111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_28 = "101000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_2F = "101111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_30 = "110000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_37 = "110111";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_38 = "111000";
const sc_lv<32> pqcrystals_fips202_ref_sha3_256::ap_const_lv32_3F = "111111";
const sc_lv<8> pqcrystals_fips202_ref_sha3_256::ap_const_lv8_2 = "10";
const sc_lv<8> pqcrystals_fips202_ref_sha3_256::ap_const_lv8_3 = "11";
const sc_lv<8> pqcrystals_fips202_ref_sha3_256::ap_const_lv8_4 = "100";
const sc_lv<8> pqcrystals_fips202_ref_sha3_256::ap_const_lv8_5 = "101";
const sc_lv<8> pqcrystals_fips202_ref_sha3_256::ap_const_lv8_6 = "110";
const sc_lv<8> pqcrystals_fips202_ref_sha3_256::ap_const_lv8_7 = "111";
const bool pqcrystals_fips202_ref_sha3_256::ap_const_boolean_1 = true;

pqcrystals_fips202_ref_sha3_256::pqcrystals_fips202_ref_sha3_256(sc_module_name name) : sc_module(name), mVcdFile(0) {
    s_U = new pqcrystals_fips202_ref_sha3_256_s("s_U");
    s_U->clk(ap_clk);
    s_U->reset(ap_rst);
    s_U->address0(s_address0);
    s_U->ce0(s_ce0);
    s_U->we0(s_we0);
    s_U->d0(s_d0);
    s_U->q0(s_q0);
    s_U->address1(s_address1);
    s_U->ce1(s_ce1);
    s_U->we1(s_we1);
    s_U->d1(s_d1);
    s_U->q1(s_q1);
    out_assign_U = new pqcrystals_fips202_ref_sha3_256_out_assign("out_assign_U");
    out_assign_U->clk(ap_clk);
    out_assign_U->reset(ap_rst);
    out_assign_U->address0(out_assign_address0);
    out_assign_U->ce0(out_assign_ce0);
    out_assign_U->we0(out_assign_we0);
    out_assign_U->d0(out_assign_d0);
    out_assign_U->q0(out_assign_q0);
    out_assign_U->address1(out_assign_address1);
    out_assign_U->ce1(out_assign_ce1);
    out_assign_U->we1(out_assign_we1);
    out_assign_U->d1(out_assign_d1);
    out_assign_U->q1(out_assign_q1);
    grp_keccak_absorb_fu_804 = new keccak_absorb("grp_keccak_absorb_fu_804");
    grp_keccak_absorb_fu_804->ap_clk(ap_clk);
    grp_keccak_absorb_fu_804->ap_rst(ap_rst);
    grp_keccak_absorb_fu_804->ap_start(grp_keccak_absorb_fu_804_ap_start);
    grp_keccak_absorb_fu_804->ap_done(grp_keccak_absorb_fu_804_ap_done);
    grp_keccak_absorb_fu_804->ap_idle(grp_keccak_absorb_fu_804_ap_idle);
    grp_keccak_absorb_fu_804->ap_ready(grp_keccak_absorb_fu_804_ap_ready);
    grp_keccak_absorb_fu_804->s_address0(grp_keccak_absorb_fu_804_s_address0);
    grp_keccak_absorb_fu_804->s_ce0(grp_keccak_absorb_fu_804_s_ce0);
    grp_keccak_absorb_fu_804->s_we0(grp_keccak_absorb_fu_804_s_we0);
    grp_keccak_absorb_fu_804->s_d0(grp_keccak_absorb_fu_804_s_d0);
    grp_keccak_absorb_fu_804->s_q0(s_q0);
    grp_keccak_absorb_fu_804->s_address1(grp_keccak_absorb_fu_804_s_address1);
    grp_keccak_absorb_fu_804->s_ce1(grp_keccak_absorb_fu_804_s_ce1);
    grp_keccak_absorb_fu_804->s_we1(grp_keccak_absorb_fu_804_s_we1);
    grp_keccak_absorb_fu_804->s_d1(grp_keccak_absorb_fu_804_s_d1);
    grp_keccak_absorb_fu_804->s_q1(s_q1);
    grp_keccak_absorb_fu_804->m_address0(grp_keccak_absorb_fu_804_m_address0);
    grp_keccak_absorb_fu_804->m_ce0(grp_keccak_absorb_fu_804_m_ce0);
    grp_keccak_absorb_fu_804->m_q0(IN_r_q0);
    grp_keccak_absorb_fu_804->m_address1(grp_keccak_absorb_fu_804_m_address1);
    grp_keccak_absorb_fu_804->m_ce1(grp_keccak_absorb_fu_804_m_ce1);
    grp_keccak_absorb_fu_804->m_q1(IN_r_q1);
    grp_keccak_absorb_fu_804->mlen(inlen);
    grp_KeccakF1600_StatePer_fu_816 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_816");
    grp_KeccakF1600_StatePer_fu_816->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_816->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_816->ap_start(grp_KeccakF1600_StatePer_fu_816_ap_start);
    grp_KeccakF1600_StatePer_fu_816->ap_done(grp_KeccakF1600_StatePer_fu_816_ap_done);
    grp_KeccakF1600_StatePer_fu_816->ap_idle(grp_KeccakF1600_StatePer_fu_816_ap_idle);
    grp_KeccakF1600_StatePer_fu_816->ap_ready(grp_KeccakF1600_StatePer_fu_816_ap_ready);
    grp_KeccakF1600_StatePer_fu_816->state_address0(grp_KeccakF1600_StatePer_fu_816_state_address0);
    grp_KeccakF1600_StatePer_fu_816->state_ce0(grp_KeccakF1600_StatePer_fu_816_state_ce0);
    grp_KeccakF1600_StatePer_fu_816->state_we0(grp_KeccakF1600_StatePer_fu_816_state_we0);
    grp_KeccakF1600_StatePer_fu_816->state_d0(grp_KeccakF1600_StatePer_fu_816_state_d0);
    grp_KeccakF1600_StatePer_fu_816->state_q0(s_q0);
    grp_KeccakF1600_StatePer_fu_816->state_address1(grp_KeccakF1600_StatePer_fu_816_state_address1);
    grp_KeccakF1600_StatePer_fu_816->state_ce1(grp_KeccakF1600_StatePer_fu_816_state_ce1);
    grp_KeccakF1600_StatePer_fu_816->state_we1(grp_KeccakF1600_StatePer_fu_816_state_we1);
    grp_KeccakF1600_StatePer_fu_816->state_d1(grp_KeccakF1600_StatePer_fu_816_state_d1);
    grp_KeccakF1600_StatePer_fu_816->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_IN_r_address0);
    sensitive << ( grp_keccak_absorb_fu_804_m_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_IN_r_address1);
    sensitive << ( grp_keccak_absorb_fu_804_m_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_IN_r_ce0);
    sensitive << ( grp_keccak_absorb_fu_804_m_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_IN_r_ce1);
    sensitive << ( grp_keccak_absorb_fu_804_m_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_exitcond_i_fu_823_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_1_i_reg_792 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_fu_816_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_ap_start_reg );

    SC_METHOD(thread_grp_keccak_absorb_fu_804_ap_start);
    sensitive << ( grp_keccak_absorb_fu_804_ap_start_reg );

    SC_METHOD(thread_h_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_h_address1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_h_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_h_ce1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_h_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( out_assign_q0 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_h_d1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( out_assign_q1 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_h_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_h_we1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_out_assign_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_4_i_fu_848_p1 );
    sensitive << ( sum_2_i_i6_cast_fu_945_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sum_4_i_i8_cast_fu_965_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sum_6_i_i_cast_fu_985_p1 );

    SC_METHOD(thread_out_assign_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sum_1_i_i5_cast_fu_875_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sum_3_i_i7_cast_fu_955_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sum_5_i_i9_cast_fu_975_p1 );
    sensitive << ( sum_7_i_i_cast_fu_995_p1 );

    SC_METHOD(thread_out_assign_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_out_assign_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_out_assign_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_2_i_i_reg_1038 );
    sensitive << ( tmp_4_4_i_i_reg_1048 );
    sensitive << ( tmp_4_6_i_i_reg_1058 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_fu_853_p1 );

    SC_METHOD(thread_out_assign_d1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_3_i_i_reg_1043 );
    sensitive << ( tmp_4_5_i_i_reg_1053 );
    sensitive << ( tmp_4_7_i_i_reg_1063 );
    sensitive << ( s_q0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_out_assign_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_out_assign_we1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_keccak_absorb_fu_804_s_address0 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_state_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_5_i_fu_835_p1 );

    SC_METHOD(thread_s_address1);
    sensitive << ( grp_keccak_absorb_fu_804_s_address1 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_state_address1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_keccak_absorb_fu_804_s_ce0 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_state_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( grp_keccak_absorb_fu_804_s_ce1 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_state_ce1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_s_d0);
    sensitive << ( grp_keccak_absorb_fu_804_s_d0 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_state_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_s_d1);
    sensitive << ( grp_keccak_absorb_fu_804_s_d1 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_state_d1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_s_we0);
    sensitive << ( grp_keccak_absorb_fu_804_s_we0 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_state_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_s_we1);
    sensitive << ( grp_keccak_absorb_fu_804_s_we1 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_state_we1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sum_1_i_i5_cast_fu_875_p1);
    sensitive << ( sum_1_i_i5_fu_869_p2 );

    SC_METHOD(thread_sum_1_i_i5_fu_869_p2);
    sensitive << ( tmp_3_i_fu_840_p3 );

    SC_METHOD(thread_sum_2_i_i6_cast_fu_945_p1);
    sensitive << ( sum_2_i_i6_fu_940_p2 );

    SC_METHOD(thread_sum_2_i_i6_fu_940_p2);
    sensitive << ( tmp_3_i_reg_1028 );

    SC_METHOD(thread_sum_3_i_i7_cast_fu_955_p1);
    sensitive << ( sum_3_i_i7_fu_950_p2 );

    SC_METHOD(thread_sum_3_i_i7_fu_950_p2);
    sensitive << ( tmp_3_i_reg_1028 );

    SC_METHOD(thread_sum_4_i_i8_cast_fu_965_p1);
    sensitive << ( sum_4_i_i8_fu_960_p2 );

    SC_METHOD(thread_sum_4_i_i8_fu_960_p2);
    sensitive << ( tmp_3_i_reg_1028 );

    SC_METHOD(thread_sum_5_i_i9_cast_fu_975_p1);
    sensitive << ( sum_5_i_i9_fu_970_p2 );

    SC_METHOD(thread_sum_5_i_i9_fu_970_p2);
    sensitive << ( tmp_3_i_reg_1028 );

    SC_METHOD(thread_sum_6_i_i_cast_fu_985_p1);
    sensitive << ( sum_6_i_i_fu_980_p2 );

    SC_METHOD(thread_sum_6_i_i_fu_980_p2);
    sensitive << ( tmp_3_i_reg_1028 );

    SC_METHOD(thread_sum_7_i_i_cast_fu_995_p1);
    sensitive << ( sum_7_i_i_fu_990_p2 );

    SC_METHOD(thread_sum_7_i_i_fu_990_p2);
    sensitive << ( tmp_3_i_reg_1028 );

    SC_METHOD(thread_tmp_3_i_fu_840_p3);
    sensitive << ( i_1_i_reg_792 );

    SC_METHOD(thread_tmp_4_i_fu_848_p1);
    sensitive << ( tmp_3_i_fu_840_p3 );

    SC_METHOD(thread_tmp_5_i_fu_835_p1);
    sensitive << ( i_1_i_reg_792 );

    SC_METHOD(thread_tmp_6_i_fu_829_p2);
    sensitive << ( i_1_i_reg_792 );

    SC_METHOD(thread_tmp_fu_853_p1);
    sensitive << ( s_q0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_i_fu_823_p2 );
    sensitive << ( grp_keccak_absorb_fu_804_ap_done );
    sensitive << ( grp_KeccakF1600_StatePer_fu_816_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000000000000001";
    grp_keccak_absorb_fu_804_ap_start_reg = SC_LOGIC_0;
    grp_KeccakF1600_StatePer_fu_816_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pqcrystals_fips202_ref_sha3_256_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, h_address0, "(port)h_address0");
    sc_trace(mVcdFile, h_ce0, "(port)h_ce0");
    sc_trace(mVcdFile, h_we0, "(port)h_we0");
    sc_trace(mVcdFile, h_d0, "(port)h_d0");
    sc_trace(mVcdFile, h_address1, "(port)h_address1");
    sc_trace(mVcdFile, h_ce1, "(port)h_ce1");
    sc_trace(mVcdFile, h_we1, "(port)h_we1");
    sc_trace(mVcdFile, h_d1, "(port)h_d1");
    sc_trace(mVcdFile, IN_r_address0, "(port)IN_r_address0");
    sc_trace(mVcdFile, IN_r_ce0, "(port)IN_r_ce0");
    sc_trace(mVcdFile, IN_r_q0, "(port)IN_r_q0");
    sc_trace(mVcdFile, IN_r_address1, "(port)IN_r_address1");
    sc_trace(mVcdFile, IN_r_ce1, "(port)IN_r_ce1");
    sc_trace(mVcdFile, IN_r_q1, "(port)IN_r_q1");
    sc_trace(mVcdFile, inlen, "(port)inlen");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_6_i_fu_829_p2, "tmp_6_i_fu_829_p2");
    sc_trace(mVcdFile, tmp_6_i_reg_1008, "tmp_6_i_reg_1008");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_i_fu_823_p2, "exitcond_i_fu_823_p2");
    sc_trace(mVcdFile, tmp_3_i_fu_840_p3, "tmp_3_i_fu_840_p3");
    sc_trace(mVcdFile, tmp_3_i_reg_1028, "tmp_3_i_reg_1028");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_4_2_i_i_reg_1038, "tmp_4_2_i_i_reg_1038");
    sc_trace(mVcdFile, tmp_4_3_i_i_reg_1043, "tmp_4_3_i_i_reg_1043");
    sc_trace(mVcdFile, tmp_4_4_i_i_reg_1048, "tmp_4_4_i_i_reg_1048");
    sc_trace(mVcdFile, tmp_4_5_i_i_reg_1053, "tmp_4_5_i_i_reg_1053");
    sc_trace(mVcdFile, tmp_4_6_i_i_reg_1058, "tmp_4_6_i_i_reg_1058");
    sc_trace(mVcdFile, tmp_4_7_i_i_reg_1063, "tmp_4_7_i_i_reg_1063");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, s_address0, "s_address0");
    sc_trace(mVcdFile, s_ce0, "s_ce0");
    sc_trace(mVcdFile, s_we0, "s_we0");
    sc_trace(mVcdFile, s_d0, "s_d0");
    sc_trace(mVcdFile, s_q0, "s_q0");
    sc_trace(mVcdFile, s_address1, "s_address1");
    sc_trace(mVcdFile, s_ce1, "s_ce1");
    sc_trace(mVcdFile, s_we1, "s_we1");
    sc_trace(mVcdFile, s_d1, "s_d1");
    sc_trace(mVcdFile, s_q1, "s_q1");
    sc_trace(mVcdFile, out_assign_address0, "out_assign_address0");
    sc_trace(mVcdFile, out_assign_ce0, "out_assign_ce0");
    sc_trace(mVcdFile, out_assign_we0, "out_assign_we0");
    sc_trace(mVcdFile, out_assign_d0, "out_assign_d0");
    sc_trace(mVcdFile, out_assign_q0, "out_assign_q0");
    sc_trace(mVcdFile, out_assign_address1, "out_assign_address1");
    sc_trace(mVcdFile, out_assign_ce1, "out_assign_ce1");
    sc_trace(mVcdFile, out_assign_we1, "out_assign_we1");
    sc_trace(mVcdFile, out_assign_d1, "out_assign_d1");
    sc_trace(mVcdFile, out_assign_q1, "out_assign_q1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_ap_start, "grp_keccak_absorb_fu_804_ap_start");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_ap_done, "grp_keccak_absorb_fu_804_ap_done");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_ap_idle, "grp_keccak_absorb_fu_804_ap_idle");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_ap_ready, "grp_keccak_absorb_fu_804_ap_ready");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_s_address0, "grp_keccak_absorb_fu_804_s_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_s_ce0, "grp_keccak_absorb_fu_804_s_ce0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_s_we0, "grp_keccak_absorb_fu_804_s_we0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_s_d0, "grp_keccak_absorb_fu_804_s_d0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_s_address1, "grp_keccak_absorb_fu_804_s_address1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_s_ce1, "grp_keccak_absorb_fu_804_s_ce1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_s_we1, "grp_keccak_absorb_fu_804_s_we1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_s_d1, "grp_keccak_absorb_fu_804_s_d1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_m_address0, "grp_keccak_absorb_fu_804_m_address0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_m_ce0, "grp_keccak_absorb_fu_804_m_ce0");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_m_address1, "grp_keccak_absorb_fu_804_m_address1");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_m_ce1, "grp_keccak_absorb_fu_804_m_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_ap_start, "grp_KeccakF1600_StatePer_fu_816_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_ap_done, "grp_KeccakF1600_StatePer_fu_816_ap_done");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_ap_idle, "grp_KeccakF1600_StatePer_fu_816_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_ap_ready, "grp_KeccakF1600_StatePer_fu_816_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_state_address0, "grp_KeccakF1600_StatePer_fu_816_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_state_ce0, "grp_KeccakF1600_StatePer_fu_816_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_state_we0, "grp_KeccakF1600_StatePer_fu_816_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_state_d0, "grp_KeccakF1600_StatePer_fu_816_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_state_address1, "grp_KeccakF1600_StatePer_fu_816_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_state_ce1, "grp_KeccakF1600_StatePer_fu_816_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_state_we1, "grp_KeccakF1600_StatePer_fu_816_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_state_d1, "grp_KeccakF1600_StatePer_fu_816_state_d1");
    sc_trace(mVcdFile, i_1_i_reg_792, "i_1_i_reg_792");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_keccak_absorb_fu_804_ap_start_reg, "grp_keccak_absorb_fu_804_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_816_ap_start_reg, "grp_KeccakF1600_StatePer_fu_816_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_5_i_fu_835_p1, "tmp_5_i_fu_835_p1");
    sc_trace(mVcdFile, tmp_4_i_fu_848_p1, "tmp_4_i_fu_848_p1");
    sc_trace(mVcdFile, sum_1_i_i5_cast_fu_875_p1, "sum_1_i_i5_cast_fu_875_p1");
    sc_trace(mVcdFile, sum_2_i_i6_cast_fu_945_p1, "sum_2_i_i6_cast_fu_945_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sum_3_i_i7_cast_fu_955_p1, "sum_3_i_i7_cast_fu_955_p1");
    sc_trace(mVcdFile, sum_4_i_i8_cast_fu_965_p1, "sum_4_i_i8_cast_fu_965_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sum_5_i_i9_cast_fu_975_p1, "sum_5_i_i9_cast_fu_975_p1");
    sc_trace(mVcdFile, sum_6_i_i_cast_fu_985_p1, "sum_6_i_i_cast_fu_985_p1");
    sc_trace(mVcdFile, sum_7_i_i_cast_fu_995_p1, "sum_7_i_i_cast_fu_995_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, tmp_fu_853_p1, "tmp_fu_853_p1");
    sc_trace(mVcdFile, sum_1_i_i5_fu_869_p2, "sum_1_i_i5_fu_869_p2");
    sc_trace(mVcdFile, sum_2_i_i6_fu_940_p2, "sum_2_i_i6_fu_940_p2");
    sc_trace(mVcdFile, sum_3_i_i7_fu_950_p2, "sum_3_i_i7_fu_950_p2");
    sc_trace(mVcdFile, sum_4_i_i8_fu_960_p2, "sum_4_i_i8_fu_960_p2");
    sc_trace(mVcdFile, sum_5_i_i9_fu_970_p2, "sum_5_i_i9_fu_970_p2");
    sc_trace(mVcdFile, sum_6_i_i_fu_980_p2, "sum_6_i_i_fu_980_p2");
    sc_trace(mVcdFile, sum_7_i_i_fu_990_p2, "sum_7_i_i_fu_990_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("pqcrystals_fips202_ref_sha3_256.hdltvin.dat");
    mHdltvoutHandle.open("pqcrystals_fips202_ref_sha3_256.hdltvout.dat");
}

pqcrystals_fips202_ref_sha3_256::~pqcrystals_fips202_ref_sha3_256() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete s_U;
    delete out_assign_U;
    delete grp_keccak_absorb_fu_804;
    delete grp_KeccakF1600_StatePer_fu_816;
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_fu_816_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_KeccakF1600_StatePer_fu_816_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_fu_816_ap_ready.read())) {
            grp_KeccakF1600_StatePer_fu_816_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_keccak_absorb_fu_804_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_keccak_absorb_fu_804_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_keccak_absorb_fu_804_ap_ready.read())) {
            grp_keccak_absorb_fu_804_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_1_i_reg_792 = tmp_6_i_reg_1008.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_816_ap_done.read(), ap_const_logic_1))) {
        i_1_i_reg_792 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_3_i_reg_1028 = tmp_3_i_fu_840_p3.read();
        tmp_4_2_i_i_reg_1038 = s_q0.read().range(23, 16);
        tmp_4_3_i_i_reg_1043 = s_q0.read().range(31, 24);
        tmp_4_4_i_i_reg_1048 = s_q0.read().range(39, 32);
        tmp_4_5_i_i_reg_1053 = s_q0.read().range(47, 40);
        tmp_4_6_i_i_reg_1058 = s_q0.read().range(55, 48);
        tmp_4_7_i_i_reg_1063 = s_q0.read().range(63, 56);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_6_i_reg_1008 = tmp_6_i_fu_829_p2.read();
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_IN_r_address0() {
    IN_r_address0 = grp_keccak_absorb_fu_804_m_address0.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_IN_r_address1() {
    IN_r_address1 = grp_keccak_absorb_fu_804_m_address1.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_IN_r_ce0() {
    IN_r_ce0 = grp_keccak_absorb_fu_804_m_ce0.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_IN_r_ce1() {
    IN_r_ce1 = grp_keccak_absorb_fu_804_m_ce1.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_exitcond_i_fu_823_p2() {
    exitcond_i_fu_823_p2 = (!i_1_i_reg_792.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_1_i_reg_792.read() == ap_const_lv5_11);
}

void pqcrystals_fips202_ref_sha3_256::thread_grp_KeccakF1600_StatePer_fu_816_ap_start() {
    grp_KeccakF1600_StatePer_fu_816_ap_start = grp_KeccakF1600_StatePer_fu_816_ap_start_reg.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_grp_keccak_absorb_fu_804_ap_start() {
    grp_keccak_absorb_fu_804_ap_start = grp_keccak_absorb_fu_804_ap_start_reg.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_h_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        h_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        h_address0 = "XXXXX";
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        h_address1 =  (sc_lv<5>) (ap_const_lv64_1);
    } else {
        h_address1 = "XXXXX";
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        h_ce0 = ap_const_logic_1;
    } else {
        h_ce0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        h_ce1 = ap_const_logic_1;
    } else {
        h_ce1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_d0() {
    h_d0 = out_assign_q0.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_h_d1() {
    h_d1 = out_assign_q1.read();
}

void pqcrystals_fips202_ref_sha3_256::thread_h_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        h_we0 = ap_const_logic_1;
    } else {
        h_we0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_h_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        h_we1 = ap_const_logic_1;
    } else {
        h_we1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_1E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_1C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_1A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_18);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_14);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_12);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_assign_address0 =  (sc_lv<8>) (sum_6_i_i_cast_fu_985_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_assign_address0 =  (sc_lv<8>) (sum_4_i_i8_cast_fu_965_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_assign_address0 =  (sc_lv<8>) (sum_2_i_i6_cast_fu_945_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_assign_address0 =  (sc_lv<8>) (tmp_4_i_fu_848_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_assign_address0 =  (sc_lv<8>) (ap_const_lv64_0);
    } else {
        out_assign_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_1F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_1D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_1B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_15);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_13);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_assign_address1 =  (sc_lv<8>) (sum_7_i_i_cast_fu_995_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_assign_address1 =  (sc_lv<8>) (sum_5_i_i9_cast_fu_975_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_assign_address1 =  (sc_lv<8>) (sum_3_i_i7_cast_fu_955_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_assign_address1 =  (sc_lv<8>) (sum_1_i_i5_cast_fu_875_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_assign_address1 =  (sc_lv<8>) (ap_const_lv64_1);
    } else {
        out_assign_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        out_assign_ce0 = ap_const_logic_1;
    } else {
        out_assign_ce0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        out_assign_ce1 = ap_const_logic_1;
    } else {
        out_assign_ce1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_assign_d0 = tmp_4_6_i_i_reg_1058.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_assign_d0 = tmp_4_4_i_i_reg_1048.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_assign_d0 = tmp_4_2_i_i_reg_1038.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_assign_d0 = tmp_fu_853_p1.read();
    } else {
        out_assign_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_assign_d1 = tmp_4_7_i_i_reg_1063.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_assign_d1 = tmp_4_5_i_i_reg_1053.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_assign_d1 = tmp_4_3_i_i_reg_1043.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_assign_d1 = s_q0.read().range(15, 8);
    } else {
        out_assign_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        out_assign_we0 = ap_const_logic_1;
    } else {
        out_assign_we0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_out_assign_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        out_assign_we1 = ap_const_logic_1;
    } else {
        out_assign_we1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        s_address0 =  (sc_lv<5>) (tmp_5_i_fu_835_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_address0 = grp_KeccakF1600_StatePer_fu_816_state_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_address0 = grp_keccak_absorb_fu_804_s_address0.read();
    } else {
        s_address0 = "XXXXX";
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_s_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_address1 = grp_KeccakF1600_StatePer_fu_816_state_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_address1 = grp_keccak_absorb_fu_804_s_address1.read();
    } else {
        s_address1 = "XXXXX";
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_ce0 = grp_KeccakF1600_StatePer_fu_816_state_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_ce0 = grp_keccak_absorb_fu_804_s_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_ce1 = grp_KeccakF1600_StatePer_fu_816_state_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_ce1 = grp_keccak_absorb_fu_804_s_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_d0 = grp_KeccakF1600_StatePer_fu_816_state_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_d0 = grp_keccak_absorb_fu_804_s_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_s_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_d1 = grp_KeccakF1600_StatePer_fu_816_state_d1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_d1 = grp_keccak_absorb_fu_804_s_d1.read();
    } else {
        s_d1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_s_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_we0 = grp_KeccakF1600_StatePer_fu_816_state_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_we0 = grp_keccak_absorb_fu_804_s_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_we1 = grp_KeccakF1600_StatePer_fu_816_state_we1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_we1 = grp_keccak_absorb_fu_804_s_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_1_i_i5_cast_fu_875_p1() {
    sum_1_i_i5_cast_fu_875_p1 = esl_zext<64,8>(sum_1_i_i5_fu_869_p2.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_1_i_i5_fu_869_p2() {
    sum_1_i_i5_fu_869_p2 = (tmp_3_i_fu_840_p3.read() | ap_const_lv8_1);
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_2_i_i6_cast_fu_945_p1() {
    sum_2_i_i6_cast_fu_945_p1 = esl_zext<64,8>(sum_2_i_i6_fu_940_p2.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_2_i_i6_fu_940_p2() {
    sum_2_i_i6_fu_940_p2 = (tmp_3_i_reg_1028.read() | ap_const_lv8_2);
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_3_i_i7_cast_fu_955_p1() {
    sum_3_i_i7_cast_fu_955_p1 = esl_zext<64,8>(sum_3_i_i7_fu_950_p2.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_3_i_i7_fu_950_p2() {
    sum_3_i_i7_fu_950_p2 = (tmp_3_i_reg_1028.read() | ap_const_lv8_3);
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_4_i_i8_cast_fu_965_p1() {
    sum_4_i_i8_cast_fu_965_p1 = esl_zext<64,8>(sum_4_i_i8_fu_960_p2.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_4_i_i8_fu_960_p2() {
    sum_4_i_i8_fu_960_p2 = (tmp_3_i_reg_1028.read() | ap_const_lv8_4);
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_5_i_i9_cast_fu_975_p1() {
    sum_5_i_i9_cast_fu_975_p1 = esl_zext<64,8>(sum_5_i_i9_fu_970_p2.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_5_i_i9_fu_970_p2() {
    sum_5_i_i9_fu_970_p2 = (tmp_3_i_reg_1028.read() | ap_const_lv8_5);
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_6_i_i_cast_fu_985_p1() {
    sum_6_i_i_cast_fu_985_p1 = esl_zext<64,8>(sum_6_i_i_fu_980_p2.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_6_i_i_fu_980_p2() {
    sum_6_i_i_fu_980_p2 = (tmp_3_i_reg_1028.read() | ap_const_lv8_6);
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_7_i_i_cast_fu_995_p1() {
    sum_7_i_i_cast_fu_995_p1 = esl_zext<64,8>(sum_7_i_i_fu_990_p2.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_sum_7_i_i_fu_990_p2() {
    sum_7_i_i_fu_990_p2 = (tmp_3_i_reg_1028.read() | ap_const_lv8_7);
}

void pqcrystals_fips202_ref_sha3_256::thread_tmp_3_i_fu_840_p3() {
    tmp_3_i_fu_840_p3 = esl_concat<5,3>(i_1_i_reg_792.read(), ap_const_lv3_0);
}

void pqcrystals_fips202_ref_sha3_256::thread_tmp_4_i_fu_848_p1() {
    tmp_4_i_fu_848_p1 = esl_zext<64,8>(tmp_3_i_fu_840_p3.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_tmp_5_i_fu_835_p1() {
    tmp_5_i_fu_835_p1 = esl_zext<64,5>(i_1_i_reg_792.read());
}

void pqcrystals_fips202_ref_sha3_256::thread_tmp_6_i_fu_829_p2() {
    tmp_6_i_fu_829_p2 = (!i_1_i_reg_792.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_i_reg_792.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pqcrystals_fips202_ref_sha3_256::thread_tmp_fu_853_p1() {
    tmp_fu_853_p1 = s_q0.read().range(8-1, 0);
}

void pqcrystals_fips202_ref_sha3_256::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_keccak_absorb_fu_804_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_816_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_i_fu_823_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void pqcrystals_fips202_ref_sha3_256::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_address0\" :  \"" << h_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_ce0\" :  \"" << h_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_we0\" :  \"" << h_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_d0\" :  \"" << h_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_address1\" :  \"" << h_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_ce1\" :  \"" << h_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_we1\" :  \"" << h_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"h_d1\" :  \"" << h_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"IN_r_address0\" :  \"" << IN_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"IN_r_ce0\" :  \"" << IN_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_r_q0\" :  \"" << IN_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"IN_r_address1\" :  \"" << IN_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"IN_r_ce1\" :  \"" << IN_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"IN_r_q1\" :  \"" << IN_r_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inlen\" :  \"" << inlen.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

