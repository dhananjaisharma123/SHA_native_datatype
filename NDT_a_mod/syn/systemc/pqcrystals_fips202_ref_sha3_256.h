// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pqcrystals_fips202_ref_sha3_256_HH_
#define _pqcrystals_fips202_ref_sha3_256_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "keccak_absorb.h"
#include "KeccakF1600_StatePer.h"
#include "pqcrystals_fips202_ref_sha3_256_s.h"
#include "pqcrystals_fips202_ref_sha3_256_out_assign.h"

namespace ap_rtl {

struct pqcrystals_fips202_ref_sha3_256 : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > h_address0;
    sc_out< sc_logic > h_ce0;
    sc_out< sc_logic > h_we0;
    sc_out< sc_lv<8> > h_d0;
    sc_out< sc_lv<5> > h_address1;
    sc_out< sc_logic > h_ce1;
    sc_out< sc_logic > h_we1;
    sc_out< sc_lv<8> > h_d1;
    sc_out< sc_lv<12> > IN_r_address0;
    sc_out< sc_logic > IN_r_ce0;
    sc_in< sc_lv<8> > IN_r_q0;
    sc_out< sc_lv<12> > IN_r_address1;
    sc_out< sc_logic > IN_r_ce1;
    sc_in< sc_lv<8> > IN_r_q1;
    sc_in< sc_lv<64> > inlen;


    // Module declarations
    pqcrystals_fips202_ref_sha3_256(sc_module_name name);
    SC_HAS_PROCESS(pqcrystals_fips202_ref_sha3_256);

    ~pqcrystals_fips202_ref_sha3_256();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pqcrystals_fips202_ref_sha3_256_s* s_U;
    pqcrystals_fips202_ref_sha3_256_out_assign* out_assign_U;
    keccak_absorb* grp_keccak_absorb_fu_810;
    KeccakF1600_StatePer* grp_KeccakF1600_StatePer_fu_822;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > tmp_6_i_fu_835_p2;
    sc_signal< sc_lv<5> > tmp_6_i_reg_1014;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_i_fu_829_p2;
    sc_signal< sc_lv<8> > tmp_3_i_fu_846_p3;
    sc_signal< sc_lv<8> > tmp_3_i_reg_1034;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > tmp_4_2_i_i_reg_1044;
    sc_signal< sc_lv<8> > tmp_4_3_i_i_reg_1049;
    sc_signal< sc_lv<8> > tmp_4_4_i_i_reg_1054;
    sc_signal< sc_lv<8> > tmp_4_5_i_i_reg_1059;
    sc_signal< sc_lv<8> > tmp_4_6_i_i_reg_1064;
    sc_signal< sc_lv<8> > tmp_4_7_i_i_reg_1069;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<5> > s_address0;
    sc_signal< sc_logic > s_ce0;
    sc_signal< sc_logic > s_we0;
    sc_signal< sc_lv<64> > s_d0;
    sc_signal< sc_lv<64> > s_q0;
    sc_signal< sc_lv<5> > s_address1;
    sc_signal< sc_logic > s_ce1;
    sc_signal< sc_logic > s_we1;
    sc_signal< sc_lv<64> > s_d1;
    sc_signal< sc_lv<64> > s_q1;
    sc_signal< sc_lv<8> > out_assign_address0;
    sc_signal< sc_logic > out_assign_ce0;
    sc_signal< sc_logic > out_assign_we0;
    sc_signal< sc_lv<8> > out_assign_d0;
    sc_signal< sc_lv<8> > out_assign_q0;
    sc_signal< sc_lv<8> > out_assign_address1;
    sc_signal< sc_logic > out_assign_ce1;
    sc_signal< sc_logic > out_assign_we1;
    sc_signal< sc_lv<8> > out_assign_d1;
    sc_signal< sc_lv<8> > out_assign_q1;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_ap_start;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_ap_done;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_ap_idle;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_ap_ready;
    sc_signal< sc_lv<5> > grp_keccak_absorb_fu_810_s_address0;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_s_ce0;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_s_we0;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_810_s_d0;
    sc_signal< sc_lv<5> > grp_keccak_absorb_fu_810_s_address1;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_s_ce1;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_s_we1;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_810_s_d1;
    sc_signal< sc_lv<12> > grp_keccak_absorb_fu_810_m_address0;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_m_ce0;
    sc_signal< sc_lv<12> > grp_keccak_absorb_fu_810_m_address1;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_m_ce1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_ap_start;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_ap_done;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_ap_idle;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_ap_ready;
    sc_signal< sc_lv<5> > grp_KeccakF1600_StatePer_fu_822_state_address0;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_state_ce0;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_state_we0;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_822_state_d0;
    sc_signal< sc_lv<5> > grp_KeccakF1600_StatePer_fu_822_state_address1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_state_ce1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_state_we1;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_822_state_d1;
    sc_signal< sc_lv<5> > i_1_i_reg_798;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_keccak_absorb_fu_810_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_822_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_5_i_fu_841_p1;
    sc_signal< sc_lv<64> > tmp_4_i_fu_854_p1;
    sc_signal< sc_lv<64> > sum_1_i_i5_cast_fu_881_p1;
    sc_signal< sc_lv<64> > sum_2_i_i6_cast_fu_951_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > sum_3_i_i7_cast_fu_961_p1;
    sc_signal< sc_lv<64> > sum_4_i_i8_cast_fu_971_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > sum_5_i_i9_cast_fu_981_p1;
    sc_signal< sc_lv<64> > sum_6_i_i_cast_fu_991_p1;
    sc_signal< sc_lv<64> > sum_7_i_i_cast_fu_1001_p1;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<8> > tmp_fu_859_p1;
    sc_signal< sc_lv<8> > sum_1_i_i5_fu_875_p2;
    sc_signal< sc_lv<8> > sum_2_i_i6_fu_946_p2;
    sc_signal< sc_lv<8> > sum_3_i_i7_fu_956_p2;
    sc_signal< sc_lv<8> > sum_4_i_i8_fu_966_p2;
    sc_signal< sc_lv<8> > sum_5_i_i9_fu_976_p2;
    sc_signal< sc_lv<8> > sum_6_i_i_fu_986_p2;
    sc_signal< sc_lv<8> > sum_7_i_i_fu_996_p2;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_fsm_state1;
    static const sc_lv<25> ap_ST_fsm_state2;
    static const sc_lv<25> ap_ST_fsm_state3;
    static const sc_lv<25> ap_ST_fsm_state4;
    static const sc_lv<25> ap_ST_fsm_state5;
    static const sc_lv<25> ap_ST_fsm_state6;
    static const sc_lv<25> ap_ST_fsm_state7;
    static const sc_lv<25> ap_ST_fsm_state8;
    static const sc_lv<25> ap_ST_fsm_state9;
    static const sc_lv<25> ap_ST_fsm_state10;
    static const sc_lv<25> ap_ST_fsm_state11;
    static const sc_lv<25> ap_ST_fsm_state12;
    static const sc_lv<25> ap_ST_fsm_state13;
    static const sc_lv<25> ap_ST_fsm_state14;
    static const sc_lv<25> ap_ST_fsm_state15;
    static const sc_lv<25> ap_ST_fsm_state16;
    static const sc_lv<25> ap_ST_fsm_state17;
    static const sc_lv<25> ap_ST_fsm_state18;
    static const sc_lv<25> ap_ST_fsm_state19;
    static const sc_lv<25> ap_ST_fsm_state20;
    static const sc_lv<25> ap_ST_fsm_state21;
    static const sc_lv<25> ap_ST_fsm_state22;
    static const sc_lv<25> ap_ST_fsm_state23;
    static const sc_lv<25> ap_ST_fsm_state24;
    static const sc_lv<25> ap_ST_fsm_state25;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<64> ap_const_lv64_10;
    static const sc_lv<64> ap_const_lv64_11;
    static const sc_lv<64> ap_const_lv64_12;
    static const sc_lv<64> ap_const_lv64_13;
    static const sc_lv<64> ap_const_lv64_14;
    static const sc_lv<64> ap_const_lv64_15;
    static const sc_lv<64> ap_const_lv64_16;
    static const sc_lv<64> ap_const_lv64_17;
    static const sc_lv<64> ap_const_lv64_18;
    static const sc_lv<64> ap_const_lv64_19;
    static const sc_lv<64> ap_const_lv64_1A;
    static const sc_lv<64> ap_const_lv64_1B;
    static const sc_lv<64> ap_const_lv64_1C;
    static const sc_lv<64> ap_const_lv64_1D;
    static const sc_lv<64> ap_const_lv64_1E;
    static const sc_lv<64> ap_const_lv64_1F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_7;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_IN_r_address0();
    void thread_IN_r_address1();
    void thread_IN_r_ce0();
    void thread_IN_r_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_i_fu_829_p2();
    void thread_grp_KeccakF1600_StatePer_fu_822_ap_start();
    void thread_grp_keccak_absorb_fu_810_ap_start();
    void thread_h_address0();
    void thread_h_address1();
    void thread_h_ce0();
    void thread_h_ce1();
    void thread_h_d0();
    void thread_h_d1();
    void thread_h_we0();
    void thread_h_we1();
    void thread_out_assign_address0();
    void thread_out_assign_address1();
    void thread_out_assign_ce0();
    void thread_out_assign_ce1();
    void thread_out_assign_d0();
    void thread_out_assign_d1();
    void thread_out_assign_we0();
    void thread_out_assign_we1();
    void thread_s_address0();
    void thread_s_address1();
    void thread_s_ce0();
    void thread_s_ce1();
    void thread_s_d0();
    void thread_s_d1();
    void thread_s_we0();
    void thread_s_we1();
    void thread_sum_1_i_i5_cast_fu_881_p1();
    void thread_sum_1_i_i5_fu_875_p2();
    void thread_sum_2_i_i6_cast_fu_951_p1();
    void thread_sum_2_i_i6_fu_946_p2();
    void thread_sum_3_i_i7_cast_fu_961_p1();
    void thread_sum_3_i_i7_fu_956_p2();
    void thread_sum_4_i_i8_cast_fu_971_p1();
    void thread_sum_4_i_i8_fu_966_p2();
    void thread_sum_5_i_i9_cast_fu_981_p1();
    void thread_sum_5_i_i9_fu_976_p2();
    void thread_sum_6_i_i_cast_fu_991_p1();
    void thread_sum_6_i_i_fu_986_p2();
    void thread_sum_7_i_i_cast_fu_1001_p1();
    void thread_sum_7_i_i_fu_996_p2();
    void thread_tmp_3_i_fu_846_p3();
    void thread_tmp_4_i_fu_854_p1();
    void thread_tmp_5_i_fu_841_p1();
    void thread_tmp_6_i_fu_835_p2();
    void thread_tmp_fu_859_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
