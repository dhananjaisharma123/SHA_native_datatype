// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        m_address0,
        m_ce0,
        m_q0,
        m_address1,
        m_ce1,
        m_q1,
        mlen
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
output  [11:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;
output  [11:0] m_address1;
output   m_ce1;
input  [7:0] m_q1;
input  [63:0] mlen;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg[4:0] s_address1;
reg s_ce1;
reg s_we1;
reg[63:0] s_d1;
reg[11:0] m_address0;
reg m_ce0;
reg[11:0] m_address1;
reg m_ce1;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] indvarinc_fu_701_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_8_fu_721_p2;
reg   [0:0] tmp_8_reg_1155;
wire    ap_CS_fsm_state14;
wire   [4:0] i_6_fu_738_p2;
reg   [4:0] i_6_reg_1162;
wire    ap_CS_fsm_state15;
wire   [7:0] tmp_3_fu_744_p3;
reg   [7:0] tmp_3_reg_1167;
wire   [0:0] tmp_9_fu_732_p2;
reg   [4:0] s_addr_25_reg_1187;
reg   [7:0] m_load_1_reg_1193;
wire    ap_CS_fsm_state16;
reg   [7:0] m_load_2_reg_1198;
reg   [7:0] m_load_3_reg_1213;
wire    ap_CS_fsm_state17;
reg   [7:0] m_load_4_reg_1218;
reg   [7:0] m_load_5_reg_1233;
wire    ap_CS_fsm_state18;
reg   [7:0] m_load_6_reg_1238;
wire   [8:0] p_0_rec_lcssa_cast_ca_fu_855_p1;
reg   [8:0] p_0_rec_lcssa_cast_ca_reg_1253;
wire    ap_CS_fsm_state20;
wire    grp_KeccakF1600_StatePer_fu_693_ap_ready;
wire    grp_KeccakF1600_StatePer_fu_693_ap_done;
reg    ap_block_state20_on_subcall_done;
wire   [63:0] i_2_cast_fu_863_p1;
reg   [63:0] i_2_cast_reg_1258;
wire    ap_CS_fsm_state21;
wire   [7:0] tmp_4_fu_873_p2;
reg   [7:0] tmp_4_reg_1266;
wire   [0:0] exitcond_fu_867_p2;
wire   [7:0] t_addr_2_reg_1276;
wire    ap_CS_fsm_state23;
wire   [0:0] tmp_6_fu_901_p2;
reg   [0:0] tmp_6_reg_1281;
wire    ap_CS_fsm_state25;
wire   [7:0] tmp_7_fu_907_p3;
reg   [7:0] tmp_7_reg_1285;
reg   [4:0] s_addr_26_reg_1305;
wire   [7:0] t_q0;
reg   [7:0] t_load_1_reg_1311;
wire    ap_CS_fsm_state26;
wire   [7:0] t_q1;
reg   [7:0] t_load_2_reg_1316;
reg   [7:0] t_load_3_reg_1331;
wire    ap_CS_fsm_state27;
reg   [7:0] t_load_4_reg_1336;
reg   [7:0] t_load_5_reg_1351;
wire    ap_CS_fsm_state28;
reg   [7:0] t_load_6_reg_1356;
wire   [7:0] tmp_16_1_fu_1029_p3;
reg   [7:0] tmp_16_1_reg_1374;
wire    ap_CS_fsm_state29;
wire   [0:0] tmp_15_1_fu_1023_p2;
reg   [4:0] s_addr_27_reg_1394;
wire   [4:0] i_7_1_fu_1053_p2;
reg   [4:0] i_7_1_reg_1400;
reg   [7:0] t_load_9_reg_1405;
wire    ap_CS_fsm_state30;
reg   [7:0] t_load_10_reg_1410;
reg   [7:0] t_load_11_reg_1425;
wire    ap_CS_fsm_state31;
reg   [7:0] t_load_12_reg_1430;
reg   [7:0] t_load_13_reg_1445;
wire    ap_CS_fsm_state32;
reg   [7:0] t_load_14_reg_1450;
reg   [7:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
reg   [7:0] t_address1;
reg    t_ce1;
wire    grp_KeccakF1600_StatePer_fu_693_ap_start;
wire    grp_KeccakF1600_StatePer_fu_693_ap_idle;
wire   [4:0] grp_KeccakF1600_StatePer_fu_693_state_address0;
wire    grp_KeccakF1600_StatePer_fu_693_state_ce0;
wire    grp_KeccakF1600_StatePer_fu_693_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_fu_693_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_fu_693_state_address1;
wire    grp_KeccakF1600_StatePer_fu_693_state_ce1;
wire    grp_KeccakF1600_StatePer_fu_693_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_fu_693_state_d1;
reg   [7:0] invdar_reg_625;
wire   [0:0] tmp_s_fu_712_p2;
reg   [4:0] i_1_reg_636;
wire    ap_CS_fsm_state19;
reg   [7:0] ap_phi_mux_p_0_rec_lcssa_phi_fu_651_p4;
reg   [7:0] p_0_rec_lcssa_reg_647;
reg   [63:0] i_5_lcssa_reg_659;
wire   [63:0] mlen_assign_fu_849_p2;
reg   [7:0] i_2_reg_670;
wire    ap_CS_fsm_state22;
reg   [4:0] i_3_reg_681;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state33;
reg    grp_KeccakF1600_StatePer_fu_693_ap_start_reg;
wire   [63:0] tmp_fu_707_p1;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [63:0] tmp_3_cast_fu_752_p1;
wire   [63:0] sum_1_i_cast_fu_763_p1;
wire   [63:0] i_1_cast7_fu_727_p1;
wire   [63:0] sum_2_i_cast_fu_773_p1;
wire   [63:0] sum_3_i_cast_fu_783_p1;
wire   [63:0] sum_4_i_cast_fu_793_p1;
wire   [63:0] sum_5_i_cast_fu_803_p1;
wire   [63:0] sum_6_i_cast_fu_813_p1;
wire   [63:0] sum_7_i_cast_fu_823_p1;
wire   [63:0] sum9_cast_fu_884_p1;
wire   [63:0] tmp_7_cast_fu_915_p1;
wire   [63:0] sum_1_i1_cast_fu_926_p1;
wire   [63:0] i_3_cast4_fu_896_p1;
wire   [63:0] sum_2_i1_cast_fu_936_p1;
wire   [63:0] sum_3_i1_cast_fu_946_p1;
wire   [63:0] sum_4_i1_cast_fu_956_p1;
wire   [63:0] sum_5_i1_cast_fu_966_p1;
wire   [63:0] sum_6_i1_cast_fu_976_p1;
wire   [63:0] sum_7_i1_cast_fu_986_p1;
wire   [63:0] tmp_16_1_cast_fu_1037_p1;
wire   [63:0] sum_1_i2_cast_fu_1048_p1;
wire   [63:0] i_7_cast2_fu_1018_p1;
wire   [63:0] sum_2_i2_cast_fu_1064_p1;
wire   [63:0] sum_3_i2_cast_fu_1074_p1;
wire   [63:0] sum_4_i2_cast_fu_1084_p1;
wire   [63:0] sum_5_i2_cast_fu_1094_p1;
wire   [63:0] sum_6_i2_cast_fu_1104_p1;
wire   [63:0] sum_7_i2_cast_fu_1114_p1;
wire   [7:0] tmp_1_fu_889_p2;
wire   [63:0] tmp_5_fu_842_p2;
wire   [63:0] tmp_10_fu_1005_p2;
wire   [63:0] tmp_18_1_fu_1133_p2;
wire   [7:0] ff_fu_718_p1;
wire   [7:0] sum_1_i_fu_757_p2;
wire   [7:0] sum_2_i_fu_768_p2;
wire   [7:0] sum_3_i_fu_778_p2;
wire   [7:0] sum_4_i_fu_788_p2;
wire   [7:0] sum_5_i_fu_798_p2;
wire   [7:0] sum_6_i_fu_808_p2;
wire   [7:0] sum_7_i_fu_818_p2;
wire   [63:0] r_1_7_i_fu_828_p9;
wire   [8:0] i_2_cast5_cast_fu_859_p1;
wire   [8:0] sum9_fu_879_p2;
wire   [7:0] sum_1_i1_fu_920_p2;
wire   [7:0] sum_2_i1_fu_931_p2;
wire   [7:0] sum_3_i1_fu_941_p2;
wire   [7:0] sum_4_i1_fu_951_p2;
wire   [7:0] sum_5_i1_fu_961_p2;
wire   [7:0] sum_6_i1_fu_971_p2;
wire   [7:0] sum_7_i1_fu_981_p2;
wire   [63:0] r_1_7_i1_fu_991_p9;
wire   [4:0] i_7_s_fu_1012_p2;
wire   [7:0] sum_1_i2_fu_1042_p2;
wire   [7:0] sum_2_i2_fu_1059_p2;
wire   [7:0] sum_3_i2_fu_1069_p2;
wire   [7:0] sum_4_i2_fu_1079_p2;
wire   [7:0] sum_5_i2_fu_1089_p2;
wire   [7:0] sum_6_i2_fu_1099_p2;
wire   [7:0] sum_7_i2_fu_1109_p2;
wire   [63:0] r_1_7_i2_fu_1119_p9;
reg   [32:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
#0 grp_KeccakF1600_StatePer_fu_693_ap_start_reg = 1'b0;
end

keccak_absorb_t #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .q1(t_q1)
);

KeccakF1600_StatePer grp_KeccakF1600_StatePer_fu_693(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_fu_693_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_fu_693_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_fu_693_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_fu_693_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_fu_693_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_fu_693_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_fu_693_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_fu_693_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_fu_693_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_fu_693_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_fu_693_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_fu_693_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_fu_693_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) & (tmp_9_fu_732_p2 == 1'd1))) begin
            grp_KeccakF1600_StatePer_fu_693_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_fu_693_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_fu_693_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_1_reg_636 <= i_6_reg_1162;
    end else if (((tmp_8_fu_721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        i_1_reg_636 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done))) begin
        i_2_reg_670 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_2_reg_670 <= tmp_4_reg_1266;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i_3_reg_681 <= i_7_1_reg_1400;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        i_3_reg_681 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done))) begin
        i_5_lcssa_reg_659 <= mlen_assign_fu_849_p2;
    end else if (((tmp_8_fu_721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        i_5_lcssa_reg_659 <= mlen;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_712_p2 == 1'd0))) begin
        invdar_reg_625 <= indvarinc_fu_701_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_625 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done))) begin
                p_0_rec_lcssa_reg_647[3] <= 1'b1;
        p_0_rec_lcssa_reg_647[7] <= 1'b1;
    end else if (((tmp_8_fu_721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                p_0_rec_lcssa_reg_647[3] <= 1'b0;
        p_0_rec_lcssa_reg_647[7] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_2_cast_reg_1258[7 : 0] <= i_2_cast_fu_863_p1[7 : 0];
        tmp_4_reg_1266 <= tmp_4_fu_873_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_6_reg_1162 <= i_6_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (tmp_15_1_fu_1023_p2 == 1'd0) & (tmp_6_reg_1281 == 1'd0))) begin
        i_7_1_reg_1400 <= i_7_1_fu_1053_p2;
        s_addr_27_reg_1394[4 : 1] <= i_7_cast2_fu_1018_p1[4 : 1];
        tmp_16_1_reg_1374[7 : 4] <= tmp_16_1_fu_1029_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        m_load_1_reg_1193 <= m_q0;
        m_load_2_reg_1198 <= m_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        m_load_3_reg_1213 <= m_q0;
        m_load_4_reg_1218 <= m_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        m_load_5_reg_1233 <= m_q0;
        m_load_6_reg_1238 <= m_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done))) begin
        p_0_rec_lcssa_cast_ca_reg_1253[3] <= p_0_rec_lcssa_cast_ca_fu_855_p1[3];
p_0_rec_lcssa_cast_ca_reg_1253[7] <= p_0_rec_lcssa_cast_ca_fu_855_p1[7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_9_fu_732_p2 == 1'd0))) begin
        s_addr_25_reg_1187 <= i_1_cast7_fu_727_p1;
        tmp_3_reg_1167[7 : 3] <= tmp_3_fu_744_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_6_fu_901_p2 == 1'd0))) begin
        s_addr_26_reg_1305 <= i_3_cast4_fu_896_p1;
        tmp_7_reg_1285[7 : 3] <= tmp_7_fu_907_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        t_load_10_reg_1410 <= t_q0;
        t_load_9_reg_1405 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        t_load_11_reg_1425 <= t_q1;
        t_load_12_reg_1430 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        t_load_13_reg_1445 <= t_q1;
        t_load_14_reg_1450 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        t_load_1_reg_1311 <= t_q0;
        t_load_2_reg_1316 <= t_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        t_load_3_reg_1331 <= t_q1;
        t_load_4_reg_1336 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        t_load_5_reg_1351 <= t_q1;
        t_load_6_reg_1356 <= t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_6_reg_1281 <= tmp_6_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_8_reg_1155 <= tmp_8_fu_721_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state29) & ((tmp_15_1_fu_1023_p2 == 1'd1) | (tmp_6_reg_1281 == 1'd1))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_phi_mux_p_0_rec_lcssa_phi_fu_651_p4 = 8'd136;
    end else begin
        ap_phi_mux_p_0_rec_lcssa_phi_fu_651_p4 = p_0_rec_lcssa_reg_647;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & ((tmp_15_1_fu_1023_p2 == 1'd1) | (tmp_6_reg_1281 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        m_address0 = sum9_cast_fu_884_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        m_address0 = sum_6_i_cast_fu_813_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        m_address0 = sum_4_i_cast_fu_793_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        m_address0 = sum_2_i_cast_fu_773_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        m_address0 = tmp_3_cast_fu_752_p1;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        m_address1 = sum_7_i_cast_fu_823_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        m_address1 = sum_5_i_cast_fu_803_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        m_address1 = sum_3_i_cast_fu_783_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        m_address1 = sum_1_i_cast_fu_763_p1;
    end else begin
        m_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        m_ce1 = 1'b1;
    end else begin
        m_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        s_address0 = s_addr_27_reg_1394;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        s_address0 = s_addr_26_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        s_address0 = s_addr_25_reg_1187;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        s_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        s_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        s_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        s_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        s_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        s_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_address0 = 64'd0;
    end else if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_address0 = grp_KeccakF1600_StatePer_fu_693_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        s_address1 = s_addr_27_reg_1394;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        s_address1 = s_addr_26_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        s_address1 = s_addr_25_reg_1187;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        s_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        s_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        s_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        s_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        s_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        s_address1 = 64'd2;
    end else if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_address1 = grp_KeccakF1600_StatePer_fu_693_state_address1;
    end else begin
        s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state29))) begin
        s_ce0 = 1'b1;
    end else if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_ce0 = grp_KeccakF1600_StatePer_fu_693_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state18))) begin
        s_ce1 = 1'b1;
    end else if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_ce1 = grp_KeccakF1600_StatePer_fu_693_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        s_d0 = tmp_18_1_fu_1133_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        s_d0 = tmp_10_fu_1005_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        s_d0 = tmp_5_fu_842_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        s_d0 = 64'd0;
    end else if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_d0 = grp_KeccakF1600_StatePer_fu_693_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        s_d1 = 64'd0;
    end else if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_d1 = grp_KeccakF1600_StatePer_fu_693_state_d1;
    end else begin
        s_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_712_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state29) & (tmp_6_reg_1281 == 1'd0)))) begin
        s_we0 = 1'b1;
    end else if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_we0 = grp_KeccakF1600_StatePer_fu_693_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        s_we1 = 1'b1;
    end else if (((tmp_8_reg_1155 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        s_we1 = grp_KeccakF1600_StatePer_fu_693_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        t_address0 = sum_7_i2_cast_fu_1114_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        t_address0 = sum_5_i2_cast_fu_1094_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        t_address0 = sum_3_i2_cast_fu_1074_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_address0 = sum_1_i2_cast_fu_1048_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        t_address0 = sum_7_i1_cast_fu_986_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        t_address0 = sum_5_i1_cast_fu_966_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        t_address0 = sum_3_i1_cast_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        t_address0 = tmp_7_cast_fu_915_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        t_address0 = t_addr_2_reg_1276;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        t_address0 = 64'd135;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        t_address0 = i_2_cast_reg_1258;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        t_address0 = i_5_lcssa_reg_659;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_address0 = tmp_fu_707_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        t_address1 = sum_6_i2_cast_fu_1104_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        t_address1 = sum_4_i2_cast_fu_1084_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        t_address1 = sum_2_i2_cast_fu_1064_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_address1 = tmp_16_1_cast_fu_1037_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        t_address1 = sum_6_i1_cast_fu_976_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        t_address1 = sum_4_i1_cast_fu_956_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        t_address1 = sum_2_i1_cast_fu_936_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        t_address1 = sum_1_i1_cast_fu_926_p1;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        t_d0 = tmp_1_fu_889_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        t_d0 = m_q0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        t_d0 = 8'd6;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state21) & (exitcond_fu_867_p2 == 1'd1)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_712_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((tmp_8_fu_721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (tmp_9_fu_732_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (1'b0 == ap_block_state20_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (exitcond_fu_867_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (tmp_6_fu_901_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & ((tmp_15_1_fu_1023_p2 == 1'd1) | (tmp_6_reg_1281 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state20_on_subcall_done = ((tmp_8_reg_1155 == 1'd1) & (grp_KeccakF1600_StatePer_fu_693_ap_done == 1'b0));
end

assign exitcond_fu_867_p2 = ((i_2_cast_fu_863_p1 == i_5_lcssa_reg_659) ? 1'b1 : 1'b0);

assign ff_fu_718_p1 = mlen[7:0];

assign grp_KeccakF1600_StatePer_fu_693_ap_start = grp_KeccakF1600_StatePer_fu_693_ap_start_reg;

assign i_1_cast7_fu_727_p1 = i_1_reg_636;

assign i_2_cast5_cast_fu_859_p1 = i_2_reg_670;

assign i_2_cast_fu_863_p1 = i_2_reg_670;

assign i_3_cast4_fu_896_p1 = i_3_reg_681;

assign i_6_fu_738_p2 = (i_1_reg_636 + 5'd1);

assign i_7_1_fu_1053_p2 = (i_3_reg_681 + 5'd2);

assign i_7_cast2_fu_1018_p1 = i_7_s_fu_1012_p2;

assign i_7_s_fu_1012_p2 = (i_3_reg_681 | 5'd1);

assign indvarinc_fu_701_p2 = (invdar_reg_625 + 8'd1);

assign mlen_assign_fu_849_p2 = ($signed(mlen) + $signed(64'd18446744073709551480));

assign p_0_rec_lcssa_cast_ca_fu_855_p1 = ap_phi_mux_p_0_rec_lcssa_phi_fu_651_p4;

assign r_1_7_i1_fu_991_p9 = {{{{{{{{t_q0}, {t_q1}}, {t_load_6_reg_1356}}, {t_load_5_reg_1351}}, {t_load_4_reg_1336}}, {t_load_3_reg_1331}}, {t_load_2_reg_1316}}, {t_load_1_reg_1311}};

assign r_1_7_i2_fu_1119_p9 = {{{{{{{{t_q0}, {t_q1}}, {t_load_14_reg_1450}}, {t_load_13_reg_1445}}, {t_load_12_reg_1430}}, {t_load_11_reg_1425}}, {t_load_10_reg_1410}}, {t_load_9_reg_1405}};

assign r_1_7_i_fu_828_p9 = {{{{{{{{m_q1}, {m_q0}}, {m_load_6_reg_1238}}, {m_load_5_reg_1233}}, {m_load_4_reg_1218}}, {m_load_3_reg_1213}}, {m_load_2_reg_1198}}, {m_load_1_reg_1193}};

assign sum9_cast_fu_884_p1 = sum9_fu_879_p2;

assign sum9_fu_879_p2 = (i_2_cast5_cast_fu_859_p1 + p_0_rec_lcssa_cast_ca_reg_1253);

assign sum_1_i1_cast_fu_926_p1 = sum_1_i1_fu_920_p2;

assign sum_1_i1_fu_920_p2 = (tmp_7_fu_907_p3 | 8'd1);

assign sum_1_i2_cast_fu_1048_p1 = sum_1_i2_fu_1042_p2;

assign sum_1_i2_fu_1042_p2 = (tmp_16_1_fu_1029_p3 | 8'd1);

assign sum_1_i_cast_fu_763_p1 = sum_1_i_fu_757_p2;

assign sum_1_i_fu_757_p2 = (tmp_3_fu_744_p3 | 8'd1);

assign sum_2_i1_cast_fu_936_p1 = sum_2_i1_fu_931_p2;

assign sum_2_i1_fu_931_p2 = (tmp_7_reg_1285 | 8'd2);

assign sum_2_i2_cast_fu_1064_p1 = sum_2_i2_fu_1059_p2;

assign sum_2_i2_fu_1059_p2 = (tmp_16_1_reg_1374 | 8'd2);

assign sum_2_i_cast_fu_773_p1 = sum_2_i_fu_768_p2;

assign sum_2_i_fu_768_p2 = (tmp_3_reg_1167 | 8'd2);

assign sum_3_i1_cast_fu_946_p1 = sum_3_i1_fu_941_p2;

assign sum_3_i1_fu_941_p2 = (tmp_7_reg_1285 | 8'd3);

assign sum_3_i2_cast_fu_1074_p1 = sum_3_i2_fu_1069_p2;

assign sum_3_i2_fu_1069_p2 = (tmp_16_1_reg_1374 | 8'd3);

assign sum_3_i_cast_fu_783_p1 = sum_3_i_fu_778_p2;

assign sum_3_i_fu_778_p2 = (tmp_3_reg_1167 | 8'd3);

assign sum_4_i1_cast_fu_956_p1 = sum_4_i1_fu_951_p2;

assign sum_4_i1_fu_951_p2 = (tmp_7_reg_1285 | 8'd4);

assign sum_4_i2_cast_fu_1084_p1 = sum_4_i2_fu_1079_p2;

assign sum_4_i2_fu_1079_p2 = (tmp_16_1_reg_1374 | 8'd4);

assign sum_4_i_cast_fu_793_p1 = sum_4_i_fu_788_p2;

assign sum_4_i_fu_788_p2 = (tmp_3_reg_1167 | 8'd4);

assign sum_5_i1_cast_fu_966_p1 = sum_5_i1_fu_961_p2;

assign sum_5_i1_fu_961_p2 = (tmp_7_reg_1285 | 8'd5);

assign sum_5_i2_cast_fu_1094_p1 = sum_5_i2_fu_1089_p2;

assign sum_5_i2_fu_1089_p2 = (tmp_16_1_reg_1374 | 8'd5);

assign sum_5_i_cast_fu_803_p1 = sum_5_i_fu_798_p2;

assign sum_5_i_fu_798_p2 = (tmp_3_reg_1167 | 8'd5);

assign sum_6_i1_cast_fu_976_p1 = sum_6_i1_fu_971_p2;

assign sum_6_i1_fu_971_p2 = (tmp_7_reg_1285 | 8'd6);

assign sum_6_i2_cast_fu_1104_p1 = sum_6_i2_fu_1099_p2;

assign sum_6_i2_fu_1099_p2 = (tmp_16_1_reg_1374 | 8'd6);

assign sum_6_i_cast_fu_813_p1 = sum_6_i_fu_808_p2;

assign sum_6_i_fu_808_p2 = (tmp_3_reg_1167 | 8'd6);

assign sum_7_i1_cast_fu_986_p1 = sum_7_i1_fu_981_p2;

assign sum_7_i1_fu_981_p2 = (tmp_7_reg_1285 | 8'd7);

assign sum_7_i2_cast_fu_1114_p1 = sum_7_i2_fu_1109_p2;

assign sum_7_i2_fu_1109_p2 = (tmp_16_1_reg_1374 | 8'd7);

assign sum_7_i_cast_fu_823_p1 = sum_7_i_fu_818_p2;

assign sum_7_i_fu_818_p2 = (tmp_3_reg_1167 | 8'd7);

assign t_addr_2_reg_1276 = 64'd135;

assign tmp_10_fu_1005_p2 = (s_q1 ^ r_1_7_i1_fu_991_p9);

assign tmp_15_1_fu_1023_p2 = ((i_7_s_fu_1012_p2 == 5'd17) ? 1'b1 : 1'b0);

assign tmp_16_1_cast_fu_1037_p1 = tmp_16_1_fu_1029_p3;

assign tmp_16_1_fu_1029_p3 = {{i_7_s_fu_1012_p2}, {3'd0}};

assign tmp_18_1_fu_1133_p2 = (s_q1 ^ r_1_7_i2_fu_1119_p9);

assign tmp_1_fu_889_p2 = (t_q0 | 8'd128);

assign tmp_3_cast_fu_752_p1 = tmp_3_fu_744_p3;

assign tmp_3_fu_744_p3 = {{i_1_reg_636}, {3'd0}};

assign tmp_4_fu_873_p2 = (i_2_reg_670 + 8'd1);

assign tmp_5_fu_842_p2 = (s_q1 ^ r_1_7_i_fu_828_p9);

assign tmp_6_fu_901_p2 = ((i_3_reg_681 == 5'd17) ? 1'b1 : 1'b0);

assign tmp_7_cast_fu_915_p1 = tmp_7_fu_907_p3;

assign tmp_7_fu_907_p3 = {{i_3_reg_681}, {3'd0}};

assign tmp_8_fu_721_p2 = ((ff_fu_718_p1 > 8'd135) ? 1'b1 : 1'b0);

assign tmp_9_fu_732_p2 = ((i_1_reg_636 == 5'd17) ? 1'b1 : 1'b0);

assign tmp_fu_707_p1 = invdar_reg_625;

assign tmp_s_fu_712_p2 = ((invdar_reg_625 == 8'd199) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_3_reg_1167[2:0] <= 3'b000;
    p_0_rec_lcssa_cast_ca_reg_1253[2:0] <= 3'b000;
    p_0_rec_lcssa_cast_ca_reg_1253[6:4] <= 3'b000;
    p_0_rec_lcssa_cast_ca_reg_1253[8] <= 1'b0;
    i_2_cast_reg_1258[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_7_reg_1285[2:0] <= 3'b000;
    tmp_16_1_reg_1374[3:0] <= 4'b1000;
    s_addr_27_reg_1394[0] <= 1'b1;
    p_0_rec_lcssa_reg_647[2:0] <= 3'b000;
    p_0_rec_lcssa_reg_647[6:4] <= 3'b000;
end

endmodule //keccak_absorb
