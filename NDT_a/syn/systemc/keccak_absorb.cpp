// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_absorb.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_absorb::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_absorb::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<19> keccak_absorb::ap_ST_fsm_state1 = "1";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state2 = "10";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state3 = "100";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state4 = "1000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state5 = "10000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state6 = "100000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state7 = "1000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state8 = "10000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state9 = "100000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state10 = "1000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state11 = "10000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state12 = "100000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<19> keccak_absorb::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_1 = "1";
const sc_lv<32> keccak_absorb::ap_const_lv32_2 = "10";
const sc_lv<1> keccak_absorb::ap_const_lv1_1 = "1";
const sc_lv<32> keccak_absorb::ap_const_lv32_3 = "11";
const sc_lv<32> keccak_absorb::ap_const_lv32_4 = "100";
const sc_lv<1> keccak_absorb::ap_const_lv1_0 = "0";
const sc_lv<32> keccak_absorb::ap_const_lv32_5 = "101";
const sc_lv<32> keccak_absorb::ap_const_lv32_6 = "110";
const sc_lv<32> keccak_absorb::ap_const_lv32_7 = "111";
const sc_lv<32> keccak_absorb::ap_const_lv32_A = "1010";
const sc_lv<32> keccak_absorb::ap_const_lv32_C = "1100";
const sc_lv<32> keccak_absorb::ap_const_lv32_E = "1110";
const sc_lv<32> keccak_absorb::ap_const_lv32_F = "1111";
const sc_lv<32> keccak_absorb::ap_const_lv32_10 = "10000";
const sc_lv<32> keccak_absorb::ap_const_lv32_11 = "10001";
const sc_lv<8> keccak_absorb::ap_const_lv8_0 = "00000000";
const sc_lv<5> keccak_absorb::ap_const_lv5_0 = "00000";
const sc_lv<32> keccak_absorb::ap_const_lv32_9 = "1001";
const sc_lv<64> keccak_absorb::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_8 = "1000";
const sc_lv<32> keccak_absorb::ap_const_lv32_B = "1011";
const sc_lv<32> keccak_absorb::ap_const_lv32_D = "1101";
const sc_lv<32> keccak_absorb::ap_const_lv32_12 = "10010";
const sc_lv<64> keccak_absorb::ap_const_lv64_87 = "10000111";
const sc_lv<8> keccak_absorb::ap_const_lv8_6 = "110";
const sc_lv<8> keccak_absorb::ap_const_lv8_1 = "1";
const sc_lv<8> keccak_absorb::ap_const_lv8_C7 = "11000111";
const sc_lv<5> keccak_absorb::ap_const_lv5_19 = "11001";
const sc_lv<5> keccak_absorb::ap_const_lv5_1 = "1";
const sc_lv<8> keccak_absorb::ap_const_lv8_87 = "10000111";
const sc_lv<5> keccak_absorb::ap_const_lv5_11 = "10001";
const sc_lv<3> keccak_absorb::ap_const_lv3_0 = "000";
const sc_lv<14> keccak_absorb::ap_const_lv14_1 = "1";
const sc_lv<64> keccak_absorb::ap_const_lv64_FFFFFFFFFFFFFF78 = "1111111111111111111111111111111111111111111111111111111101111000";
const sc_lv<64> keccak_absorb::ap_const_lv64_88 = "10001000";
const sc_lv<8> keccak_absorb::ap_const_lv8_78 = "1111000";
const sc_lv<14> keccak_absorb::ap_const_lv14_2 = "10";
const sc_lv<14> keccak_absorb::ap_const_lv14_3 = "11";
const sc_lv<14> keccak_absorb::ap_const_lv14_4 = "100";
const sc_lv<14> keccak_absorb::ap_const_lv14_5 = "101";
const sc_lv<14> keccak_absorb::ap_const_lv14_6 = "110";
const sc_lv<14> keccak_absorb::ap_const_lv14_7 = "111";
const sc_lv<8> keccak_absorb::ap_const_lv8_80 = "10000000";
const sc_lv<8> keccak_absorb::ap_const_lv8_2 = "10";
const sc_lv<8> keccak_absorb::ap_const_lv8_3 = "11";
const sc_lv<8> keccak_absorb::ap_const_lv8_4 = "100";
const sc_lv<8> keccak_absorb::ap_const_lv8_5 = "101";
const sc_lv<8> keccak_absorb::ap_const_lv8_7 = "111";
const bool keccak_absorb::ap_const_boolean_1 = true;

keccak_absorb::keccak_absorb(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new keccak_absorb_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->q1(t_q1);
    grp_KeccakF1600_StatePer_fu_404 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_404");
    grp_KeccakF1600_StatePer_fu_404->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_404->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_404->ap_start(grp_KeccakF1600_StatePer_fu_404_ap_start);
    grp_KeccakF1600_StatePer_fu_404->ap_done(grp_KeccakF1600_StatePer_fu_404_ap_done);
    grp_KeccakF1600_StatePer_fu_404->ap_idle(grp_KeccakF1600_StatePer_fu_404_ap_idle);
    grp_KeccakF1600_StatePer_fu_404->ap_ready(grp_KeccakF1600_StatePer_fu_404_ap_ready);
    grp_KeccakF1600_StatePer_fu_404->state_address0(grp_KeccakF1600_StatePer_fu_404_state_address0);
    grp_KeccakF1600_StatePer_fu_404->state_ce0(grp_KeccakF1600_StatePer_fu_404_state_ce0);
    grp_KeccakF1600_StatePer_fu_404->state_we0(grp_KeccakF1600_StatePer_fu_404_state_we0);
    grp_KeccakF1600_StatePer_fu_404->state_d0(grp_KeccakF1600_StatePer_fu_404_state_d0);
    grp_KeccakF1600_StatePer_fu_404->state_q0(s_q0);
    grp_KeccakF1600_StatePer_fu_404->state_address1(grp_KeccakF1600_StatePer_fu_404_state_address1);
    grp_KeccakF1600_StatePer_fu_404->state_ce1(grp_KeccakF1600_StatePer_fu_404_state_ce1);
    grp_KeccakF1600_StatePer_fu_404->state_we1(grp_KeccakF1600_StatePer_fu_404_state_we1);
    grp_KeccakF1600_StatePer_fu_404->state_d1(grp_KeccakF1600_StatePer_fu_404_state_d1);
    grp_KeccakF1600_StatePer_fu_404->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_4_fu_650_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_4_fu_650_p2 );

    SC_METHOD(thread_exitcond_fu_616_p2);
    sensitive << ( i_2_cast_fu_612_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_5_reg_338 );

    SC_METHOD(thread_ff_1_fu_521_p2);
    sensitive << ( ff1_reg_361 );

    SC_METHOD(thread_ff_fu_446_p1);
    sensitive << ( mlen );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_fu_404_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_ap_start_reg );

    SC_METHOD(thread_i_1_cast5_fu_459_p1);
    sensitive << ( i_1_reg_371 );

    SC_METHOD(thread_i_2_cast3_fu_608_p1);
    sensitive << ( i_2_reg_382 );

    SC_METHOD(thread_i_2_cast_fu_612_p1);
    sensitive << ( i_2_reg_382 );

    SC_METHOD(thread_i_3_cast2_fu_645_p1);
    sensitive << ( i_3_reg_393 );

    SC_METHOD(thread_i_4_fu_440_p2);
    sensitive << ( i_reg_327 );

    SC_METHOD(thread_i_6_fu_470_p2);
    sensitive << ( i_1_reg_371 );

    SC_METHOD(thread_i_7_fu_656_p2);
    sensitive << ( i_3_reg_393 );

    SC_METHOD(thread_i_cast6_fu_429_p1);
    sensitive << ( i_reg_327 );

    SC_METHOD(thread_indvarinc_fu_412_p2);
    sensitive << ( invdar_reg_316 );

    SC_METHOD(thread_m_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( sum7_cast_fu_493_p1 );
    sensitive << ( sum_2_i_cast_fu_532_p1 );
    sensitive << ( sum_4_i_cast_fu_552_p1 );
    sensitive << ( sum_6_i_cast_fu_572_p1 );
    sensitive << ( sum9_cast_fu_633_p1 );

    SC_METHOD(thread_m_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sum_1_i_cast_fu_504_p1 );
    sensitive << ( sum_3_i_cast_fu_542_p1 );
    sensitive << ( sum_5_i_cast_fu_562_p1 );
    sensitive << ( sum_7_i_cast_fu_582_p1 );

    SC_METHOD(thread_m_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_m_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_mlen_assign_fu_509_p2);
    sensitive << ( i_5_reg_338 );

    SC_METHOD(thread_p_rec_fu_515_p2);
    sensitive << ( p_0_rec_reg_349 );

    SC_METHOD(thread_r_1_7_i1_fu_746_p9);
    sensitive << ( t_q0 );
    sensitive << ( t_load_1_reg_967 );
    sensitive << ( t_q1 );
    sensitive << ( t_load_2_reg_972 );
    sensitive << ( t_load_3_reg_987 );
    sensitive << ( t_load_4_reg_992 );
    sensitive << ( t_load_5_reg_1007 );
    sensitive << ( t_load_6_reg_1012 );

    SC_METHOD(thread_r_1_7_i_fu_587_p9);
    sensitive << ( m_q0 );
    sensitive << ( m_q1 );
    sensitive << ( m_load_1_reg_851 );
    sensitive << ( m_load_2_reg_856 );
    sensitive << ( m_load_3_reg_871 );
    sensitive << ( m_load_4_reg_876 );
    sensitive << ( m_load_5_reg_891 );
    sensitive << ( m_load_6_reg_896 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( s_addr_1_reg_831 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( s_addr_2_reg_962 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_state_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( i_cast6_fu_429_p1 );

    SC_METHOD(thread_s_address1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_state_address1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_state_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_state_ce1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_state_d0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_5_fu_601_p2 );
    sensitive << ( tmp_11_fu_760_p2 );

    SC_METHOD(thread_s_d1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_state_d1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_fu_434_p2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_state_we0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_s_we1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_state_we1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sum7_cast_fu_493_p1);
    sensitive << ( sum7_fu_488_p2 );

    SC_METHOD(thread_sum7_fu_488_p2);
    sensitive << ( tmp_13_reg_794 );
    sensitive << ( tmp_9_cast_fu_484_p1 );

    SC_METHOD(thread_sum9_cast_fu_633_p1);
    sensitive << ( sum9_fu_628_p2 );

    SC_METHOD(thread_sum9_fu_628_p2);
    sensitive << ( tmp_13_reg_794 );
    sensitive << ( i_2_cast3_fu_608_p1 );

    SC_METHOD(thread_sum_1_i1_cast_fu_681_p1);
    sensitive << ( sum_1_i1_fu_675_p2 );

    SC_METHOD(thread_sum_1_i1_fu_675_p2);
    sensitive << ( tmp_10_fu_662_p3 );

    SC_METHOD(thread_sum_1_i_cast_fu_504_p1);
    sensitive << ( sum_1_i_fu_498_p2 );

    SC_METHOD(thread_sum_1_i_fu_498_p2);
    sensitive << ( sum7_fu_488_p2 );

    SC_METHOD(thread_sum_2_i1_cast_fu_691_p1);
    sensitive << ( sum_2_i1_fu_686_p2 );

    SC_METHOD(thread_sum_2_i1_fu_686_p2);
    sensitive << ( tmp_10_reg_942 );

    SC_METHOD(thread_sum_2_i_cast_fu_532_p1);
    sensitive << ( sum_2_i_fu_527_p2 );

    SC_METHOD(thread_sum_2_i_fu_527_p2);
    sensitive << ( sum7_reg_811 );

    SC_METHOD(thread_sum_3_i1_cast_fu_701_p1);
    sensitive << ( sum_3_i1_fu_696_p2 );

    SC_METHOD(thread_sum_3_i1_fu_696_p2);
    sensitive << ( tmp_10_reg_942 );

    SC_METHOD(thread_sum_3_i_cast_fu_542_p1);
    sensitive << ( sum_3_i_fu_537_p2 );

    SC_METHOD(thread_sum_3_i_fu_537_p2);
    sensitive << ( sum7_reg_811 );

    SC_METHOD(thread_sum_4_i1_cast_fu_711_p1);
    sensitive << ( sum_4_i1_fu_706_p2 );

    SC_METHOD(thread_sum_4_i1_fu_706_p2);
    sensitive << ( tmp_10_reg_942 );

    SC_METHOD(thread_sum_4_i_cast_fu_552_p1);
    sensitive << ( sum_4_i_fu_547_p2 );

    SC_METHOD(thread_sum_4_i_fu_547_p2);
    sensitive << ( sum7_reg_811 );

    SC_METHOD(thread_sum_5_i1_cast_fu_721_p1);
    sensitive << ( sum_5_i1_fu_716_p2 );

    SC_METHOD(thread_sum_5_i1_fu_716_p2);
    sensitive << ( tmp_10_reg_942 );

    SC_METHOD(thread_sum_5_i_cast_fu_562_p1);
    sensitive << ( sum_5_i_fu_557_p2 );

    SC_METHOD(thread_sum_5_i_fu_557_p2);
    sensitive << ( sum7_reg_811 );

    SC_METHOD(thread_sum_6_i1_cast_fu_731_p1);
    sensitive << ( sum_6_i1_fu_726_p2 );

    SC_METHOD(thread_sum_6_i1_fu_726_p2);
    sensitive << ( tmp_10_reg_942 );

    SC_METHOD(thread_sum_6_i_cast_fu_572_p1);
    sensitive << ( sum_6_i_fu_567_p2 );

    SC_METHOD(thread_sum_6_i_fu_567_p2);
    sensitive << ( sum7_reg_811 );

    SC_METHOD(thread_sum_7_i1_cast_fu_741_p1);
    sensitive << ( sum_7_i1_fu_736_p2 );

    SC_METHOD(thread_sum_7_i1_fu_736_p2);
    sensitive << ( tmp_10_reg_942 );

    SC_METHOD(thread_sum_7_i_cast_fu_582_p1);
    sensitive << ( sum_7_i_fu_577_p2 );

    SC_METHOD(thread_sum_7_i_fu_577_p2);
    sensitive << ( sum7_reg_811 );

    SC_METHOD(thread_t_addr_2_reg_929);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_2_cast_reg_911 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( t_addr_2_reg_929 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( i_5_reg_338 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_fu_418_p1 );
    sensitive << ( tmp_10_cast_fu_670_p1 );
    sensitive << ( sum_3_i1_cast_fu_701_p1 );
    sensitive << ( sum_5_i1_cast_fu_721_p1 );
    sensitive << ( sum_7_i1_cast_fu_741_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( sum_1_i1_cast_fu_681_p1 );
    sensitive << ( sum_2_i1_cast_fu_691_p1 );
    sensitive << ( sum_4_i1_cast_fu_711_p1 );
    sensitive << ( sum_6_i1_cast_fu_731_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_d0);
    sensitive << ( m_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_2_fu_638_p2 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_616_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_tmp_10_cast_fu_670_p1);
    sensitive << ( tmp_10_fu_662_p3 );

    SC_METHOD(thread_tmp_10_fu_662_p3);
    sensitive << ( i_3_reg_393 );

    SC_METHOD(thread_tmp_11_fu_760_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_1_7_i1_fu_746_p9 );

    SC_METHOD(thread_tmp_13_fu_449_p1);
    sensitive << ( p_0_rec_reg_349 );

    SC_METHOD(thread_tmp_2_fu_638_p2);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_3_fu_622_p2);
    sensitive << ( i_2_reg_382 );

    SC_METHOD(thread_tmp_4_fu_650_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( i_3_reg_393 );

    SC_METHOD(thread_tmp_5_fu_601_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_1_7_i_fu_587_p9 );

    SC_METHOD(thread_tmp_6_fu_434_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_327 );

    SC_METHOD(thread_tmp_7_fu_453_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ff1_reg_361 );

    SC_METHOD(thread_tmp_8_fu_464_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_1_reg_371 );

    SC_METHOD(thread_tmp_9_cast_fu_484_p1);
    sensitive << ( tmp_9_fu_476_p3 );

    SC_METHOD(thread_tmp_9_fu_476_p3);
    sensitive << ( i_1_reg_371 );

    SC_METHOD(thread_tmp_fu_418_p1);
    sensitive << ( invdar_reg_316 );

    SC_METHOD(thread_tmp_s_fu_423_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( invdar_reg_316 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_fu_434_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_8_fu_464_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_616_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_4_fu_650_p2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_404_ap_done );
    sensitive << ( tmp_s_fu_423_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_7_fu_453_p2 );

    ap_CS_fsm = "0000000000000000001";
    grp_KeccakF1600_StatePer_fu_404_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_absorb_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
    sc_trace(mVcdFile, m_address0, "(port)m_address0");
    sc_trace(mVcdFile, m_ce0, "(port)m_ce0");
    sc_trace(mVcdFile, m_q0, "(port)m_q0");
    sc_trace(mVcdFile, m_address1, "(port)m_address1");
    sc_trace(mVcdFile, m_ce1, "(port)m_ce1");
    sc_trace(mVcdFile, m_q1, "(port)m_q1");
    sc_trace(mVcdFile, mlen, "(port)mlen");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvarinc_fu_412_p2, "indvarinc_fu_412_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_4_fu_440_p2, "i_4_fu_440_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ff_fu_446_p1, "ff_fu_446_p1");
    sc_trace(mVcdFile, tmp_6_fu_434_p2, "tmp_6_fu_434_p2");
    sc_trace(mVcdFile, tmp_13_fu_449_p1, "tmp_13_fu_449_p1");
    sc_trace(mVcdFile, tmp_13_reg_794, "tmp_13_reg_794");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_6_fu_470_p2, "i_6_fu_470_p2");
    sc_trace(mVcdFile, i_6_reg_806, "i_6_reg_806");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, sum7_fu_488_p2, "sum7_fu_488_p2");
    sc_trace(mVcdFile, sum7_reg_811, "sum7_reg_811");
    sc_trace(mVcdFile, tmp_8_fu_464_p2, "tmp_8_fu_464_p2");
    sc_trace(mVcdFile, s_addr_1_reg_831, "s_addr_1_reg_831");
    sc_trace(mVcdFile, mlen_assign_fu_509_p2, "mlen_assign_fu_509_p2");
    sc_trace(mVcdFile, mlen_assign_reg_836, "mlen_assign_reg_836");
    sc_trace(mVcdFile, p_rec_fu_515_p2, "p_rec_fu_515_p2");
    sc_trace(mVcdFile, p_rec_reg_841, "p_rec_reg_841");
    sc_trace(mVcdFile, ff_1_fu_521_p2, "ff_1_fu_521_p2");
    sc_trace(mVcdFile, ff_1_reg_846, "ff_1_reg_846");
    sc_trace(mVcdFile, m_load_1_reg_851, "m_load_1_reg_851");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, m_load_2_reg_856, "m_load_2_reg_856");
    sc_trace(mVcdFile, m_load_3_reg_871, "m_load_3_reg_871");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, m_load_4_reg_876, "m_load_4_reg_876");
    sc_trace(mVcdFile, m_load_5_reg_891, "m_load_5_reg_891");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, m_load_6_reg_896, "m_load_6_reg_896");
    sc_trace(mVcdFile, i_2_cast_fu_612_p1, "i_2_cast_fu_612_p1");
    sc_trace(mVcdFile, i_2_cast_reg_911, "i_2_cast_reg_911");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_3_fu_622_p2, "tmp_3_fu_622_p2");
    sc_trace(mVcdFile, tmp_3_reg_919, "tmp_3_reg_919");
    sc_trace(mVcdFile, exitcond_fu_616_p2, "exitcond_fu_616_p2");
    sc_trace(mVcdFile, t_addr_2_reg_929, "t_addr_2_reg_929");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, i_7_fu_656_p2, "i_7_fu_656_p2");
    sc_trace(mVcdFile, i_7_reg_937, "i_7_reg_937");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_10_fu_662_p3, "tmp_10_fu_662_p3");
    sc_trace(mVcdFile, tmp_10_reg_942, "tmp_10_reg_942");
    sc_trace(mVcdFile, tmp_4_fu_650_p2, "tmp_4_fu_650_p2");
    sc_trace(mVcdFile, s_addr_2_reg_962, "s_addr_2_reg_962");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_load_1_reg_967, "t_load_1_reg_967");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, t_load_2_reg_972, "t_load_2_reg_972");
    sc_trace(mVcdFile, t_load_3_reg_987, "t_load_3_reg_987");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, t_load_4_reg_992, "t_load_4_reg_992");
    sc_trace(mVcdFile, t_load_5_reg_1007, "t_load_5_reg_1007");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, t_load_6_reg_1012, "t_load_6_reg_1012");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_ap_start, "grp_KeccakF1600_StatePer_fu_404_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_ap_done, "grp_KeccakF1600_StatePer_fu_404_ap_done");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_ap_idle, "grp_KeccakF1600_StatePer_fu_404_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_ap_ready, "grp_KeccakF1600_StatePer_fu_404_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_state_address0, "grp_KeccakF1600_StatePer_fu_404_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_state_ce0, "grp_KeccakF1600_StatePer_fu_404_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_state_we0, "grp_KeccakF1600_StatePer_fu_404_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_state_d0, "grp_KeccakF1600_StatePer_fu_404_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_state_address1, "grp_KeccakF1600_StatePer_fu_404_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_state_ce1, "grp_KeccakF1600_StatePer_fu_404_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_state_we1, "grp_KeccakF1600_StatePer_fu_404_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_state_d1, "grp_KeccakF1600_StatePer_fu_404_state_d1");
    sc_trace(mVcdFile, invdar_reg_316, "invdar_reg_316");
    sc_trace(mVcdFile, tmp_s_fu_423_p2, "tmp_s_fu_423_p2");
    sc_trace(mVcdFile, i_reg_327, "i_reg_327");
    sc_trace(mVcdFile, i_5_reg_338, "i_5_reg_338");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, p_0_rec_reg_349, "p_0_rec_reg_349");
    sc_trace(mVcdFile, ff1_reg_361, "ff1_reg_361");
    sc_trace(mVcdFile, i_1_reg_371, "i_1_reg_371");
    sc_trace(mVcdFile, tmp_7_fu_453_p2, "tmp_7_fu_453_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_2_reg_382, "i_2_reg_382");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_3_reg_393, "i_3_reg_393");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_404_ap_start_reg, "grp_KeccakF1600_StatePer_fu_404_ap_start_reg");
    sc_trace(mVcdFile, tmp_fu_418_p1, "tmp_fu_418_p1");
    sc_trace(mVcdFile, i_cast6_fu_429_p1, "i_cast6_fu_429_p1");
    sc_trace(mVcdFile, sum7_cast_fu_493_p1, "sum7_cast_fu_493_p1");
    sc_trace(mVcdFile, sum_1_i_cast_fu_504_p1, "sum_1_i_cast_fu_504_p1");
    sc_trace(mVcdFile, i_1_cast5_fu_459_p1, "i_1_cast5_fu_459_p1");
    sc_trace(mVcdFile, sum_2_i_cast_fu_532_p1, "sum_2_i_cast_fu_532_p1");
    sc_trace(mVcdFile, sum_3_i_cast_fu_542_p1, "sum_3_i_cast_fu_542_p1");
    sc_trace(mVcdFile, sum_4_i_cast_fu_552_p1, "sum_4_i_cast_fu_552_p1");
    sc_trace(mVcdFile, sum_5_i_cast_fu_562_p1, "sum_5_i_cast_fu_562_p1");
    sc_trace(mVcdFile, sum_6_i_cast_fu_572_p1, "sum_6_i_cast_fu_572_p1");
    sc_trace(mVcdFile, sum_7_i_cast_fu_582_p1, "sum_7_i_cast_fu_582_p1");
    sc_trace(mVcdFile, sum9_cast_fu_633_p1, "sum9_cast_fu_633_p1");
    sc_trace(mVcdFile, tmp_10_cast_fu_670_p1, "tmp_10_cast_fu_670_p1");
    sc_trace(mVcdFile, sum_1_i1_cast_fu_681_p1, "sum_1_i1_cast_fu_681_p1");
    sc_trace(mVcdFile, i_3_cast2_fu_645_p1, "i_3_cast2_fu_645_p1");
    sc_trace(mVcdFile, sum_2_i1_cast_fu_691_p1, "sum_2_i1_cast_fu_691_p1");
    sc_trace(mVcdFile, sum_3_i1_cast_fu_701_p1, "sum_3_i1_cast_fu_701_p1");
    sc_trace(mVcdFile, sum_4_i1_cast_fu_711_p1, "sum_4_i1_cast_fu_711_p1");
    sc_trace(mVcdFile, sum_5_i1_cast_fu_721_p1, "sum_5_i1_cast_fu_721_p1");
    sc_trace(mVcdFile, sum_6_i1_cast_fu_731_p1, "sum_6_i1_cast_fu_731_p1");
    sc_trace(mVcdFile, sum_7_i1_cast_fu_741_p1, "sum_7_i1_cast_fu_741_p1");
    sc_trace(mVcdFile, tmp_2_fu_638_p2, "tmp_2_fu_638_p2");
    sc_trace(mVcdFile, tmp_5_fu_601_p2, "tmp_5_fu_601_p2");
    sc_trace(mVcdFile, tmp_11_fu_760_p2, "tmp_11_fu_760_p2");
    sc_trace(mVcdFile, tmp_9_fu_476_p3, "tmp_9_fu_476_p3");
    sc_trace(mVcdFile, tmp_9_cast_fu_484_p1, "tmp_9_cast_fu_484_p1");
    sc_trace(mVcdFile, sum_1_i_fu_498_p2, "sum_1_i_fu_498_p2");
    sc_trace(mVcdFile, sum_2_i_fu_527_p2, "sum_2_i_fu_527_p2");
    sc_trace(mVcdFile, sum_3_i_fu_537_p2, "sum_3_i_fu_537_p2");
    sc_trace(mVcdFile, sum_4_i_fu_547_p2, "sum_4_i_fu_547_p2");
    sc_trace(mVcdFile, sum_5_i_fu_557_p2, "sum_5_i_fu_557_p2");
    sc_trace(mVcdFile, sum_6_i_fu_567_p2, "sum_6_i_fu_567_p2");
    sc_trace(mVcdFile, sum_7_i_fu_577_p2, "sum_7_i_fu_577_p2");
    sc_trace(mVcdFile, r_1_7_i_fu_587_p9, "r_1_7_i_fu_587_p9");
    sc_trace(mVcdFile, i_2_cast3_fu_608_p1, "i_2_cast3_fu_608_p1");
    sc_trace(mVcdFile, sum9_fu_628_p2, "sum9_fu_628_p2");
    sc_trace(mVcdFile, sum_1_i1_fu_675_p2, "sum_1_i1_fu_675_p2");
    sc_trace(mVcdFile, sum_2_i1_fu_686_p2, "sum_2_i1_fu_686_p2");
    sc_trace(mVcdFile, sum_3_i1_fu_696_p2, "sum_3_i1_fu_696_p2");
    sc_trace(mVcdFile, sum_4_i1_fu_706_p2, "sum_4_i1_fu_706_p2");
    sc_trace(mVcdFile, sum_5_i1_fu_716_p2, "sum_5_i1_fu_716_p2");
    sc_trace(mVcdFile, sum_6_i1_fu_726_p2, "sum_6_i1_fu_726_p2");
    sc_trace(mVcdFile, sum_7_i1_fu_736_p2, "sum_7_i1_fu_736_p2");
    sc_trace(mVcdFile, r_1_7_i1_fu_746_p9, "r_1_7_i1_fu_746_p9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

keccak_absorb::~keccak_absorb() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete grp_KeccakF1600_StatePer_fu_404;
}

void keccak_absorb::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_6_fu_434_p2.read(), ap_const_lv1_1))) {
        ff1_reg_361 = ff_fu_446_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_404_ap_done.read(), ap_const_logic_1))) {
        ff1_reg_361 = ff_1_reg_846.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_fu_404_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_464_p2.read()))) {
            grp_KeccakF1600_StatePer_fu_404_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_fu_404_ap_ready.read())) {
            grp_KeccakF1600_StatePer_fu_404_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_1_reg_371 = i_6_reg_806.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_453_p2.read()))) {
        i_1_reg_371 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_453_p2.read()))) {
        i_2_reg_382 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_2_reg_382 = tmp_3_reg_919.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        i_3_reg_393 = i_7_reg_937.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_3_reg_393 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_6_fu_434_p2.read(), ap_const_lv1_1))) {
        i_5_reg_338 = mlen.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_404_ap_done.read(), ap_const_logic_1))) {
        i_5_reg_338 = mlen_assign_reg_836.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_423_p2.read()))) {
        i_reg_327 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_6_fu_434_p2.read(), ap_const_lv1_0))) {
        i_reg_327 = i_4_fu_440_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_423_p2.read()))) {
        invdar_reg_316 = indvarinc_fu_412_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        invdar_reg_316 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_6_fu_434_p2.read(), ap_const_lv1_1))) {
        p_0_rec_reg_349 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_404_ap_done.read(), ap_const_logic_1))) {
        p_0_rec_reg_349 = p_rec_reg_841.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_464_p2.read()))) {
        ff_1_reg_846 = ff_1_fu_521_p2.read();
        mlen_assign_reg_836 = mlen_assign_fu_509_p2.read();
        p_rec_reg_841 = p_rec_fu_515_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_2_cast_reg_911 = i_2_cast_fu_612_p1.read();
        tmp_3_reg_919 = tmp_3_fu_622_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_6_reg_806 = i_6_fu_470_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_7_reg_937 = i_7_fu_656_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_load_1_reg_851 = m_q0.read();
        m_load_2_reg_856 = m_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        m_load_3_reg_871 = m_q0.read();
        m_load_4_reg_876 = m_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        m_load_5_reg_891 = m_q0.read();
        m_load_6_reg_896 = m_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_8_fu_464_p2.read(), ap_const_lv1_0))) {
        s_addr_1_reg_831 =  (sc_lv<5>) (i_1_cast5_fu_459_p1.read());
        sum7_reg_811 = sum7_fu_488_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_650_p2.read()))) {
        s_addr_2_reg_962 =  (sc_lv<5>) (i_3_cast2_fu_645_p1.read());
        tmp_10_reg_942 = tmp_10_fu_662_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_load_1_reg_967 = t_q0.read();
        t_load_2_reg_972 = t_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_load_3_reg_987 = t_q1.read();
        t_load_4_reg_992 = t_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        t_load_5_reg_1007 = t_q1.read();
        t_load_6_reg_1012 = t_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_13_reg_794 = tmp_13_fu_449_p1.read();
    }
}

void keccak_absorb::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_absorb::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void keccak_absorb::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void keccak_absorb::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void keccak_absorb::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void keccak_absorb::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void keccak_absorb::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void keccak_absorb::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void keccak_absorb::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void keccak_absorb::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void keccak_absorb::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void keccak_absorb::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_absorb::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_absorb::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_absorb::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void keccak_absorb::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void keccak_absorb::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void keccak_absorb::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void keccak_absorb::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void keccak_absorb::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_650_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_650_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_absorb::thread_exitcond_fu_616_p2() {
    exitcond_fu_616_p2 = (!i_2_cast_fu_612_p1.read().is_01() || !i_5_reg_338.read().is_01())? sc_lv<1>(): sc_lv<1>(i_2_cast_fu_612_p1.read() == i_5_reg_338.read());
}

void keccak_absorb::thread_ff_1_fu_521_p2() {
    ff_1_fu_521_p2 = (!ff1_reg_361.read().is_01() || !ap_const_lv8_78.is_01())? sc_lv<8>(): (sc_biguint<8>(ff1_reg_361.read()) + sc_biguint<8>(ap_const_lv8_78));
}

void keccak_absorb::thread_ff_fu_446_p1() {
    ff_fu_446_p1 = mlen.read().range(8-1, 0);
}

void keccak_absorb::thread_grp_KeccakF1600_StatePer_fu_404_ap_start() {
    grp_KeccakF1600_StatePer_fu_404_ap_start = grp_KeccakF1600_StatePer_fu_404_ap_start_reg.read();
}

void keccak_absorb::thread_i_1_cast5_fu_459_p1() {
    i_1_cast5_fu_459_p1 = esl_zext<64,5>(i_1_reg_371.read());
}

void keccak_absorb::thread_i_2_cast3_fu_608_p1() {
    i_2_cast3_fu_608_p1 = esl_zext<14,8>(i_2_reg_382.read());
}

void keccak_absorb::thread_i_2_cast_fu_612_p1() {
    i_2_cast_fu_612_p1 = esl_zext<64,8>(i_2_reg_382.read());
}

void keccak_absorb::thread_i_3_cast2_fu_645_p1() {
    i_3_cast2_fu_645_p1 = esl_zext<64,5>(i_3_reg_393.read());
}

void keccak_absorb::thread_i_4_fu_440_p2() {
    i_4_fu_440_p2 = (!i_reg_327.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_327.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_6_fu_470_p2() {
    i_6_fu_470_p2 = (!i_1_reg_371.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_reg_371.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_7_fu_656_p2() {
    i_7_fu_656_p2 = (!i_3_reg_393.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_3_reg_393.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_cast6_fu_429_p1() {
    i_cast6_fu_429_p1 = esl_zext<64,5>(i_reg_327.read());
}

void keccak_absorb::thread_indvarinc_fu_412_p2() {
    indvarinc_fu_412_p2 = (!invdar_reg_316.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(invdar_reg_316.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void keccak_absorb::thread_m_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        m_address0 =  (sc_lv<12>) (sum9_cast_fu_633_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        m_address0 =  (sc_lv<12>) (sum_6_i_cast_fu_572_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        m_address0 =  (sc_lv<12>) (sum_4_i_cast_fu_552_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_address0 =  (sc_lv<12>) (sum_2_i_cast_fu_532_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_address0 =  (sc_lv<12>) (sum7_cast_fu_493_p1.read());
    } else {
        m_address0 = "XXXXXXXXXXXX";
    }
}

void keccak_absorb::thread_m_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        m_address1 =  (sc_lv<12>) (sum_7_i_cast_fu_582_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        m_address1 =  (sc_lv<12>) (sum_5_i_cast_fu_562_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_address1 =  (sc_lv<12>) (sum_3_i_cast_fu_542_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_address1 =  (sc_lv<12>) (sum_1_i_cast_fu_504_p1.read());
    } else {
        m_address1 = "XXXXXXXXXXXX";
    }
}

void keccak_absorb::thread_m_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        m_ce0 = ap_const_logic_1;
    } else {
        m_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_m_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        m_ce1 = ap_const_logic_1;
    } else {
        m_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_mlen_assign_fu_509_p2() {
    mlen_assign_fu_509_p2 = (!i_5_reg_338.read().is_01() || !ap_const_lv64_FFFFFFFFFFFFFF78.is_01())? sc_lv<64>(): (sc_biguint<64>(i_5_reg_338.read()) + sc_bigint<64>(ap_const_lv64_FFFFFFFFFFFFFF78));
}

void keccak_absorb::thread_p_rec_fu_515_p2() {
    p_rec_fu_515_p2 = (!p_0_rec_reg_349.read().is_01() || !ap_const_lv64_88.is_01())? sc_lv<64>(): (sc_biguint<64>(p_0_rec_reg_349.read()) + sc_biguint<64>(ap_const_lv64_88));
}

void keccak_absorb::thread_r_1_7_i1_fu_746_p9() {
    r_1_7_i1_fu_746_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(t_q0.read(), t_q1.read()), t_load_6_reg_1012.read()), t_load_5_reg_1007.read()), t_load_4_reg_992.read()), t_load_3_reg_987.read()), t_load_2_reg_972.read()), t_load_1_reg_967.read());
}

void keccak_absorb::thread_r_1_7_i_fu_587_p9() {
    r_1_7_i_fu_587_p9 = esl_concat<56,8>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<32,8>(esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(m_q1.read(), m_q0.read()), m_load_6_reg_896.read()), m_load_5_reg_891.read()), m_load_4_reg_876.read()), m_load_3_reg_871.read()), m_load_2_reg_856.read()), m_load_1_reg_851.read());
}

void keccak_absorb::thread_s_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        s_address0 = s_addr_2_reg_962.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        s_address0 = s_addr_1_reg_831.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_address0 =  (sc_lv<5>) (i_cast6_fu_429_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_address0 = grp_KeccakF1600_StatePer_fu_404_state_address0.read();
    } else {
        s_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void keccak_absorb::thread_s_address1() {
    s_address1 = grp_KeccakF1600_StatePer_fu_404_state_address1.read();
}

void keccak_absorb::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_ce0 = grp_KeccakF1600_StatePer_fu_404_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_ce1 = grp_KeccakF1600_StatePer_fu_404_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        s_d0 = tmp_11_fu_760_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_d0 = tmp_5_fu_601_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        s_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_d0 = grp_KeccakF1600_StatePer_fu_404_state_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb::thread_s_d1() {
    s_d1 = grp_KeccakF1600_StatePer_fu_404_state_d1.read();
}

void keccak_absorb::thread_s_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_6_fu_434_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        s_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_we0 = grp_KeccakF1600_StatePer_fu_404_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_we1 = grp_KeccakF1600_StatePer_fu_404_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_sum7_cast_fu_493_p1() {
    sum7_cast_fu_493_p1 = esl_zext<64,14>(sum7_fu_488_p2.read());
}

void keccak_absorb::thread_sum7_fu_488_p2() {
    sum7_fu_488_p2 = (!tmp_13_reg_794.read().is_01() || !tmp_9_cast_fu_484_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_13_reg_794.read()) + sc_biguint<14>(tmp_9_cast_fu_484_p1.read()));
}

void keccak_absorb::thread_sum9_cast_fu_633_p1() {
    sum9_cast_fu_633_p1 = esl_zext<64,14>(sum9_fu_628_p2.read());
}

void keccak_absorb::thread_sum9_fu_628_p2() {
    sum9_fu_628_p2 = (!i_2_cast3_fu_608_p1.read().is_01() || !tmp_13_reg_794.read().is_01())? sc_lv<14>(): (sc_biguint<14>(i_2_cast3_fu_608_p1.read()) + sc_biguint<14>(tmp_13_reg_794.read()));
}

void keccak_absorb::thread_sum_1_i1_cast_fu_681_p1() {
    sum_1_i1_cast_fu_681_p1 = esl_zext<64,8>(sum_1_i1_fu_675_p2.read());
}

void keccak_absorb::thread_sum_1_i1_fu_675_p2() {
    sum_1_i1_fu_675_p2 = (tmp_10_fu_662_p3.read() | ap_const_lv8_1);
}

void keccak_absorb::thread_sum_1_i_cast_fu_504_p1() {
    sum_1_i_cast_fu_504_p1 = esl_zext<64,14>(sum_1_i_fu_498_p2.read());
}

void keccak_absorb::thread_sum_1_i_fu_498_p2() {
    sum_1_i_fu_498_p2 = (sum7_fu_488_p2.read() | ap_const_lv14_1);
}

void keccak_absorb::thread_sum_2_i1_cast_fu_691_p1() {
    sum_2_i1_cast_fu_691_p1 = esl_zext<64,8>(sum_2_i1_fu_686_p2.read());
}

void keccak_absorb::thread_sum_2_i1_fu_686_p2() {
    sum_2_i1_fu_686_p2 = (tmp_10_reg_942.read() | ap_const_lv8_2);
}

void keccak_absorb::thread_sum_2_i_cast_fu_532_p1() {
    sum_2_i_cast_fu_532_p1 = esl_zext<64,14>(sum_2_i_fu_527_p2.read());
}

void keccak_absorb::thread_sum_2_i_fu_527_p2() {
    sum_2_i_fu_527_p2 = (sum7_reg_811.read() | ap_const_lv14_2);
}

void keccak_absorb::thread_sum_3_i1_cast_fu_701_p1() {
    sum_3_i1_cast_fu_701_p1 = esl_zext<64,8>(sum_3_i1_fu_696_p2.read());
}

void keccak_absorb::thread_sum_3_i1_fu_696_p2() {
    sum_3_i1_fu_696_p2 = (tmp_10_reg_942.read() | ap_const_lv8_3);
}

void keccak_absorb::thread_sum_3_i_cast_fu_542_p1() {
    sum_3_i_cast_fu_542_p1 = esl_zext<64,14>(sum_3_i_fu_537_p2.read());
}

void keccak_absorb::thread_sum_3_i_fu_537_p2() {
    sum_3_i_fu_537_p2 = (sum7_reg_811.read() | ap_const_lv14_3);
}

void keccak_absorb::thread_sum_4_i1_cast_fu_711_p1() {
    sum_4_i1_cast_fu_711_p1 = esl_zext<64,8>(sum_4_i1_fu_706_p2.read());
}

void keccak_absorb::thread_sum_4_i1_fu_706_p2() {
    sum_4_i1_fu_706_p2 = (tmp_10_reg_942.read() | ap_const_lv8_4);
}

void keccak_absorb::thread_sum_4_i_cast_fu_552_p1() {
    sum_4_i_cast_fu_552_p1 = esl_zext<64,14>(sum_4_i_fu_547_p2.read());
}

void keccak_absorb::thread_sum_4_i_fu_547_p2() {
    sum_4_i_fu_547_p2 = (sum7_reg_811.read() | ap_const_lv14_4);
}

void keccak_absorb::thread_sum_5_i1_cast_fu_721_p1() {
    sum_5_i1_cast_fu_721_p1 = esl_zext<64,8>(sum_5_i1_fu_716_p2.read());
}

void keccak_absorb::thread_sum_5_i1_fu_716_p2() {
    sum_5_i1_fu_716_p2 = (tmp_10_reg_942.read() | ap_const_lv8_5);
}

void keccak_absorb::thread_sum_5_i_cast_fu_562_p1() {
    sum_5_i_cast_fu_562_p1 = esl_zext<64,14>(sum_5_i_fu_557_p2.read());
}

void keccak_absorb::thread_sum_5_i_fu_557_p2() {
    sum_5_i_fu_557_p2 = (sum7_reg_811.read() | ap_const_lv14_5);
}

void keccak_absorb::thread_sum_6_i1_cast_fu_731_p1() {
    sum_6_i1_cast_fu_731_p1 = esl_zext<64,8>(sum_6_i1_fu_726_p2.read());
}

void keccak_absorb::thread_sum_6_i1_fu_726_p2() {
    sum_6_i1_fu_726_p2 = (tmp_10_reg_942.read() | ap_const_lv8_6);
}

void keccak_absorb::thread_sum_6_i_cast_fu_572_p1() {
    sum_6_i_cast_fu_572_p1 = esl_zext<64,14>(sum_6_i_fu_567_p2.read());
}

void keccak_absorb::thread_sum_6_i_fu_567_p2() {
    sum_6_i_fu_567_p2 = (sum7_reg_811.read() | ap_const_lv14_6);
}

void keccak_absorb::thread_sum_7_i1_cast_fu_741_p1() {
    sum_7_i1_cast_fu_741_p1 = esl_zext<64,8>(sum_7_i1_fu_736_p2.read());
}

void keccak_absorb::thread_sum_7_i1_fu_736_p2() {
    sum_7_i1_fu_736_p2 = (tmp_10_reg_942.read() | ap_const_lv8_7);
}

void keccak_absorb::thread_sum_7_i_cast_fu_582_p1() {
    sum_7_i_cast_fu_582_p1 = esl_zext<64,14>(sum_7_i_fu_577_p2.read());
}

void keccak_absorb::thread_sum_7_i_fu_577_p2() {
    sum_7_i_fu_577_p2 = (sum7_reg_811.read() | ap_const_lv14_7);
}

void keccak_absorb::thread_t_addr_2_reg_929() {
    t_addr_2_reg_929 =  (sc_lv<8>) (ap_const_lv64_87);
}

void keccak_absorb::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        t_address0 =  (sc_lv<8>) (sum_7_i1_cast_fu_741_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_address0 =  (sc_lv<8>) (sum_5_i1_cast_fu_721_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_address0 =  (sc_lv<8>) (sum_3_i1_cast_fu_701_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_address0 =  (sc_lv<8>) (tmp_10_cast_fu_670_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        t_address0 = t_addr_2_reg_929.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_address0 =  (sc_lv<8>) (ap_const_lv64_87);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_address0 =  (sc_lv<8>) (i_2_cast_reg_911.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_address0 =  (sc_lv<8>) (i_5_reg_338.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_address0 =  (sc_lv<8>) (tmp_fu_418_p1.read());
    } else {
        t_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        t_address1 =  (sc_lv<8>) (sum_6_i1_cast_fu_731_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_address1 =  (sc_lv<8>) (sum_4_i1_cast_fu_711_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_address1 =  (sc_lv<8>) (sum_2_i1_cast_fu_691_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_address1 =  (sc_lv<8>) (sum_1_i1_cast_fu_681_p1.read());
    } else {
        t_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        t_d0 = tmp_2_fu_638_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_d0 = m_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_d0 = ap_const_lv8_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        t_d0 = ap_const_lv8_0;
    } else {
        t_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_616_p2.read())))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_tmp_10_cast_fu_670_p1() {
    tmp_10_cast_fu_670_p1 = esl_zext<64,8>(tmp_10_fu_662_p3.read());
}

void keccak_absorb::thread_tmp_10_fu_662_p3() {
    tmp_10_fu_662_p3 = esl_concat<5,3>(i_3_reg_393.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_11_fu_760_p2() {
    tmp_11_fu_760_p2 = (s_q0.read() ^ r_1_7_i1_fu_746_p9.read());
}

void keccak_absorb::thread_tmp_13_fu_449_p1() {
    tmp_13_fu_449_p1 = p_0_rec_reg_349.read().range(14-1, 0);
}

void keccak_absorb::thread_tmp_2_fu_638_p2() {
    tmp_2_fu_638_p2 = (t_q0.read() | ap_const_lv8_80);
}

void keccak_absorb::thread_tmp_3_fu_622_p2() {
    tmp_3_fu_622_p2 = (!i_2_reg_382.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_382.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void keccak_absorb::thread_tmp_4_fu_650_p2() {
    tmp_4_fu_650_p2 = (!i_3_reg_393.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_393.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_tmp_5_fu_601_p2() {
    tmp_5_fu_601_p2 = (s_q0.read() ^ r_1_7_i_fu_587_p9.read());
}

void keccak_absorb::thread_tmp_6_fu_434_p2() {
    tmp_6_fu_434_p2 = (!i_reg_327.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_327.read() == ap_const_lv5_19);
}

void keccak_absorb::thread_tmp_7_fu_453_p2() {
    tmp_7_fu_453_p2 = (!ff1_reg_361.read().is_01() || !ap_const_lv8_87.is_01())? sc_lv<1>(): (sc_biguint<8>(ff1_reg_361.read()) > sc_biguint<8>(ap_const_lv8_87));
}

void keccak_absorb::thread_tmp_8_fu_464_p2() {
    tmp_8_fu_464_p2 = (!i_1_reg_371.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_371.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_tmp_9_cast_fu_484_p1() {
    tmp_9_cast_fu_484_p1 = esl_zext<14,8>(tmp_9_fu_476_p3.read());
}

void keccak_absorb::thread_tmp_9_fu_476_p3() {
    tmp_9_fu_476_p3 = esl_concat<5,3>(i_1_reg_371.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_fu_418_p1() {
    tmp_fu_418_p1 = esl_zext<64,8>(invdar_reg_316.read());
}

void keccak_absorb::thread_tmp_s_fu_423_p2() {
    tmp_s_fu_423_p2 = (!invdar_reg_316.read().is_01() || !ap_const_lv8_C7.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_316.read() == ap_const_lv8_C7);
}

void keccak_absorb::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_423_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_6_fu_434_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_453_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_fu_464_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_404_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_616_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_650_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

