// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_squeezeblocks.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_squeezeblocks::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_squeezeblocks::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> keccak_squeezeblocks::ap_ST_fsm_state1 = "1";
const sc_lv<4> keccak_squeezeblocks::ap_ST_fsm_state2 = "10";
const sc_lv<4> keccak_squeezeblocks::ap_ST_fsm_state3 = "100";
const sc_lv<4> keccak_squeezeblocks::ap_ST_fsm_state4 = "1000";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_1 = "1";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_2 = "10";
const sc_lv<1> keccak_squeezeblocks::ap_const_lv1_0 = "0";
const sc_lv<32> keccak_squeezeblocks::ap_const_lv32_3 = "11";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_0 = "00000";
const sc_lv<1> keccak_squeezeblocks::ap_const_lv1_1 = "1";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_1 = "1";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_2 = "10";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_3 = "11";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_4 = "100";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_5 = "101";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_6 = "110";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_7 = "111";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_8 = "1000";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_9 = "1001";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_A = "1010";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_B = "1011";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_C = "1100";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_D = "1101";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_E = "1110";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_F = "1111";
const sc_lv<4> keccak_squeezeblocks::ap_const_lv4_0 = "0000";
const sc_lv<5> keccak_squeezeblocks::ap_const_lv5_11 = "10001";
const sc_lv<3> keccak_squeezeblocks::ap_const_lv3_0 = "000";
const sc_lv<4> keccak_squeezeblocks::ap_const_lv4_8 = "1000";
const sc_lv<4> keccak_squeezeblocks::ap_const_lv4_1 = "1";
const bool keccak_squeezeblocks::ap_const_boolean_1 = true;

keccak_squeezeblocks::keccak_squeezeblocks(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_KeccakF1600_StatePer_fu_277 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_277");
    grp_KeccakF1600_StatePer_fu_277->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_277->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_277->ap_start(grp_KeccakF1600_StatePer_fu_277_ap_start);
    grp_KeccakF1600_StatePer_fu_277->ap_done(grp_KeccakF1600_StatePer_fu_277_ap_done);
    grp_KeccakF1600_StatePer_fu_277->ap_idle(grp_KeccakF1600_StatePer_fu_277_ap_idle);
    grp_KeccakF1600_StatePer_fu_277->ap_ready(grp_KeccakF1600_StatePer_fu_277_ap_ready);
    grp_KeccakF1600_StatePer_fu_277->state_0_read(s_0_read);
    grp_KeccakF1600_StatePer_fu_277->state_1_read(s_1_read);
    grp_KeccakF1600_StatePer_fu_277->state_2_read(s_2_read);
    grp_KeccakF1600_StatePer_fu_277->state_3_read(s_3_read);
    grp_KeccakF1600_StatePer_fu_277->state_4_read(s_4_read);
    grp_KeccakF1600_StatePer_fu_277->state_5_read(s_5_read);
    grp_KeccakF1600_StatePer_fu_277->state_6_read(s_6_read);
    grp_KeccakF1600_StatePer_fu_277->state_7_read(s_7_read);
    grp_KeccakF1600_StatePer_fu_277->state_8_read(s_8_read);
    grp_KeccakF1600_StatePer_fu_277->state_9_read(s_9_read);
    grp_KeccakF1600_StatePer_fu_277->state_10_read(s_10_read);
    grp_KeccakF1600_StatePer_fu_277->state_11_read(s_11_read);
    grp_KeccakF1600_StatePer_fu_277->state_12_read(s_12_read);
    grp_KeccakF1600_StatePer_fu_277->state_13_read(s_13_read);
    grp_KeccakF1600_StatePer_fu_277->state_14_read(s_14_read);
    grp_KeccakF1600_StatePer_fu_277->state_15_read(s_15_read);
    grp_KeccakF1600_StatePer_fu_277->state_16_read(s_16_read);
    grp_KeccakF1600_StatePer_fu_277->ap_return_0(grp_KeccakF1600_StatePer_fu_277_ap_return_0);
    grp_KeccakF1600_StatePer_fu_277->ap_return_1(grp_KeccakF1600_StatePer_fu_277_ap_return_1);
    grp_KeccakF1600_StatePer_fu_277->ap_return_2(grp_KeccakF1600_StatePer_fu_277_ap_return_2);
    grp_KeccakF1600_StatePer_fu_277->ap_return_3(grp_KeccakF1600_StatePer_fu_277_ap_return_3);
    grp_KeccakF1600_StatePer_fu_277->ap_return_4(grp_KeccakF1600_StatePer_fu_277_ap_return_4);
    grp_KeccakF1600_StatePer_fu_277->ap_return_5(grp_KeccakF1600_StatePer_fu_277_ap_return_5);
    grp_KeccakF1600_StatePer_fu_277->ap_return_6(grp_KeccakF1600_StatePer_fu_277_ap_return_6);
    grp_KeccakF1600_StatePer_fu_277->ap_return_7(grp_KeccakF1600_StatePer_fu_277_ap_return_7);
    grp_KeccakF1600_StatePer_fu_277->ap_return_8(grp_KeccakF1600_StatePer_fu_277_ap_return_8);
    grp_KeccakF1600_StatePer_fu_277->ap_return_9(grp_KeccakF1600_StatePer_fu_277_ap_return_9);
    grp_KeccakF1600_StatePer_fu_277->ap_return_10(grp_KeccakF1600_StatePer_fu_277_ap_return_10);
    grp_KeccakF1600_StatePer_fu_277->ap_return_11(grp_KeccakF1600_StatePer_fu_277_ap_return_11);
    grp_KeccakF1600_StatePer_fu_277->ap_return_12(grp_KeccakF1600_StatePer_fu_277_ap_return_12);
    grp_KeccakF1600_StatePer_fu_277->ap_return_13(grp_KeccakF1600_StatePer_fu_277_ap_return_13);
    grp_KeccakF1600_StatePer_fu_277->ap_return_14(grp_KeccakF1600_StatePer_fu_277_ap_return_14);
    grp_KeccakF1600_StatePer_fu_277->ap_return_15(grp_KeccakF1600_StatePer_fu_277_ap_return_15);
    grp_KeccakF1600_StatePer_fu_277->ap_return_16(grp_KeccakF1600_StatePer_fu_277_ap_return_16);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_697);
    sensitive << ( ap_phi_mux_i_phi_fu_219_p4 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_385_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_219_p4);
    sensitive << ( i_reg_215 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_385_p2 );

    SC_METHOD(thread_exitcond_i_fu_405_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_i_reg_266 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_fu_277_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_fu_277_ap_start_reg );

    SC_METHOD(thread_i_2_fu_411_p2);
    sensitive << ( i_i_reg_266 );

    SC_METHOD(thread_i_4_fu_391_p2);
    sensitive << ( i_reg_215 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_i_cast_fu_453_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_i_fu_433_p2 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_i_fu_405_p2 );

    SC_METHOD(thread_sum_i_cast_fu_453_p1);
    sensitive << ( sum_i_fu_448_p2 );

    SC_METHOD(thread_sum_i_fu_448_p2);
    sensitive << ( tmp_4_reg_636 );
    sensitive << ( tmp_5_i_cast_fu_444_p1 );

    SC_METHOD(thread_tmp_1_i_fu_421_p3);
    sensitive << ( tmp_fu_417_p1 );

    SC_METHOD(thread_tmp_2_i_fu_429_p1);
    sensitive << ( tmp_1_i_fu_421_p3 );

    SC_METHOD(thread_tmp_3_i_fu_433_p2);
    sensitive << ( u_assign_reg_226 );
    sensitive << ( tmp_2_i_fu_429_p1 );

    SC_METHOD(thread_tmp_4_fu_397_p3);
    sensitive << ( i_reg_215 );

    SC_METHOD(thread_tmp_5_i_cast_fu_444_p1);
    sensitive << ( i_i_reg_266 );

    SC_METHOD(thread_tmp_fu_417_p1);
    sensitive << ( i_i_reg_266 );

    SC_METHOD(thread_tmp_s_fu_385_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_215 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_277_ap_done );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_385_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_i_fu_405_p2 );

    ap_CS_fsm = "0001";
    grp_KeccakF1600_StatePer_fu_277_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_squeezeblocks_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, s_0_read, "(port)s_0_read");
    sc_trace(mVcdFile, s_1_read, "(port)s_1_read");
    sc_trace(mVcdFile, s_2_read, "(port)s_2_read");
    sc_trace(mVcdFile, s_3_read, "(port)s_3_read");
    sc_trace(mVcdFile, s_4_read, "(port)s_4_read");
    sc_trace(mVcdFile, s_5_read, "(port)s_5_read");
    sc_trace(mVcdFile, s_6_read, "(port)s_6_read");
    sc_trace(mVcdFile, s_7_read, "(port)s_7_read");
    sc_trace(mVcdFile, s_8_read, "(port)s_8_read");
    sc_trace(mVcdFile, s_9_read, "(port)s_9_read");
    sc_trace(mVcdFile, s_10_read, "(port)s_10_read");
    sc_trace(mVcdFile, s_11_read, "(port)s_11_read");
    sc_trace(mVcdFile, s_12_read, "(port)s_12_read");
    sc_trace(mVcdFile, s_13_read, "(port)s_13_read");
    sc_trace(mVcdFile, s_14_read, "(port)s_14_read");
    sc_trace(mVcdFile, s_15_read, "(port)s_15_read");
    sc_trace(mVcdFile, s_16_read, "(port)s_16_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, newret_reg_543, "newret_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_ready, "grp_KeccakF1600_StatePer_fu_277_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_done, "grp_KeccakF1600_StatePer_fu_277_ap_done");
    sc_trace(mVcdFile, newret1_reg_548, "newret1_reg_548");
    sc_trace(mVcdFile, newret3_reg_553, "newret3_reg_553");
    sc_trace(mVcdFile, newret5_reg_558, "newret5_reg_558");
    sc_trace(mVcdFile, newret7_reg_563, "newret7_reg_563");
    sc_trace(mVcdFile, newret9_reg_568, "newret9_reg_568");
    sc_trace(mVcdFile, newret2_reg_573, "newret2_reg_573");
    sc_trace(mVcdFile, newret4_reg_578, "newret4_reg_578");
    sc_trace(mVcdFile, newret6_reg_583, "newret6_reg_583");
    sc_trace(mVcdFile, newret8_reg_588, "newret8_reg_588");
    sc_trace(mVcdFile, newret10_reg_593, "newret10_reg_593");
    sc_trace(mVcdFile, newret11_reg_598, "newret11_reg_598");
    sc_trace(mVcdFile, newret12_reg_603, "newret12_reg_603");
    sc_trace(mVcdFile, newret13_reg_608, "newret13_reg_608");
    sc_trace(mVcdFile, newret14_reg_613, "newret14_reg_613");
    sc_trace(mVcdFile, newret15_reg_618, "newret15_reg_618");
    sc_trace(mVcdFile, newret16_reg_623, "newret16_reg_623");
    sc_trace(mVcdFile, i_4_fu_391_p2, "i_4_fu_391_p2");
    sc_trace(mVcdFile, i_4_reg_631, "i_4_reg_631");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_4_fu_397_p3, "tmp_4_fu_397_p3");
    sc_trace(mVcdFile, tmp_4_reg_636, "tmp_4_reg_636");
    sc_trace(mVcdFile, tmp_s_fu_385_p2, "tmp_s_fu_385_p2");
    sc_trace(mVcdFile, i_2_fu_411_p2, "i_2_fu_411_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_start, "grp_KeccakF1600_StatePer_fu_277_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_idle, "grp_KeccakF1600_StatePer_fu_277_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_0, "grp_KeccakF1600_StatePer_fu_277_ap_return_0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_1, "grp_KeccakF1600_StatePer_fu_277_ap_return_1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_2, "grp_KeccakF1600_StatePer_fu_277_ap_return_2");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_3, "grp_KeccakF1600_StatePer_fu_277_ap_return_3");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_4, "grp_KeccakF1600_StatePer_fu_277_ap_return_4");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_5, "grp_KeccakF1600_StatePer_fu_277_ap_return_5");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_6, "grp_KeccakF1600_StatePer_fu_277_ap_return_6");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_7, "grp_KeccakF1600_StatePer_fu_277_ap_return_7");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_8, "grp_KeccakF1600_StatePer_fu_277_ap_return_8");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_9, "grp_KeccakF1600_StatePer_fu_277_ap_return_9");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_10, "grp_KeccakF1600_StatePer_fu_277_ap_return_10");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_11, "grp_KeccakF1600_StatePer_fu_277_ap_return_11");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_12, "grp_KeccakF1600_StatePer_fu_277_ap_return_12");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_13, "grp_KeccakF1600_StatePer_fu_277_ap_return_13");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_14, "grp_KeccakF1600_StatePer_fu_277_ap_return_14");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_15, "grp_KeccakF1600_StatePer_fu_277_ap_return_15");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_return_16, "grp_KeccakF1600_StatePer_fu_277_ap_return_16");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_219_p4, "ap_phi_mux_i_phi_fu_219_p4");
    sc_trace(mVcdFile, i_reg_215, "i_reg_215");
    sc_trace(mVcdFile, exitcond_i_fu_405_p2, "exitcond_i_fu_405_p2");
    sc_trace(mVcdFile, u_assign_reg_226, "u_assign_reg_226");
    sc_trace(mVcdFile, i_i_reg_266, "i_i_reg_266");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_277_ap_start_reg, "grp_KeccakF1600_StatePer_fu_277_ap_start_reg");
    sc_trace(mVcdFile, sum_i_cast_fu_453_p1, "sum_i_cast_fu_453_p1");
    sc_trace(mVcdFile, tmp_fu_417_p1, "tmp_fu_417_p1");
    sc_trace(mVcdFile, tmp_1_i_fu_421_p3, "tmp_1_i_fu_421_p3");
    sc_trace(mVcdFile, tmp_2_i_fu_429_p1, "tmp_2_i_fu_429_p1");
    sc_trace(mVcdFile, tmp_3_i_fu_433_p2, "tmp_3_i_fu_433_p2");
    sc_trace(mVcdFile, tmp_5_i_cast_fu_444_p1, "tmp_5_i_cast_fu_444_p1");
    sc_trace(mVcdFile, sum_i_fu_448_p2, "sum_i_fu_448_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_697, "ap_condition_697");
#endif

    }
}

keccak_squeezeblocks::~keccak_squeezeblocks() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_KeccakF1600_StatePer_fu_277;
}

void keccak_squeezeblocks::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_fu_277_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_KeccakF1600_StatePer_fu_277_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_fu_277_ap_ready.read())) {
            grp_KeccakF1600_StatePer_fu_277_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_405_p2.read()))) {
        i_i_reg_266 = i_2_fu_411_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_385_p2.read(), ap_const_lv1_0))) {
        i_i_reg_266 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_405_p2.read(), ap_const_lv1_1))) {
        i_reg_215 = i_4_reg_631.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_277_ap_done.read(), ap_const_logic_1))) {
        i_reg_215 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_s_fu_385_p2.read(), ap_const_lv1_0))) {
        if (esl_seteq<1,5,5>(ap_const_lv5_0, ap_phi_mux_i_phi_fu_219_p4.read())) {
            u_assign_reg_226 = newret_reg_543.read();
        } else if (esl_seteq<1,1,1>(ap_condition_697.read(), ap_const_boolean_1)) {
            u_assign_reg_226 = newret16_reg_623.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_F)) {
            u_assign_reg_226 = newret15_reg_618.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_E)) {
            u_assign_reg_226 = newret14_reg_613.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_D)) {
            u_assign_reg_226 = newret13_reg_608.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_C)) {
            u_assign_reg_226 = newret12_reg_603.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_B)) {
            u_assign_reg_226 = newret11_reg_598.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_A)) {
            u_assign_reg_226 = newret10_reg_593.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_9)) {
            u_assign_reg_226 = newret8_reg_588.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_8)) {
            u_assign_reg_226 = newret6_reg_583.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_7)) {
            u_assign_reg_226 = newret4_reg_578.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_6)) {
            u_assign_reg_226 = newret2_reg_573.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_5)) {
            u_assign_reg_226 = newret9_reg_568.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_4)) {
            u_assign_reg_226 = newret7_reg_563.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_3)) {
            u_assign_reg_226 = newret5_reg_558.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_2)) {
            u_assign_reg_226 = newret3_reg_553.read();
        } else if (esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_1)) {
            u_assign_reg_226 = newret1_reg_548.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_4_reg_631 = i_4_fu_391_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_277_ap_done.read(), ap_const_logic_1))) {
        newret10_reg_593 = grp_KeccakF1600_StatePer_fu_277_ap_return_10.read();
        newret11_reg_598 = grp_KeccakF1600_StatePer_fu_277_ap_return_11.read();
        newret12_reg_603 = grp_KeccakF1600_StatePer_fu_277_ap_return_12.read();
        newret13_reg_608 = grp_KeccakF1600_StatePer_fu_277_ap_return_13.read();
        newret14_reg_613 = grp_KeccakF1600_StatePer_fu_277_ap_return_14.read();
        newret15_reg_618 = grp_KeccakF1600_StatePer_fu_277_ap_return_15.read();
        newret16_reg_623 = grp_KeccakF1600_StatePer_fu_277_ap_return_16.read();
        newret1_reg_548 = grp_KeccakF1600_StatePer_fu_277_ap_return_1.read();
        newret2_reg_573 = grp_KeccakF1600_StatePer_fu_277_ap_return_6.read();
        newret3_reg_553 = grp_KeccakF1600_StatePer_fu_277_ap_return_2.read();
        newret4_reg_578 = grp_KeccakF1600_StatePer_fu_277_ap_return_7.read();
        newret5_reg_558 = grp_KeccakF1600_StatePer_fu_277_ap_return_3.read();
        newret6_reg_583 = grp_KeccakF1600_StatePer_fu_277_ap_return_8.read();
        newret7_reg_563 = grp_KeccakF1600_StatePer_fu_277_ap_return_4.read();
        newret8_reg_588 = grp_KeccakF1600_StatePer_fu_277_ap_return_9.read();
        newret9_reg_568 = grp_KeccakF1600_StatePer_fu_277_ap_return_5.read();
        newret_reg_543 = grp_KeccakF1600_StatePer_fu_277_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_s_fu_385_p2.read(), ap_const_lv1_0))) {
        tmp_4_reg_636 = tmp_4_fu_397_p3.read();
    }
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_squeezeblocks::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_squeezeblocks::thread_ap_condition_697() {
    ap_condition_697 = (!esl_seteq<1,5,5>(ap_const_lv5_0, ap_phi_mux_i_phi_fu_219_p4.read()) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_1) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_2) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_3) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_4) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_5) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_6) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_7) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_8) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_9) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_A) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_B) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_C) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_D) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_E) && !esl_seteq<1,5,5>(ap_phi_mux_i_phi_fu_219_p4.read(), ap_const_lv5_F));
}

void keccak_squeezeblocks::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_385_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_ap_phi_mux_i_phi_fu_219_p4() {
    ap_phi_mux_i_phi_fu_219_p4 = i_reg_215.read();
}

void keccak_squeezeblocks::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_s_fu_385_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_exitcond_i_fu_405_p2() {
    exitcond_i_fu_405_p2 = (!i_i_reg_266.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_266.read() == ap_const_lv4_8);
}

void keccak_squeezeblocks::thread_grp_KeccakF1600_StatePer_fu_277_ap_start() {
    grp_KeccakF1600_StatePer_fu_277_ap_start = grp_KeccakF1600_StatePer_fu_277_ap_start_reg.read();
}

void keccak_squeezeblocks::thread_i_2_fu_411_p2() {
    i_2_fu_411_p2 = (!i_i_reg_266.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i_reg_266.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void keccak_squeezeblocks::thread_i_4_fu_391_p2() {
    i_4_fu_391_p2 = (!i_reg_215.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_215.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_squeezeblocks::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<8>) (sum_i_cast_fu_453_p1.read());
}

void keccak_squeezeblocks::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_out_r_d0() {
    out_r_d0 = tmp_3_i_fu_433_p2.read().range(8-1, 0);
}

void keccak_squeezeblocks::thread_out_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_405_p2.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void keccak_squeezeblocks::thread_sum_i_cast_fu_453_p1() {
    sum_i_cast_fu_453_p1 = esl_zext<64,8>(sum_i_fu_448_p2.read());
}

void keccak_squeezeblocks::thread_sum_i_fu_448_p2() {
    sum_i_fu_448_p2 = (!tmp_5_i_cast_fu_444_p1.read().is_01() || !tmp_4_reg_636.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_5_i_cast_fu_444_p1.read()) + sc_biguint<8>(tmp_4_reg_636.read()));
}

void keccak_squeezeblocks::thread_tmp_1_i_fu_421_p3() {
    tmp_1_i_fu_421_p3 = esl_concat<3,3>(tmp_fu_417_p1.read(), ap_const_lv3_0);
}

void keccak_squeezeblocks::thread_tmp_2_i_fu_429_p1() {
    tmp_2_i_fu_429_p1 = esl_zext<64,6>(tmp_1_i_fu_421_p3.read());
}

void keccak_squeezeblocks::thread_tmp_3_i_fu_433_p2() {
    tmp_3_i_fu_433_p2 = (!tmp_2_i_fu_429_p1.read().is_01())? sc_lv<64>(): u_assign_reg_226.read() >> (unsigned short)tmp_2_i_fu_429_p1.read().to_uint();
}

void keccak_squeezeblocks::thread_tmp_4_fu_397_p3() {
    tmp_4_fu_397_p3 = esl_concat<5,3>(i_reg_215.read(), ap_const_lv3_0);
}

void keccak_squeezeblocks::thread_tmp_5_i_cast_fu_444_p1() {
    tmp_5_i_cast_fu_444_p1 = esl_zext<8,4>(i_i_reg_266.read());
}

void keccak_squeezeblocks::thread_tmp_fu_417_p1() {
    tmp_fu_417_p1 = i_i_reg_266.read().range(3-1, 0);
}

void keccak_squeezeblocks::thread_tmp_s_fu_385_p2() {
    tmp_s_fu_385_p2 = (!i_reg_215.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_215.read() == ap_const_lv5_11);
}

void keccak_squeezeblocks::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_277_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_s_fu_385_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_i_fu_405_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

