// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _keccak_squeezeblocks_HH_
#define _keccak_squeezeblocks_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeccakF1600_StatePer.h"

namespace ap_rtl {

struct keccak_squeezeblocks : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<8> > out_r_d0;
    sc_in< sc_lv<64> > s_0_read;
    sc_in< sc_lv<64> > s_1_read;
    sc_in< sc_lv<64> > s_2_read;
    sc_in< sc_lv<64> > s_3_read;
    sc_in< sc_lv<64> > s_4_read;
    sc_in< sc_lv<64> > s_5_read;
    sc_in< sc_lv<64> > s_6_read;
    sc_in< sc_lv<64> > s_7_read;
    sc_in< sc_lv<64> > s_8_read;
    sc_in< sc_lv<64> > s_9_read;
    sc_in< sc_lv<64> > s_10_read;
    sc_in< sc_lv<64> > s_11_read;
    sc_in< sc_lv<64> > s_12_read;
    sc_in< sc_lv<64> > s_13_read;
    sc_in< sc_lv<64> > s_14_read;
    sc_in< sc_lv<64> > s_15_read;
    sc_in< sc_lv<64> > s_16_read;


    // Module declarations
    keccak_squeezeblocks(sc_module_name name);
    SC_HAS_PROCESS(keccak_squeezeblocks);

    ~keccak_squeezeblocks();

    sc_trace_file* mVcdFile;

    KeccakF1600_StatePer* grp_KeccakF1600_StatePer_fu_277;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > newret_reg_543;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_277_ap_ready;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_277_ap_done;
    sc_signal< sc_lv<64> > newret1_reg_548;
    sc_signal< sc_lv<64> > newret3_reg_553;
    sc_signal< sc_lv<64> > newret5_reg_558;
    sc_signal< sc_lv<64> > newret7_reg_563;
    sc_signal< sc_lv<64> > newret9_reg_568;
    sc_signal< sc_lv<64> > newret2_reg_573;
    sc_signal< sc_lv<64> > newret4_reg_578;
    sc_signal< sc_lv<64> > newret6_reg_583;
    sc_signal< sc_lv<64> > newret8_reg_588;
    sc_signal< sc_lv<64> > newret10_reg_593;
    sc_signal< sc_lv<64> > newret11_reg_598;
    sc_signal< sc_lv<64> > newret12_reg_603;
    sc_signal< sc_lv<64> > newret13_reg_608;
    sc_signal< sc_lv<64> > newret14_reg_613;
    sc_signal< sc_lv<64> > newret15_reg_618;
    sc_signal< sc_lv<64> > newret16_reg_623;
    sc_signal< sc_lv<5> > i_4_fu_391_p2;
    sc_signal< sc_lv<5> > i_4_reg_631;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_4_fu_397_p3;
    sc_signal< sc_lv<8> > tmp_4_reg_636;
    sc_signal< sc_lv<1> > tmp_s_fu_385_p2;
    sc_signal< sc_lv<4> > i_2_fu_411_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_277_ap_start;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_277_ap_idle;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_0;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_1;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_2;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_3;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_4;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_5;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_6;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_7;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_8;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_9;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_10;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_11;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_12;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_13;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_14;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_15;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_277_ap_return_16;
    sc_signal< sc_lv<5> > ap_phi_mux_i_phi_fu_219_p4;
    sc_signal< sc_lv<5> > i_reg_215;
    sc_signal< sc_lv<1> > exitcond_i_fu_405_p2;
    sc_signal< sc_lv<64> > u_assign_reg_226;
    sc_signal< sc_lv<4> > i_i_reg_266;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_277_ap_start_reg;
    sc_signal< sc_lv<64> > sum_i_cast_fu_453_p1;
    sc_signal< sc_lv<3> > tmp_fu_417_p1;
    sc_signal< sc_lv<6> > tmp_1_i_fu_421_p3;
    sc_signal< sc_lv<64> > tmp_2_i_fu_429_p1;
    sc_signal< sc_lv<64> > tmp_3_i_fu_433_p2;
    sc_signal< sc_lv<8> > tmp_5_i_cast_fu_444_p1;
    sc_signal< sc_lv<8> > sum_i_fu_448_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< bool > ap_condition_697;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_condition_697();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_i_phi_fu_219_p4();
    void thread_ap_ready();
    void thread_exitcond_i_fu_405_p2();
    void thread_grp_KeccakF1600_StatePer_fu_277_ap_start();
    void thread_i_2_fu_411_p2();
    void thread_i_4_fu_391_p2();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_sum_i_cast_fu_453_p1();
    void thread_sum_i_fu_448_p2();
    void thread_tmp_1_i_fu_421_p3();
    void thread_tmp_2_i_fu_429_p1();
    void thread_tmp_3_i_fu_433_p2();
    void thread_tmp_4_fu_397_p3();
    void thread_tmp_5_i_cast_fu_444_p1();
    void thread_tmp_fu_417_p1();
    void thread_tmp_s_fu_385_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
