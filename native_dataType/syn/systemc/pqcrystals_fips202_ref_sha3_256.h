// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pqcrystals_fips202_ref_sha3_256_HH_
#define _pqcrystals_fips202_ref_sha3_256_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "keccak_squeezeblocks.h"
#include "keccak_absorb.h"
#include "pqcrystals_fips202_ref_sha3_256_t.h"

namespace ap_rtl {

struct pqcrystals_fips202_ref_sha3_256 : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > h_address0;
    sc_out< sc_logic > h_ce0;
    sc_out< sc_logic > h_we0;
    sc_out< sc_lv<8> > h_d0;
    sc_out< sc_lv<2> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<8> > in_r_q0;
    sc_in< sc_lv<64> > inlen;


    // Module declarations
    pqcrystals_fips202_ref_sha3_256(sc_module_name name);
    SC_HAS_PROCESS(pqcrystals_fips202_ref_sha3_256);

    ~pqcrystals_fips202_ref_sha3_256();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pqcrystals_fips202_ref_sha3_256_t* t_U;
    keccak_squeezeblocks* grp_keccak_squeezeblocks_fu_77;
    keccak_absorb* grp_keccak_absorb_fu_101;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > s_0_reg_209;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_keccak_absorb_fu_101_ap_ready;
    sc_signal< sc_logic > grp_keccak_absorb_fu_101_ap_done;
    sc_signal< sc_lv<64> > s_1_reg_214;
    sc_signal< sc_lv<64> > s_2_reg_219;
    sc_signal< sc_lv<64> > s_3_reg_224;
    sc_signal< sc_lv<64> > s_4_reg_229;
    sc_signal< sc_lv<64> > s_5_reg_234;
    sc_signal< sc_lv<64> > s_6_reg_239;
    sc_signal< sc_lv<64> > s_7_reg_244;
    sc_signal< sc_lv<64> > s_8_reg_249;
    sc_signal< sc_lv<64> > s_9_reg_254;
    sc_signal< sc_lv<64> > s_10_reg_259;
    sc_signal< sc_lv<64> > s_11_reg_264;
    sc_signal< sc_lv<64> > s_12_reg_269;
    sc_signal< sc_lv<64> > s_13_reg_274;
    sc_signal< sc_lv<64> > s_14_reg_279;
    sc_signal< sc_lv<64> > s_15_reg_284;
    sc_signal< sc_lv<64> > s_16_reg_289;
    sc_signal< sc_lv<6> > i_1_fu_198_p2;
    sc_signal< sc_lv<6> > i_1_reg_297;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp_fu_204_p1;
    sc_signal< sc_lv<64> > tmp_reg_302;
    sc_signal< sc_lv<1> > exitcond_fu_192_p2;
    sc_signal< sc_lv<8> > t_address0;
    sc_signal< sc_logic > t_ce0;
    sc_signal< sc_logic > t_we0;
    sc_signal< sc_lv<8> > t_q0;
    sc_signal< sc_logic > grp_keccak_squeezeblocks_fu_77_ap_start;
    sc_signal< sc_logic > grp_keccak_squeezeblocks_fu_77_ap_done;
    sc_signal< sc_logic > grp_keccak_squeezeblocks_fu_77_ap_idle;
    sc_signal< sc_logic > grp_keccak_squeezeblocks_fu_77_ap_ready;
    sc_signal< sc_lv<8> > grp_keccak_squeezeblocks_fu_77_out_r_address0;
    sc_signal< sc_logic > grp_keccak_squeezeblocks_fu_77_out_r_ce0;
    sc_signal< sc_logic > grp_keccak_squeezeblocks_fu_77_out_r_we0;
    sc_signal< sc_lv<8> > grp_keccak_squeezeblocks_fu_77_out_r_d0;
    sc_signal< sc_logic > grp_keccak_absorb_fu_101_ap_start;
    sc_signal< sc_logic > grp_keccak_absorb_fu_101_ap_idle;
    sc_signal< sc_lv<2> > grp_keccak_absorb_fu_101_m_address0;
    sc_signal< sc_logic > grp_keccak_absorb_fu_101_m_ce0;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_0;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_1;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_2;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_3;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_4;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_5;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_6;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_7;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_8;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_9;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_10;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_11;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_12;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_13;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_14;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_15;
    sc_signal< sc_lv<64> > grp_keccak_absorb_fu_101_ap_return_16;
    sc_signal< sc_lv<6> > i_reg_66;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_keccak_squeezeblocks_fu_77_ap_start_reg;
    sc_signal< sc_logic > grp_keccak_absorb_fu_101_ap_start_reg;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_fu_192_p2();
    void thread_grp_keccak_absorb_fu_101_ap_start();
    void thread_grp_keccak_squeezeblocks_fu_77_ap_start();
    void thread_h_address0();
    void thread_h_ce0();
    void thread_h_d0();
    void thread_h_we0();
    void thread_i_1_fu_198_p2();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_t_address0();
    void thread_t_ce0();
    void thread_t_we0();
    void thread_tmp_fu_204_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
