// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module KeccakF1600_StatePer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        state_0_read,
        state_1_read,
        state_2_read,
        state_3_read,
        state_4_read,
        state_5_read,
        state_6_read,
        state_7_read,
        state_8_read,
        state_9_read,
        state_10_read,
        state_11_read,
        state_12_read,
        state_13_read,
        state_14_read,
        state_15_read,
        state_16_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] state_0_read;
input  [63:0] state_1_read;
input  [63:0] state_2_read;
input  [63:0] state_3_read;
input  [63:0] state_4_read;
input  [63:0] state_5_read;
input  [63:0] state_6_read;
input  [63:0] state_7_read;
input  [63:0] state_8_read;
input  [63:0] state_9_read;
input  [63:0] state_10_read;
input  [63:0] state_11_read;
input  [63:0] state_12_read;
input  [63:0] state_13_read;
input  [63:0] state_14_read;
input  [63:0] state_15_read;
input  [63:0] state_16_read;
output  [63:0] ap_return_0;
output  [63:0] ap_return_1;
output  [63:0] ap_return_2;
output  [63:0] ap_return_3;
output  [63:0] ap_return_4;
output  [63:0] ap_return_5;
output  [63:0] ap_return_6;
output  [63:0] ap_return_7;
output  [63:0] ap_return_8;
output  [63:0] ap_return_9;
output  [63:0] ap_return_10;
output  [63:0] ap_return_11;
output  [63:0] ap_return_12;
output  [63:0] ap_return_13;
output  [63:0] ap_return_14;
output  [63:0] ap_return_15;
output  [63:0] ap_return_16;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return_0;
reg[63:0] ap_return_1;
reg[63:0] ap_return_2;
reg[63:0] ap_return_3;
reg[63:0] ap_return_4;
reg[63:0] ap_return_5;
reg[63:0] ap_return_6;
reg[63:0] ap_return_7;
reg[63:0] ap_return_8;
reg[63:0] ap_return_9;
reg[63:0] ap_return_10;
reg[63:0] ap_return_11;
reg[63:0] ap_return_12;
reg[63:0] ap_return_13;
reg[63:0] ap_return_14;
reg[63:0] ap_return_15;
reg[63:0] ap_return_16;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] KeccakF_RoundConstan_address0;
reg    KeccakF_RoundConstan_ce0;
wire   [63:0] KeccakF_RoundConstan_q0;
wire   [4:0] KeccakF_RoundConstan_address1;
reg    KeccakF_RoundConstan_ce1;
wire   [63:0] KeccakF_RoundConstan_q1;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_608_p2;
wire   [4:0] round_1_fu_630_p2;
reg   [4:0] round_1_reg_3600;
wire   [63:0] Aba_fu_2506_p2;
wire    ap_CS_fsm_state3;
wire   [63:0] Abe_1_fu_2524_p2;
wire   [63:0] Abi_1_fu_2542_p2;
wire   [63:0] Abo_1_fu_2560_p2;
wire   [63:0] Abu_1_fu_2578_p2;
wire   [63:0] Aga_1_fu_2736_p2;
wire   [63:0] Age_1_fu_2754_p2;
wire   [63:0] Agi_1_fu_2772_p2;
wire   [63:0] Ago_1_fu_2790_p2;
wire   [63:0] Agu_1_fu_2808_p2;
wire   [63:0] Aka_1_fu_2964_p2;
wire   [63:0] Ake_1_fu_2982_p2;
wire   [63:0] Aki_1_fu_3000_p2;
wire   [63:0] Ako_1_fu_3018_p2;
wire   [63:0] Aku_1_fu_3036_p2;
wire   [63:0] Ama_1_fu_3194_p2;
wire   [63:0] Ame_1_fu_3212_p2;
wire   [63:0] Ami_1_fu_3230_p2;
wire   [63:0] Amo_1_fu_3248_p2;
wire   [63:0] Amu_1_fu_3266_p2;
wire   [63:0] Asa_1_fu_3424_p2;
wire   [63:0] Ase_1_fu_3442_p2;
wire   [63:0] Asi_1_fu_3460_p2;
wire   [63:0] Aso_1_fu_3478_p2;
wire   [63:0] Asu_1_fu_3496_p2;
reg   [63:0] state_23_write_assi_reg_331;
reg   [63:0] state_22_write_assi_reg_343;
reg   [63:0] state_21_write_assi_reg_355;
reg   [63:0] state_20_write_assi_reg_367;
reg   [63:0] state_19_write_assi_reg_379;
reg   [63:0] state_18_write_assi_reg_391;
reg   [63:0] state_17_write_assi_reg_403;
reg   [63:0] state_16_write_assi_reg_415;
reg   [63:0] state_15_write_assi_reg_425;
reg   [63:0] state_14_write_assi_reg_435;
reg   [63:0] state_13_write_assi_reg_445;
reg   [63:0] state_12_write_assi_reg_455;
reg   [63:0] state_11_write_assi_reg_465;
reg   [63:0] state_10_write_assi_reg_475;
reg   [63:0] state_9_write_assig_reg_485;
reg   [63:0] state_8_write_assig_reg_495;
reg   [63:0] state_7_write_assig_reg_505;
reg   [63:0] state_6_write_assig_reg_515;
reg   [63:0] state_5_write_assig_reg_525;
reg   [63:0] state_4_write_assig_reg_535;
reg   [63:0] state_3_write_assig_reg_545;
reg   [63:0] state_2_write_assig_reg_555;
reg   [63:0] state_1_write_assig_reg_565;
reg   [63:0] state_0_write_assig_reg_575;
reg   [4:0] round_reg_585;
reg   [63:0] state_24_write_assi_reg_596;
wire   [63:0] tmp_11_fu_614_p1;
wire   [63:0] tmp_124_fu_625_p1;
wire   [4:0] tmp_122_fu_619_p2;
wire   [63:0] tmp5_fu_744_p2;
wire   [63:0] tmp4_fu_750_p2;
wire   [63:0] tmp3_fu_738_p2;
wire   [63:0] tmp1_fu_768_p2;
wire   [63:0] tmp9_fu_774_p2;
wire   [63:0] tmp8_fu_762_p2;
wire   [63:0] tmp6_fu_792_p2;
wire   [63:0] tmp7_fu_798_p2;
wire   [63:0] tmp2_fu_786_p2;
wire   [63:0] tmp11_fu_816_p2;
wire   [63:0] tmp12_fu_822_p2;
wire   [63:0] tmp10_fu_810_p2;
wire   [63:0] tmp14_fu_840_p2;
wire   [63:0] tmp15_fu_846_p2;
wire   [63:0] tmp13_fu_834_p2;
wire   [63:0] BCe_fu_780_p2;
wire   [62:0] tmp_17_fu_858_p1;
wire   [0:0] tmp_19_fu_862_p3;
wire   [63:0] BCu_fu_852_p2;
wire   [63:0] tmp_2_fu_870_p3;
wire   [63:0] BCi_fu_804_p2;
wire   [62:0] tmp_21_fu_884_p1;
wire   [0:0] tmp_34_fu_888_p3;
wire   [63:0] BCa_fu_756_p2;
wire   [63:0] tmp_5_fu_896_p3;
wire   [63:0] BCo_fu_828_p2;
wire   [62:0] tmp_36_fu_910_p1;
wire   [0:0] tmp_38_fu_914_p3;
wire   [63:0] tmp_8_fu_922_p3;
wire   [62:0] tmp_40_fu_936_p1;
wire   [0:0] tmp_42_fu_940_p3;
wire   [63:0] tmp_3_fu_948_p3;
wire   [62:0] tmp_48_fu_962_p1;
wire   [0:0] tmp_54_fu_966_p3;
wire   [63:0] tmp_9_fu_974_p3;
wire   [63:0] Da_fu_878_p2;
wire   [63:0] De_fu_904_p2;
wire   [63:0] Age_fu_994_p2;
wire   [19:0] tmp_56_fu_1000_p1;
wire   [43:0] tmp_s_fu_1004_p4;
wire   [63:0] Di_fu_930_p2;
wire   [63:0] Aki_fu_1022_p2;
wire   [20:0] tmp_58_fu_1028_p1;
wire   [42:0] tmp_1_fu_1032_p4;
wire   [63:0] Do_fu_956_p2;
wire   [63:0] Amo_fu_1050_p2;
wire   [42:0] tmp_60_fu_1056_p1;
wire   [20:0] tmp_4_fu_1060_p4;
wire   [63:0] Du_fu_982_p2;
wire   [63:0] Asu_fu_1078_p2;
wire   [49:0] tmp_62_fu_1084_p1;
wire   [13:0] tmp_6_fu_1088_p4;
wire   [63:0] BCe_1_fu_1014_p3;
wire   [63:0] BCi_1_fu_1042_p3;
wire   [63:0] tmp_7_fu_1106_p2;
wire   [63:0] tmp_10_fu_1112_p2;
wire   [63:0] Aba_2_fu_988_p2;
wire   [63:0] tmp16_fu_1118_p2;
wire   [63:0] BCo_1_fu_1070_p3;
wire   [63:0] tmp_12_fu_1130_p2;
wire   [63:0] tmp_13_fu_1136_p2;
wire   [63:0] BCu_1_fu_1098_p3;
wire   [63:0] tmp_14_fu_1148_p2;
wire   [63:0] tmp_15_fu_1154_p2;
wire   [63:0] tmp_16_fu_1166_p2;
wire   [63:0] tmp_18_fu_1172_p2;
wire   [63:0] tmp_20_fu_1184_p2;
wire   [63:0] tmp_22_fu_1190_p2;
wire   [63:0] Abo_fu_1202_p2;
wire   [35:0] tmp_74_fu_1208_p1;
wire   [27:0] tmp_23_fu_1212_p4;
wire   [63:0] Agu_fu_1230_p2;
wire   [43:0] tmp_76_fu_1236_p1;
wire   [19:0] tmp_24_fu_1240_p4;
wire   [63:0] Aka_fu_1258_p2;
wire   [60:0] tmp_78_fu_1264_p1;
wire   [2:0] tmp_25_fu_1268_p4;
wire   [63:0] Ame_fu_1286_p2;
wire   [18:0] tmp_80_fu_1292_p1;
wire   [44:0] tmp_26_fu_1296_p4;
wire   [63:0] Asi_fu_1314_p2;
wire   [2:0] tmp_82_fu_1320_p1;
wire   [60:0] tmp_27_fu_1324_p4;
wire   [63:0] BCe_2_fu_1250_p3;
wire   [63:0] BCi_2_fu_1278_p3;
wire   [63:0] tmp_28_fu_1342_p2;
wire   [63:0] BCa_2_fu_1222_p3;
wire   [63:0] tmp_29_fu_1348_p2;
wire   [63:0] BCo_2_fu_1306_p3;
wire   [63:0] tmp_30_fu_1360_p2;
wire   [63:0] tmp_31_fu_1366_p2;
wire   [63:0] BCu_2_fu_1334_p3;
wire   [63:0] tmp_32_fu_1378_p2;
wire   [63:0] tmp_33_fu_1384_p2;
wire   [63:0] tmp_35_fu_1396_p2;
wire   [63:0] tmp_37_fu_1402_p2;
wire   [63:0] tmp_39_fu_1414_p2;
wire   [63:0] tmp_41_fu_1420_p2;
wire   [63:0] Abe_fu_1432_p2;
wire   [62:0] tmp_94_fu_1438_p1;
wire   [0:0] tmp_96_fu_1442_p3;
wire   [63:0] Agi_fu_1458_p2;
wire   [57:0] tmp_98_fu_1464_p1;
wire   [5:0] tmp_43_fu_1468_p4;
wire   [63:0] Ako_fu_1486_p2;
wire   [38:0] tmp_100_fu_1492_p1;
wire   [24:0] tmp_44_fu_1496_p4;
wire   [63:0] Amu_fu_1514_p2;
wire   [55:0] tmp_102_fu_1520_p1;
wire   [7:0] tmp_45_fu_1524_p4;
wire   [63:0] Asa_fu_1542_p2;
wire   [45:0] tmp_108_fu_1548_p1;
wire   [17:0] tmp_46_fu_1552_p4;
wire   [63:0] BCe_3_fu_1478_p3;
wire   [63:0] BCi_3_fu_1506_p3;
wire   [63:0] tmp_47_fu_1570_p2;
wire   [63:0] tmp_49_fu_1576_p2;
wire   [63:0] BCa_3_fu_1450_p3;
wire   [63:0] BCo_3_fu_1534_p3;
wire   [63:0] tmp_50_fu_1588_p2;
wire   [63:0] tmp_51_fu_1594_p2;
wire   [63:0] BCu_3_fu_1562_p3;
wire   [63:0] tmp_52_fu_1606_p2;
wire   [63:0] tmp_53_fu_1612_p2;
wire   [63:0] tmp_55_fu_1624_p2;
wire   [63:0] tmp_57_fu_1630_p2;
wire   [63:0] tmp_59_fu_1642_p2;
wire   [63:0] tmp_61_fu_1648_p2;
wire   [63:0] Abu_fu_1660_p2;
wire   [36:0] tmp_110_fu_1666_p1;
wire   [26:0] tmp_63_fu_1670_p4;
wire   [63:0] Aga_fu_1688_p2;
wire   [27:0] tmp_112_fu_1694_p1;
wire   [35:0] tmp_64_fu_1698_p4;
wire   [63:0] Ake_fu_1716_p2;
wire   [53:0] tmp_114_fu_1722_p1;
wire   [9:0] tmp_65_fu_1726_p4;
wire   [63:0] Ami_fu_1744_p2;
wire   [48:0] tmp_115_fu_1750_p1;
wire   [14:0] tmp_66_fu_1754_p4;
wire   [63:0] Aso_fu_1772_p2;
wire   [7:0] tmp_117_fu_1778_p1;
wire   [55:0] tmp_67_fu_1782_p4;
wire   [63:0] BCe_4_fu_1708_p3;
wire   [63:0] BCi_4_fu_1736_p3;
wire   [63:0] tmp_68_fu_1800_p2;
wire   [63:0] tmp_69_fu_1806_p2;
wire   [63:0] BCa_4_fu_1680_p3;
wire   [63:0] BCo_4_fu_1764_p3;
wire   [63:0] tmp_70_fu_1818_p2;
wire   [63:0] tmp_71_fu_1824_p2;
wire   [63:0] BCu_4_fu_1792_p3;
wire   [63:0] tmp_72_fu_1836_p2;
wire   [63:0] tmp_73_fu_1842_p2;
wire   [63:0] tmp_75_fu_1854_p2;
wire   [63:0] tmp_77_fu_1860_p2;
wire   [63:0] tmp_79_fu_1872_p2;
wire   [63:0] tmp_81_fu_1878_p2;
wire   [63:0] Abi_fu_1890_p2;
wire   [1:0] tmp_118_fu_1896_p1;
wire   [61:0] tmp_83_fu_1900_p4;
wire   [63:0] Ago_fu_1918_p2;
wire   [8:0] tmp_120_fu_1924_p1;
wire   [54:0] tmp_84_fu_1928_p4;
wire   [63:0] Aku_fu_1946_p2;
wire   [24:0] tmp_123_fu_1952_p1;
wire   [38:0] tmp_85_fu_1956_p4;
wire   [63:0] Ama_fu_1974_p2;
wire   [22:0] tmp_126_fu_1980_p1;
wire   [40:0] tmp_86_fu_1984_p4;
wire   [63:0] Ase_fu_2002_p2;
wire   [61:0] tmp_129_fu_2008_p1;
wire   [1:0] tmp_87_fu_2012_p4;
wire   [63:0] BCe_5_fu_1938_p3;
wire   [63:0] BCi_5_fu_1966_p3;
wire   [63:0] tmp_88_fu_2030_p2;
wire   [63:0] tmp_89_fu_2036_p2;
wire   [63:0] BCa_5_fu_1910_p3;
wire   [63:0] BCo_5_fu_1994_p3;
wire   [63:0] tmp_90_fu_2048_p2;
wire   [63:0] tmp_91_fu_2054_p2;
wire   [63:0] BCu_5_fu_2022_p3;
wire   [63:0] tmp_92_fu_2066_p2;
wire   [63:0] tmp_93_fu_2072_p2;
wire   [63:0] tmp_95_fu_2084_p2;
wire   [63:0] tmp_97_fu_2090_p2;
wire   [63:0] tmp_99_fu_2102_p2;
wire   [63:0] tmp_101_fu_2108_p2;
wire   [63:0] Esa_fu_2042_p2;
wire   [63:0] Eka_fu_1582_p2;
wire   [63:0] Ega_fu_1354_p2;
wire   [63:0] Eba_fu_1124_p2;
wire   [63:0] tmp18_fu_2126_p2;
wire   [63:0] Ema_fu_1812_p2;
wire   [63:0] tmp19_fu_2132_p2;
wire   [63:0] tmp17_fu_2120_p2;
wire   [63:0] Ese_fu_2060_p2;
wire   [63:0] Eke_fu_1600_p2;
wire   [63:0] Ege_fu_1372_p2;
wire   [63:0] Ebe_fu_1142_p2;
wire   [63:0] tmp21_fu_2150_p2;
wire   [63:0] Eme_fu_1830_p2;
wire   [63:0] tmp22_fu_2156_p2;
wire   [63:0] tmp20_fu_2144_p2;
wire   [63:0] Eki_fu_1618_p2;
wire   [63:0] Emi_fu_1848_p2;
wire   [63:0] Esi_fu_2078_p2;
wire   [63:0] Ebi_fu_1160_p2;
wire   [63:0] tmp24_fu_2174_p2;
wire   [63:0] Egi_fu_1390_p2;
wire   [63:0] tmp25_fu_2180_p2;
wire   [63:0] tmp23_fu_2168_p2;
wire   [63:0] Ebo_fu_1178_p2;
wire   [63:0] Emo_fu_1866_p2;
wire   [63:0] Eko_fu_1636_p2;
wire   [63:0] Ego_fu_1408_p2;
wire   [63:0] tmp27_fu_2198_p2;
wire   [63:0] Eso_fu_2096_p2;
wire   [63:0] tmp28_fu_2204_p2;
wire   [63:0] tmp26_fu_2192_p2;
wire   [63:0] Emu_fu_1884_p2;
wire   [63:0] Egu_fu_1426_p2;
wire   [63:0] Ebu_fu_1196_p2;
wire   [63:0] Esu_fu_2114_p2;
wire   [63:0] tmp30_fu_2222_p2;
wire   [63:0] Eku_fu_1654_p2;
wire   [63:0] tmp31_fu_2228_p2;
wire   [63:0] tmp29_fu_2216_p2;
wire   [63:0] BCe_6_fu_2162_p2;
wire   [62:0] tmp_131_fu_2240_p1;
wire   [0:0] tmp_133_fu_2244_p3;
wire   [63:0] tmp_103_fu_2252_p3;
wire   [63:0] BCu_6_fu_2234_p2;
wire   [63:0] BCi_6_fu_2186_p2;
wire   [62:0] tmp_135_fu_2266_p1;
wire   [0:0] tmp_149_fu_2270_p3;
wire   [63:0] BCa_6_fu_2138_p2;
wire   [63:0] tmp_104_fu_2278_p3;
wire   [63:0] BCo_6_fu_2210_p2;
wire   [62:0] tmp_151_fu_2292_p1;
wire   [0:0] tmp_153_fu_2296_p3;
wire   [63:0] tmp_105_fu_2304_p3;
wire   [62:0] tmp_155_fu_2318_p1;
wire   [0:0] tmp_157_fu_2322_p3;
wire   [63:0] tmp_106_fu_2330_p3;
wire   [62:0] tmp_163_fu_2344_p1;
wire   [0:0] tmp_169_fu_2348_p3;
wire   [63:0] tmp_107_fu_2356_p3;
wire   [63:0] Da_1_fu_2260_p2;
wire   [63:0] De_1_fu_2286_p2;
wire   [63:0] Ege_1_fu_2376_p2;
wire   [19:0] tmp_171_fu_2382_p1;
wire   [43:0] tmp_109_fu_2386_p4;
wire   [63:0] Di_1_fu_2312_p2;
wire   [63:0] Eki_1_fu_2404_p2;
wire   [20:0] tmp_173_fu_2410_p1;
wire   [42:0] tmp_111_fu_2414_p4;
wire   [63:0] Do_1_fu_2338_p2;
wire   [63:0] Emo_1_fu_2432_p2;
wire   [42:0] tmp_175_fu_2438_p1;
wire   [20:0] tmp_113_fu_2442_p4;
wire   [63:0] Du_1_fu_2364_p2;
wire   [63:0] Esu_1_fu_2460_p2;
wire   [49:0] tmp_177_fu_2466_p1;
wire   [13:0] tmp_116_fu_2470_p4;
wire   [63:0] BCe_7_fu_2396_p3;
wire   [63:0] BCi_7_fu_2424_p3;
wire   [63:0] tmp_119_fu_2488_p2;
wire   [63:0] Eba_2_fu_2370_p2;
wire   [63:0] tmp_121_fu_2494_p2;
wire   [63:0] tmp32_fu_2500_p2;
wire   [63:0] BCo_7_fu_2452_p3;
wire   [63:0] tmp_125_fu_2512_p2;
wire   [63:0] tmp_127_fu_2518_p2;
wire   [63:0] BCu_7_fu_2480_p3;
wire   [63:0] tmp_128_fu_2530_p2;
wire   [63:0] tmp_130_fu_2536_p2;
wire   [63:0] tmp_132_fu_2548_p2;
wire   [63:0] tmp_134_fu_2554_p2;
wire   [63:0] tmp_136_fu_2566_p2;
wire   [63:0] tmp_137_fu_2572_p2;
wire   [63:0] Ebo_1_fu_2584_p2;
wire   [35:0] tmp_189_fu_2590_p1;
wire   [27:0] tmp_138_fu_2594_p4;
wire   [63:0] Egu_1_fu_2612_p2;
wire   [43:0] tmp_191_fu_2618_p1;
wire   [19:0] tmp_139_fu_2622_p4;
wire   [63:0] Eka_1_fu_2640_p2;
wire   [60:0] tmp_193_fu_2646_p1;
wire   [2:0] tmp_140_fu_2650_p4;
wire   [63:0] Eme_1_fu_2668_p2;
wire   [18:0] tmp_195_fu_2674_p1;
wire   [44:0] tmp_141_fu_2678_p4;
wire   [63:0] Esi_1_fu_2696_p2;
wire   [2:0] tmp_197_fu_2702_p1;
wire   [60:0] tmp_142_fu_2706_p4;
wire   [63:0] BCe_8_fu_2632_p3;
wire   [63:0] BCi_8_fu_2660_p3;
wire   [63:0] tmp_143_fu_2724_p2;
wire   [63:0] tmp_144_fu_2730_p2;
wire   [63:0] BCa_8_fu_2604_p3;
wire   [63:0] BCo_8_fu_2688_p3;
wire   [63:0] tmp_145_fu_2742_p2;
wire   [63:0] tmp_146_fu_2748_p2;
wire   [63:0] BCu_8_fu_2716_p3;
wire   [63:0] tmp_147_fu_2760_p2;
wire   [63:0] tmp_148_fu_2766_p2;
wire   [63:0] tmp_150_fu_2778_p2;
wire   [63:0] tmp_152_fu_2784_p2;
wire   [63:0] tmp_154_fu_2796_p2;
wire   [63:0] tmp_156_fu_2802_p2;
wire   [63:0] Ebe_1_fu_2814_p2;
wire   [62:0] tmp_209_fu_2820_p1;
wire   [0:0] tmp_211_fu_2824_p3;
wire   [63:0] Egi_1_fu_2840_p2;
wire   [57:0] tmp_213_fu_2846_p1;
wire   [5:0] tmp_158_fu_2850_p4;
wire   [63:0] Eko_1_fu_2868_p2;
wire   [38:0] tmp_215_fu_2874_p1;
wire   [24:0] tmp_159_fu_2878_p4;
wire   [63:0] Emu_1_fu_2896_p2;
wire   [55:0] tmp_217_fu_2902_p1;
wire   [7:0] tmp_160_fu_2906_p4;
wire   [63:0] Esa_1_fu_2924_p2;
wire   [45:0] tmp_223_fu_2930_p1;
wire   [17:0] tmp_161_fu_2934_p4;
wire   [63:0] BCe_9_fu_2860_p3;
wire   [63:0] BCi_9_fu_2888_p3;
wire   [63:0] tmp_162_fu_2952_p2;
wire   [63:0] BCa_9_fu_2832_p3;
wire   [63:0] tmp_164_fu_2958_p2;
wire   [63:0] BCo_9_fu_2916_p3;
wire   [63:0] tmp_165_fu_2970_p2;
wire   [63:0] tmp_166_fu_2976_p2;
wire   [63:0] BCu_9_fu_2944_p3;
wire   [63:0] tmp_167_fu_2988_p2;
wire   [63:0] tmp_168_fu_2994_p2;
wire   [63:0] tmp_170_fu_3006_p2;
wire   [63:0] tmp_172_fu_3012_p2;
wire   [63:0] tmp_174_fu_3024_p2;
wire   [63:0] tmp_176_fu_3030_p2;
wire   [63:0] Ebu_1_fu_3042_p2;
wire   [36:0] tmp_224_fu_3048_p1;
wire   [26:0] tmp_178_fu_3052_p4;
wire   [63:0] Ega_1_fu_3070_p2;
wire   [27:0] tmp_225_fu_3076_p1;
wire   [35:0] tmp_179_fu_3080_p4;
wire   [63:0] Eke_1_fu_3098_p2;
wire   [53:0] tmp_226_fu_3104_p1;
wire   [9:0] tmp_180_fu_3108_p4;
wire   [63:0] Emi_1_fu_3126_p2;
wire   [48:0] tmp_227_fu_3132_p1;
wire   [14:0] tmp_181_fu_3136_p4;
wire   [63:0] Eso_1_fu_3154_p2;
wire   [7:0] tmp_228_fu_3160_p1;
wire   [55:0] tmp_182_fu_3164_p4;
wire   [63:0] BCe_10_fu_3090_p3;
wire   [63:0] BCi_10_fu_3118_p3;
wire   [63:0] tmp_183_fu_3182_p2;
wire   [63:0] BCa_10_fu_3062_p3;
wire   [63:0] tmp_184_fu_3188_p2;
wire   [63:0] BCo_10_fu_3146_p3;
wire   [63:0] tmp_185_fu_3200_p2;
wire   [63:0] tmp_186_fu_3206_p2;
wire   [63:0] BCu_10_fu_3174_p3;
wire   [63:0] tmp_187_fu_3218_p2;
wire   [63:0] tmp_188_fu_3224_p2;
wire   [63:0] tmp_190_fu_3236_p2;
wire   [63:0] tmp_192_fu_3242_p2;
wire   [63:0] tmp_194_fu_3254_p2;
wire   [63:0] tmp_196_fu_3260_p2;
wire   [63:0] Ebi_1_fu_3272_p2;
wire   [1:0] tmp_229_fu_3278_p1;
wire   [61:0] tmp_198_fu_3282_p4;
wire   [63:0] Ego_1_fu_3300_p2;
wire   [8:0] tmp_230_fu_3306_p1;
wire   [54:0] tmp_199_fu_3310_p4;
wire   [63:0] Eku_1_fu_3328_p2;
wire   [24:0] tmp_231_fu_3334_p1;
wire   [38:0] tmp_200_fu_3338_p4;
wire   [63:0] Ema_1_fu_3356_p2;
wire   [22:0] tmp_232_fu_3362_p1;
wire   [40:0] tmp_201_fu_3366_p4;
wire   [63:0] Ese_1_fu_3384_p2;
wire   [61:0] tmp_233_fu_3390_p1;
wire   [1:0] tmp_202_fu_3394_p4;
wire   [63:0] BCe_11_fu_3320_p3;
wire   [63:0] BCi_11_fu_3348_p3;
wire   [63:0] tmp_203_fu_3412_p2;
wire   [63:0] tmp_204_fu_3418_p2;
wire   [63:0] BCa_11_fu_3292_p3;
wire   [63:0] BCo_11_fu_3376_p3;
wire   [63:0] tmp_205_fu_3430_p2;
wire   [63:0] tmp_206_fu_3436_p2;
wire   [63:0] BCu_11_fu_3404_p3;
wire   [63:0] tmp_207_fu_3448_p2;
wire   [63:0] tmp_208_fu_3454_p2;
wire   [63:0] tmp_210_fu_3466_p2;
wire   [63:0] tmp_212_fu_3472_p2;
wire   [63:0] tmp_214_fu_3484_p2;
wire   [63:0] tmp_216_fu_3490_p2;
reg   [63:0] ap_return_0_preg;
reg   [63:0] ap_return_1_preg;
reg   [63:0] ap_return_2_preg;
reg   [63:0] ap_return_3_preg;
reg   [63:0] ap_return_4_preg;
reg   [63:0] ap_return_5_preg;
reg   [63:0] ap_return_6_preg;
reg   [63:0] ap_return_7_preg;
reg   [63:0] ap_return_8_preg;
reg   [63:0] ap_return_9_preg;
reg   [63:0] ap_return_10_preg;
reg   [63:0] ap_return_11_preg;
reg   [63:0] ap_return_12_preg;
reg   [63:0] ap_return_13_preg;
reg   [63:0] ap_return_14_preg;
reg   [63:0] ap_return_15_preg;
reg   [63:0] ap_return_16_preg;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_return_0_preg = 64'd0;
#0 ap_return_1_preg = 64'd0;
#0 ap_return_2_preg = 64'd0;
#0 ap_return_3_preg = 64'd0;
#0 ap_return_4_preg = 64'd0;
#0 ap_return_5_preg = 64'd0;
#0 ap_return_6_preg = 64'd0;
#0 ap_return_7_preg = 64'd0;
#0 ap_return_8_preg = 64'd0;
#0 ap_return_9_preg = 64'd0;
#0 ap_return_10_preg = 64'd0;
#0 ap_return_11_preg = 64'd0;
#0 ap_return_12_preg = 64'd0;
#0 ap_return_13_preg = 64'd0;
#0 ap_return_14_preg = 64'd0;
#0 ap_return_15_preg = 64'd0;
#0 ap_return_16_preg = 64'd0;
end

KeccakF1600_StatePer_KeccakF_RoundConstan #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
KeccakF_RoundConstan_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakF_RoundConstan_address0),
    .ce0(KeccakF_RoundConstan_ce0),
    .q0(KeccakF_RoundConstan_q0),
    .address1(KeccakF_RoundConstan_address1),
    .ce1(KeccakF_RoundConstan_ce1),
    .q1(KeccakF_RoundConstan_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_0_preg <= state_0_write_assig_reg_575;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_10_preg <= state_10_write_assi_reg_475;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_11_preg <= state_11_write_assi_reg_465;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_12_preg <= state_12_write_assi_reg_455;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_13_preg <= state_13_write_assi_reg_445;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_14_preg <= state_14_write_assi_reg_435;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_15_preg <= state_15_write_assi_reg_425;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_16_preg <= state_16_write_assi_reg_415;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_1_preg <= state_1_write_assig_reg_565;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_2_preg <= state_2_write_assig_reg_555;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_3_preg <= state_3_write_assig_reg_545;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_4_preg <= state_4_write_assig_reg_535;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_5_preg <= state_5_write_assig_reg_525;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_6_preg <= state_6_write_assig_reg_515;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_7_preg <= state_7_write_assig_reg_505;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_8_preg <= state_8_write_assig_reg_495;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
            ap_return_9_preg <= state_9_write_assig_reg_485;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        round_reg_585 <= round_1_reg_3600;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        round_reg_585 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_0_write_assig_reg_575 <= Aba_fu_2506_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_0_write_assig_reg_575 <= state_0_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_10_write_assi_reg_475 <= Aka_1_fu_2964_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_10_write_assi_reg_475 <= state_10_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_11_write_assi_reg_465 <= Ake_1_fu_2982_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_11_write_assi_reg_465 <= state_11_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_12_write_assi_reg_455 <= Aki_1_fu_3000_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_12_write_assi_reg_455 <= state_12_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_13_write_assi_reg_445 <= Ako_1_fu_3018_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_13_write_assi_reg_445 <= state_13_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_14_write_assi_reg_435 <= Aku_1_fu_3036_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_14_write_assi_reg_435 <= state_14_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_15_write_assi_reg_425 <= Ama_1_fu_3194_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_15_write_assi_reg_425 <= state_15_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_16_write_assi_reg_415 <= Ame_1_fu_3212_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_16_write_assi_reg_415 <= state_16_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_17_write_assi_reg_403 <= Ami_1_fu_3230_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_17_write_assi_reg_403 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_18_write_assi_reg_391 <= Amo_1_fu_3248_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_18_write_assi_reg_391 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_19_write_assi_reg_379 <= Amu_1_fu_3266_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_19_write_assi_reg_379 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_1_write_assig_reg_565 <= Abe_1_fu_2524_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_1_write_assig_reg_565 <= state_1_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_20_write_assi_reg_367 <= Asa_1_fu_3424_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_20_write_assi_reg_367 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_21_write_assi_reg_355 <= Ase_1_fu_3442_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_21_write_assi_reg_355 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_22_write_assi_reg_343 <= Asi_1_fu_3460_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_22_write_assi_reg_343 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_23_write_assi_reg_331 <= Aso_1_fu_3478_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_23_write_assi_reg_331 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_24_write_assi_reg_596 <= Asu_1_fu_3496_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_24_write_assi_reg_596 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_2_write_assig_reg_555 <= Abi_1_fu_2542_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_2_write_assig_reg_555 <= state_2_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_3_write_assig_reg_545 <= Abo_1_fu_2560_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_3_write_assig_reg_545 <= state_3_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_4_write_assig_reg_535 <= Abu_1_fu_2578_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_4_write_assig_reg_535 <= state_4_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_5_write_assig_reg_525 <= Aga_1_fu_2736_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_5_write_assig_reg_525 <= state_5_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_6_write_assig_reg_515 <= Age_1_fu_2754_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_6_write_assig_reg_515 <= state_6_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_7_write_assig_reg_505 <= Agi_1_fu_2772_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_7_write_assig_reg_505 <= state_7_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_8_write_assig_reg_495 <= Ago_1_fu_2790_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_8_write_assig_reg_495 <= state_8_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        state_9_write_assig_reg_485 <= Agu_1_fu_2808_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        state_9_write_assig_reg_485 <= state_9_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd1))) begin
        round_1_reg_3600 <= round_1_fu_630_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        KeccakF_RoundConstan_ce0 = 1'b1;
    end else begin
        KeccakF_RoundConstan_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        KeccakF_RoundConstan_ce1 = 1'b1;
    end else begin
        KeccakF_RoundConstan_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_0 = state_0_write_assig_reg_575;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_1 = state_1_write_assig_reg_565;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_10 = state_10_write_assi_reg_475;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_11 = state_11_write_assi_reg_465;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_12 = state_12_write_assi_reg_455;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_13 = state_13_write_assi_reg_445;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_14 = state_14_write_assi_reg_435;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_15 = state_15_write_assi_reg_425;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_16 = state_16_write_assi_reg_415;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_2 = state_2_write_assig_reg_555;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_3 = state_3_write_assig_reg_545;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_4 = state_4_write_assig_reg_535;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_5 = state_5_write_assig_reg_525;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_6 = state_6_write_assig_reg_515;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_7 = state_7_write_assig_reg_505;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_8 = state_8_write_assig_reg_495;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
        ap_return_9 = state_9_write_assig_reg_485;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_608_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Aba_2_fu_988_p2 = (state_0_write_assig_reg_575 ^ Da_fu_878_p2);

assign Aba_fu_2506_p2 = (tmp32_fu_2500_p2 ^ KeccakF_RoundConstan_q1);

assign Abe_1_fu_2524_p2 = (tmp_127_fu_2518_p2 ^ BCe_7_fu_2396_p3);

assign Abe_fu_1432_p2 = (state_1_write_assig_reg_565 ^ De_fu_904_p2);

assign Abi_1_fu_2542_p2 = (tmp_130_fu_2536_p2 ^ BCi_7_fu_2424_p3);

assign Abi_fu_1890_p2 = (state_2_write_assig_reg_555 ^ Di_fu_930_p2);

assign Abo_1_fu_2560_p2 = (tmp_134_fu_2554_p2 ^ BCo_7_fu_2452_p3);

assign Abo_fu_1202_p2 = (state_3_write_assig_reg_545 ^ Do_fu_956_p2);

assign Abu_1_fu_2578_p2 = (tmp_137_fu_2572_p2 ^ BCu_7_fu_2480_p3);

assign Abu_fu_1660_p2 = (state_4_write_assig_reg_535 ^ Du_fu_982_p2);

assign Aga_1_fu_2736_p2 = (tmp_144_fu_2730_p2 ^ BCa_8_fu_2604_p3);

assign Aga_fu_1688_p2 = (state_5_write_assig_reg_525 ^ Da_fu_878_p2);

assign Age_1_fu_2754_p2 = (tmp_146_fu_2748_p2 ^ BCe_8_fu_2632_p3);

assign Age_fu_994_p2 = (state_6_write_assig_reg_515 ^ De_fu_904_p2);

assign Agi_1_fu_2772_p2 = (tmp_148_fu_2766_p2 ^ BCi_8_fu_2660_p3);

assign Agi_fu_1458_p2 = (state_7_write_assig_reg_505 ^ Di_fu_930_p2);

assign Ago_1_fu_2790_p2 = (tmp_152_fu_2784_p2 ^ BCo_8_fu_2688_p3);

assign Ago_fu_1918_p2 = (state_8_write_assig_reg_495 ^ Do_fu_956_p2);

assign Agu_1_fu_2808_p2 = (tmp_156_fu_2802_p2 ^ BCu_8_fu_2716_p3);

assign Agu_fu_1230_p2 = (state_9_write_assig_reg_485 ^ Du_fu_982_p2);

assign Aka_1_fu_2964_p2 = (tmp_164_fu_2958_p2 ^ BCa_9_fu_2832_p3);

assign Aka_fu_1258_p2 = (state_10_write_assi_reg_475 ^ Da_fu_878_p2);

assign Ake_1_fu_2982_p2 = (tmp_166_fu_2976_p2 ^ BCe_9_fu_2860_p3);

assign Ake_fu_1716_p2 = (state_11_write_assi_reg_465 ^ De_fu_904_p2);

assign Aki_1_fu_3000_p2 = (tmp_168_fu_2994_p2 ^ BCi_9_fu_2888_p3);

assign Aki_fu_1022_p2 = (state_12_write_assi_reg_455 ^ Di_fu_930_p2);

assign Ako_1_fu_3018_p2 = (tmp_172_fu_3012_p2 ^ BCo_9_fu_2916_p3);

assign Ako_fu_1486_p2 = (state_13_write_assi_reg_445 ^ Do_fu_956_p2);

assign Aku_1_fu_3036_p2 = (tmp_176_fu_3030_p2 ^ BCu_9_fu_2944_p3);

assign Aku_fu_1946_p2 = (state_14_write_assi_reg_435 ^ Du_fu_982_p2);

assign Ama_1_fu_3194_p2 = (tmp_184_fu_3188_p2 ^ BCa_10_fu_3062_p3);

assign Ama_fu_1974_p2 = (state_15_write_assi_reg_425 ^ Da_fu_878_p2);

assign Ame_1_fu_3212_p2 = (tmp_186_fu_3206_p2 ^ BCe_10_fu_3090_p3);

assign Ame_fu_1286_p2 = (state_16_write_assi_reg_415 ^ De_fu_904_p2);

assign Ami_1_fu_3230_p2 = (tmp_188_fu_3224_p2 ^ BCi_10_fu_3118_p3);

assign Ami_fu_1744_p2 = (state_17_write_assi_reg_403 ^ Di_fu_930_p2);

assign Amo_1_fu_3248_p2 = (tmp_192_fu_3242_p2 ^ BCo_10_fu_3146_p3);

assign Amo_fu_1050_p2 = (state_18_write_assi_reg_391 ^ Do_fu_956_p2);

assign Amu_1_fu_3266_p2 = (tmp_196_fu_3260_p2 ^ BCu_10_fu_3174_p3);

assign Amu_fu_1514_p2 = (state_19_write_assi_reg_379 ^ Du_fu_982_p2);

assign Asa_1_fu_3424_p2 = (tmp_204_fu_3418_p2 ^ BCa_11_fu_3292_p3);

assign Asa_fu_1542_p2 = (state_20_write_assi_reg_367 ^ Da_fu_878_p2);

assign Ase_1_fu_3442_p2 = (tmp_206_fu_3436_p2 ^ BCe_11_fu_3320_p3);

assign Ase_fu_2002_p2 = (state_21_write_assi_reg_355 ^ De_fu_904_p2);

assign Asi_1_fu_3460_p2 = (tmp_208_fu_3454_p2 ^ BCi_11_fu_3348_p3);

assign Asi_fu_1314_p2 = (state_22_write_assi_reg_343 ^ Di_fu_930_p2);

assign Aso_1_fu_3478_p2 = (tmp_212_fu_3472_p2 ^ BCo_11_fu_3376_p3);

assign Aso_fu_1772_p2 = (state_23_write_assi_reg_331 ^ Do_fu_956_p2);

assign Asu_1_fu_3496_p2 = (tmp_216_fu_3490_p2 ^ BCu_11_fu_3404_p3);

assign Asu_fu_1078_p2 = (state_24_write_assi_reg_596 ^ Du_fu_982_p2);

assign BCa_10_fu_3062_p3 = {{tmp_224_fu_3048_p1}, {tmp_178_fu_3052_p4}};

assign BCa_11_fu_3292_p3 = {{tmp_229_fu_3278_p1}, {tmp_198_fu_3282_p4}};

assign BCa_2_fu_1222_p3 = {{tmp_74_fu_1208_p1}, {tmp_23_fu_1212_p4}};

assign BCa_3_fu_1450_p3 = {{tmp_94_fu_1438_p1}, {tmp_96_fu_1442_p3}};

assign BCa_4_fu_1680_p3 = {{tmp_110_fu_1666_p1}, {tmp_63_fu_1670_p4}};

assign BCa_5_fu_1910_p3 = {{tmp_118_fu_1896_p1}, {tmp_83_fu_1900_p4}};

assign BCa_6_fu_2138_p2 = (tmp19_fu_2132_p2 ^ tmp17_fu_2120_p2);

assign BCa_8_fu_2604_p3 = {{tmp_189_fu_2590_p1}, {tmp_138_fu_2594_p4}};

assign BCa_9_fu_2832_p3 = {{tmp_209_fu_2820_p1}, {tmp_211_fu_2824_p3}};

assign BCa_fu_756_p2 = (tmp4_fu_750_p2 ^ tmp3_fu_738_p2);

assign BCe_10_fu_3090_p3 = {{tmp_225_fu_3076_p1}, {tmp_179_fu_3080_p4}};

assign BCe_11_fu_3320_p3 = {{tmp_230_fu_3306_p1}, {tmp_199_fu_3310_p4}};

assign BCe_1_fu_1014_p3 = {{tmp_56_fu_1000_p1}, {tmp_s_fu_1004_p4}};

assign BCe_2_fu_1250_p3 = {{tmp_76_fu_1236_p1}, {tmp_24_fu_1240_p4}};

assign BCe_3_fu_1478_p3 = {{tmp_98_fu_1464_p1}, {tmp_43_fu_1468_p4}};

assign BCe_4_fu_1708_p3 = {{tmp_112_fu_1694_p1}, {tmp_64_fu_1698_p4}};

assign BCe_5_fu_1938_p3 = {{tmp_120_fu_1924_p1}, {tmp_84_fu_1928_p4}};

assign BCe_6_fu_2162_p2 = (tmp22_fu_2156_p2 ^ tmp20_fu_2144_p2);

assign BCe_7_fu_2396_p3 = {{tmp_171_fu_2382_p1}, {tmp_109_fu_2386_p4}};

assign BCe_8_fu_2632_p3 = {{tmp_191_fu_2618_p1}, {tmp_139_fu_2622_p4}};

assign BCe_9_fu_2860_p3 = {{tmp_213_fu_2846_p1}, {tmp_158_fu_2850_p4}};

assign BCe_fu_780_p2 = (tmp9_fu_774_p2 ^ tmp8_fu_762_p2);

assign BCi_10_fu_3118_p3 = {{tmp_226_fu_3104_p1}, {tmp_180_fu_3108_p4}};

assign BCi_11_fu_3348_p3 = {{tmp_231_fu_3334_p1}, {tmp_200_fu_3338_p4}};

assign BCi_1_fu_1042_p3 = {{tmp_58_fu_1028_p1}, {tmp_1_fu_1032_p4}};

assign BCi_2_fu_1278_p3 = {{tmp_78_fu_1264_p1}, {tmp_25_fu_1268_p4}};

assign BCi_3_fu_1506_p3 = {{tmp_100_fu_1492_p1}, {tmp_44_fu_1496_p4}};

assign BCi_4_fu_1736_p3 = {{tmp_114_fu_1722_p1}, {tmp_65_fu_1726_p4}};

assign BCi_5_fu_1966_p3 = {{tmp_123_fu_1952_p1}, {tmp_85_fu_1956_p4}};

assign BCi_6_fu_2186_p2 = (tmp25_fu_2180_p2 ^ tmp23_fu_2168_p2);

assign BCi_7_fu_2424_p3 = {{tmp_173_fu_2410_p1}, {tmp_111_fu_2414_p4}};

assign BCi_8_fu_2660_p3 = {{tmp_193_fu_2646_p1}, {tmp_140_fu_2650_p4}};

assign BCi_9_fu_2888_p3 = {{tmp_215_fu_2874_p1}, {tmp_159_fu_2878_p4}};

assign BCi_fu_804_p2 = (tmp7_fu_798_p2 ^ tmp2_fu_786_p2);

assign BCo_10_fu_3146_p3 = {{tmp_227_fu_3132_p1}, {tmp_181_fu_3136_p4}};

assign BCo_11_fu_3376_p3 = {{tmp_232_fu_3362_p1}, {tmp_201_fu_3366_p4}};

assign BCo_1_fu_1070_p3 = {{tmp_60_fu_1056_p1}, {tmp_4_fu_1060_p4}};

assign BCo_2_fu_1306_p3 = {{tmp_80_fu_1292_p1}, {tmp_26_fu_1296_p4}};

assign BCo_3_fu_1534_p3 = {{tmp_102_fu_1520_p1}, {tmp_45_fu_1524_p4}};

assign BCo_4_fu_1764_p3 = {{tmp_115_fu_1750_p1}, {tmp_66_fu_1754_p4}};

assign BCo_5_fu_1994_p3 = {{tmp_126_fu_1980_p1}, {tmp_86_fu_1984_p4}};

assign BCo_6_fu_2210_p2 = (tmp28_fu_2204_p2 ^ tmp26_fu_2192_p2);

assign BCo_7_fu_2452_p3 = {{tmp_175_fu_2438_p1}, {tmp_113_fu_2442_p4}};

assign BCo_8_fu_2688_p3 = {{tmp_195_fu_2674_p1}, {tmp_141_fu_2678_p4}};

assign BCo_9_fu_2916_p3 = {{tmp_217_fu_2902_p1}, {tmp_160_fu_2906_p4}};

assign BCo_fu_828_p2 = (tmp12_fu_822_p2 ^ tmp10_fu_810_p2);

assign BCu_10_fu_3174_p3 = {{tmp_228_fu_3160_p1}, {tmp_182_fu_3164_p4}};

assign BCu_11_fu_3404_p3 = {{tmp_233_fu_3390_p1}, {tmp_202_fu_3394_p4}};

assign BCu_1_fu_1098_p3 = {{tmp_62_fu_1084_p1}, {tmp_6_fu_1088_p4}};

assign BCu_2_fu_1334_p3 = {{tmp_82_fu_1320_p1}, {tmp_27_fu_1324_p4}};

assign BCu_3_fu_1562_p3 = {{tmp_108_fu_1548_p1}, {tmp_46_fu_1552_p4}};

assign BCu_4_fu_1792_p3 = {{tmp_117_fu_1778_p1}, {tmp_67_fu_1782_p4}};

assign BCu_5_fu_2022_p3 = {{tmp_129_fu_2008_p1}, {tmp_87_fu_2012_p4}};

assign BCu_6_fu_2234_p2 = (tmp31_fu_2228_p2 ^ tmp29_fu_2216_p2);

assign BCu_7_fu_2480_p3 = {{tmp_177_fu_2466_p1}, {tmp_116_fu_2470_p4}};

assign BCu_8_fu_2716_p3 = {{tmp_197_fu_2702_p1}, {tmp_142_fu_2706_p4}};

assign BCu_9_fu_2944_p3 = {{tmp_223_fu_2930_p1}, {tmp_161_fu_2934_p4}};

assign BCu_fu_852_p2 = (tmp15_fu_846_p2 ^ tmp13_fu_834_p2);

assign Da_1_fu_2260_p2 = (tmp_103_fu_2252_p3 ^ BCu_6_fu_2234_p2);

assign Da_fu_878_p2 = (tmp_2_fu_870_p3 ^ BCu_fu_852_p2);

assign De_1_fu_2286_p2 = (tmp_104_fu_2278_p3 ^ BCa_6_fu_2138_p2);

assign De_fu_904_p2 = (tmp_5_fu_896_p3 ^ BCa_fu_756_p2);

assign Di_1_fu_2312_p2 = (tmp_105_fu_2304_p3 ^ BCe_6_fu_2162_p2);

assign Di_fu_930_p2 = (tmp_8_fu_922_p3 ^ BCe_fu_780_p2);

assign Do_1_fu_2338_p2 = (tmp_106_fu_2330_p3 ^ BCi_6_fu_2186_p2);

assign Do_fu_956_p2 = (tmp_3_fu_948_p3 ^ BCi_fu_804_p2);

assign Du_1_fu_2364_p2 = (tmp_107_fu_2356_p3 ^ BCo_6_fu_2210_p2);

assign Du_fu_982_p2 = (tmp_9_fu_974_p3 ^ BCo_fu_828_p2);

assign Eba_2_fu_2370_p2 = (Eba_fu_1124_p2 ^ Da_1_fu_2260_p2);

assign Eba_fu_1124_p2 = (tmp16_fu_1118_p2 ^ KeccakF_RoundConstan_q0);

assign Ebe_1_fu_2814_p2 = (Ebe_fu_1142_p2 ^ De_1_fu_2286_p2);

assign Ebe_fu_1142_p2 = (tmp_13_fu_1136_p2 ^ BCe_1_fu_1014_p3);

assign Ebi_1_fu_3272_p2 = (Ebi_fu_1160_p2 ^ Di_1_fu_2312_p2);

assign Ebi_fu_1160_p2 = (tmp_15_fu_1154_p2 ^ BCi_1_fu_1042_p3);

assign Ebo_1_fu_2584_p2 = (Ebo_fu_1178_p2 ^ Do_1_fu_2338_p2);

assign Ebo_fu_1178_p2 = (tmp_18_fu_1172_p2 ^ BCo_1_fu_1070_p3);

assign Ebu_1_fu_3042_p2 = (Ebu_fu_1196_p2 ^ Du_1_fu_2364_p2);

assign Ebu_fu_1196_p2 = (tmp_22_fu_1190_p2 ^ BCu_1_fu_1098_p3);

assign Ega_1_fu_3070_p2 = (Ega_fu_1354_p2 ^ Da_1_fu_2260_p2);

assign Ega_fu_1354_p2 = (tmp_29_fu_1348_p2 ^ BCa_2_fu_1222_p3);

assign Ege_1_fu_2376_p2 = (Ege_fu_1372_p2 ^ De_1_fu_2286_p2);

assign Ege_fu_1372_p2 = (tmp_31_fu_1366_p2 ^ BCe_2_fu_1250_p3);

assign Egi_1_fu_2840_p2 = (Egi_fu_1390_p2 ^ Di_1_fu_2312_p2);

assign Egi_fu_1390_p2 = (tmp_33_fu_1384_p2 ^ BCi_2_fu_1278_p3);

assign Ego_1_fu_3300_p2 = (Ego_fu_1408_p2 ^ Do_1_fu_2338_p2);

assign Ego_fu_1408_p2 = (tmp_37_fu_1402_p2 ^ BCo_2_fu_1306_p3);

assign Egu_1_fu_2612_p2 = (Egu_fu_1426_p2 ^ Du_1_fu_2364_p2);

assign Egu_fu_1426_p2 = (tmp_41_fu_1420_p2 ^ BCu_2_fu_1334_p3);

assign Eka_1_fu_2640_p2 = (Eka_fu_1582_p2 ^ Da_1_fu_2260_p2);

assign Eka_fu_1582_p2 = (tmp_49_fu_1576_p2 ^ BCa_3_fu_1450_p3);

assign Eke_1_fu_3098_p2 = (Eke_fu_1600_p2 ^ De_1_fu_2286_p2);

assign Eke_fu_1600_p2 = (tmp_51_fu_1594_p2 ^ BCe_3_fu_1478_p3);

assign Eki_1_fu_2404_p2 = (Eki_fu_1618_p2 ^ Di_1_fu_2312_p2);

assign Eki_fu_1618_p2 = (tmp_53_fu_1612_p2 ^ BCi_3_fu_1506_p3);

assign Eko_1_fu_2868_p2 = (Eko_fu_1636_p2 ^ Do_1_fu_2338_p2);

assign Eko_fu_1636_p2 = (tmp_57_fu_1630_p2 ^ BCo_3_fu_1534_p3);

assign Eku_1_fu_3328_p2 = (Eku_fu_1654_p2 ^ Du_1_fu_2364_p2);

assign Eku_fu_1654_p2 = (tmp_61_fu_1648_p2 ^ BCu_3_fu_1562_p3);

assign Ema_1_fu_3356_p2 = (Ema_fu_1812_p2 ^ Da_1_fu_2260_p2);

assign Ema_fu_1812_p2 = (tmp_69_fu_1806_p2 ^ BCa_4_fu_1680_p3);

assign Eme_1_fu_2668_p2 = (Eme_fu_1830_p2 ^ De_1_fu_2286_p2);

assign Eme_fu_1830_p2 = (tmp_71_fu_1824_p2 ^ BCe_4_fu_1708_p3);

assign Emi_1_fu_3126_p2 = (Emi_fu_1848_p2 ^ Di_1_fu_2312_p2);

assign Emi_fu_1848_p2 = (tmp_73_fu_1842_p2 ^ BCi_4_fu_1736_p3);

assign Emo_1_fu_2432_p2 = (Emo_fu_1866_p2 ^ Do_1_fu_2338_p2);

assign Emo_fu_1866_p2 = (tmp_77_fu_1860_p2 ^ BCo_4_fu_1764_p3);

assign Emu_1_fu_2896_p2 = (Emu_fu_1884_p2 ^ Du_1_fu_2364_p2);

assign Emu_fu_1884_p2 = (tmp_81_fu_1878_p2 ^ BCu_4_fu_1792_p3);

assign Esa_1_fu_2924_p2 = (Esa_fu_2042_p2 ^ Da_1_fu_2260_p2);

assign Esa_fu_2042_p2 = (tmp_89_fu_2036_p2 ^ BCa_5_fu_1910_p3);

assign Ese_1_fu_3384_p2 = (Ese_fu_2060_p2 ^ De_1_fu_2286_p2);

assign Ese_fu_2060_p2 = (tmp_91_fu_2054_p2 ^ BCe_5_fu_1938_p3);

assign Esi_1_fu_2696_p2 = (Esi_fu_2078_p2 ^ Di_1_fu_2312_p2);

assign Esi_fu_2078_p2 = (tmp_93_fu_2072_p2 ^ BCi_5_fu_1966_p3);

assign Eso_1_fu_3154_p2 = (Eso_fu_2096_p2 ^ Do_1_fu_2338_p2);

assign Eso_fu_2096_p2 = (tmp_97_fu_2090_p2 ^ BCo_5_fu_1994_p3);

assign Esu_1_fu_2460_p2 = (Esu_fu_2114_p2 ^ Du_1_fu_2364_p2);

assign Esu_fu_2114_p2 = (tmp_101_fu_2108_p2 ^ BCu_5_fu_2022_p3);

assign KeccakF_RoundConstan_address0 = tmp_11_fu_614_p1;

assign KeccakF_RoundConstan_address1 = tmp_124_fu_625_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign round_1_fu_630_p2 = (5'd2 + round_reg_585);

assign tmp10_fu_810_p2 = (state_8_write_assig_reg_495 ^ state_13_write_assi_reg_445);

assign tmp11_fu_816_p2 = (state_3_write_assig_reg_545 ^ state_18_write_assi_reg_391);

assign tmp12_fu_822_p2 = (tmp11_fu_816_p2 ^ state_23_write_assi_reg_331);

assign tmp13_fu_834_p2 = (state_9_write_assig_reg_485 ^ state_4_write_assig_reg_535);

assign tmp14_fu_840_p2 = (state_24_write_assi_reg_596 ^ state_14_write_assi_reg_435);

assign tmp15_fu_846_p2 = (tmp14_fu_840_p2 ^ state_19_write_assi_reg_379);

assign tmp16_fu_1118_p2 = (tmp_10_fu_1112_p2 ^ Aba_2_fu_988_p2);

assign tmp17_fu_2120_p2 = (Esa_fu_2042_p2 ^ Eka_fu_1582_p2);

assign tmp18_fu_2126_p2 = (Ega_fu_1354_p2 ^ Eba_fu_1124_p2);

assign tmp19_fu_2132_p2 = (tmp18_fu_2126_p2 ^ Ema_fu_1812_p2);

assign tmp1_fu_768_p2 = (state_1_write_assig_reg_565 ^ state_16_write_assi_reg_415);

assign tmp20_fu_2144_p2 = (Ese_fu_2060_p2 ^ Eke_fu_1600_p2);

assign tmp21_fu_2150_p2 = (Ege_fu_1372_p2 ^ Ebe_fu_1142_p2);

assign tmp22_fu_2156_p2 = (tmp21_fu_2150_p2 ^ Eme_fu_1830_p2);

assign tmp23_fu_2168_p2 = (Emi_fu_1848_p2 ^ Eki_fu_1618_p2);

assign tmp24_fu_2174_p2 = (Esi_fu_2078_p2 ^ Ebi_fu_1160_p2);

assign tmp25_fu_2180_p2 = (tmp24_fu_2174_p2 ^ Egi_fu_1390_p2);

assign tmp26_fu_2192_p2 = (Emo_fu_1866_p2 ^ Ebo_fu_1178_p2);

assign tmp27_fu_2198_p2 = (Eko_fu_1636_p2 ^ Ego_fu_1408_p2);

assign tmp28_fu_2204_p2 = (tmp27_fu_2198_p2 ^ Eso_fu_2096_p2);

assign tmp29_fu_2216_p2 = (Emu_fu_1884_p2 ^ Egu_fu_1426_p2);

assign tmp2_fu_786_p2 = (state_7_write_assig_reg_505 ^ state_12_write_assi_reg_455);

assign tmp30_fu_2222_p2 = (Esu_fu_2114_p2 ^ Ebu_fu_1196_p2);

assign tmp31_fu_2228_p2 = (tmp30_fu_2222_p2 ^ Eku_fu_1654_p2);

assign tmp32_fu_2500_p2 = (tmp_121_fu_2494_p2 ^ Eba_2_fu_2370_p2);

assign tmp3_fu_738_p2 = (state_5_write_assig_reg_525 ^ state_10_write_assi_reg_475);

assign tmp4_fu_750_p2 = (tmp5_fu_744_p2 ^ state_20_write_assi_reg_367);

assign tmp5_fu_744_p2 = (state_15_write_assi_reg_425 ^ state_0_write_assig_reg_575);

assign tmp6_fu_792_p2 = (state_2_write_assig_reg_555 ^ state_17_write_assi_reg_403);

assign tmp7_fu_798_p2 = (tmp6_fu_792_p2 ^ state_22_write_assi_reg_343);

assign tmp8_fu_762_p2 = (state_6_write_assig_reg_515 ^ state_11_write_assi_reg_465);

assign tmp9_fu_774_p2 = (tmp1_fu_768_p2 ^ state_21_write_assi_reg_355);

assign tmp_100_fu_1492_p1 = Ako_fu_1486_p2[38:0];

assign tmp_101_fu_2108_p2 = (tmp_99_fu_2102_p2 & BCe_5_fu_1938_p3);

assign tmp_102_fu_1520_p1 = Amu_fu_1514_p2[55:0];

assign tmp_103_fu_2252_p3 = {{tmp_131_fu_2240_p1}, {tmp_133_fu_2244_p3}};

assign tmp_104_fu_2278_p3 = {{tmp_135_fu_2266_p1}, {tmp_149_fu_2270_p3}};

assign tmp_105_fu_2304_p3 = {{tmp_151_fu_2292_p1}, {tmp_153_fu_2296_p3}};

assign tmp_106_fu_2330_p3 = {{tmp_155_fu_2318_p1}, {tmp_157_fu_2322_p3}};

assign tmp_107_fu_2356_p3 = {{tmp_163_fu_2344_p1}, {tmp_169_fu_2348_p3}};

assign tmp_108_fu_1548_p1 = Asa_fu_1542_p2[45:0];

assign tmp_109_fu_2386_p4 = {{Ege_1_fu_2376_p2[63:20]}};

assign tmp_10_fu_1112_p2 = (tmp_7_fu_1106_p2 & BCi_1_fu_1042_p3);

assign tmp_110_fu_1666_p1 = Abu_fu_1660_p2[36:0];

assign tmp_111_fu_2414_p4 = {{Eki_1_fu_2404_p2[63:21]}};

assign tmp_112_fu_1694_p1 = Aga_fu_1688_p2[27:0];

assign tmp_113_fu_2442_p4 = {{Emo_1_fu_2432_p2[63:43]}};

assign tmp_114_fu_1722_p1 = Ake_fu_1716_p2[53:0];

assign tmp_115_fu_1750_p1 = Ami_fu_1744_p2[48:0];

assign tmp_116_fu_2470_p4 = {{Esu_1_fu_2460_p2[63:50]}};

assign tmp_117_fu_1778_p1 = Aso_fu_1772_p2[7:0];

assign tmp_118_fu_1896_p1 = Abi_fu_1890_p2[1:0];

assign tmp_119_fu_2488_p2 = (64'd18446744073709551615 ^ BCe_7_fu_2396_p3);

assign tmp_11_fu_614_p1 = round_reg_585;

assign tmp_120_fu_1924_p1 = Ago_fu_1918_p2[8:0];

assign tmp_121_fu_2494_p2 = (tmp_119_fu_2488_p2 & BCi_7_fu_2424_p3);

assign tmp_122_fu_619_p2 = (round_reg_585 | 5'd1);

assign tmp_123_fu_1952_p1 = Aku_fu_1946_p2[24:0];

assign tmp_124_fu_625_p1 = tmp_122_fu_619_p2;

assign tmp_125_fu_2512_p2 = (64'd18446744073709551615 ^ BCi_7_fu_2424_p3);

assign tmp_126_fu_1980_p1 = Ama_fu_1974_p2[22:0];

assign tmp_127_fu_2518_p2 = (tmp_125_fu_2512_p2 & BCo_7_fu_2452_p3);

assign tmp_128_fu_2530_p2 = (64'd18446744073709551615 ^ BCo_7_fu_2452_p3);

assign tmp_129_fu_2008_p1 = Ase_fu_2002_p2[61:0];

assign tmp_12_fu_1130_p2 = (64'd18446744073709551615 ^ BCi_1_fu_1042_p3);

assign tmp_130_fu_2536_p2 = (tmp_128_fu_2530_p2 & BCu_7_fu_2480_p3);

assign tmp_131_fu_2240_p1 = BCe_6_fu_2162_p2[62:0];

assign tmp_132_fu_2548_p2 = (64'd18446744073709551615 ^ BCu_7_fu_2480_p3);

assign tmp_133_fu_2244_p3 = BCe_6_fu_2162_p2[32'd63];

assign tmp_134_fu_2554_p2 = (tmp_132_fu_2548_p2 & Eba_2_fu_2370_p2);

assign tmp_135_fu_2266_p1 = BCi_6_fu_2186_p2[62:0];

assign tmp_136_fu_2566_p2 = (64'd18446744073709551615 ^ Eba_2_fu_2370_p2);

assign tmp_137_fu_2572_p2 = (tmp_136_fu_2566_p2 & BCe_7_fu_2396_p3);

assign tmp_138_fu_2594_p4 = {{Ebo_1_fu_2584_p2[63:36]}};

assign tmp_139_fu_2622_p4 = {{Egu_1_fu_2612_p2[63:44]}};

assign tmp_13_fu_1136_p2 = (tmp_12_fu_1130_p2 & BCo_1_fu_1070_p3);

assign tmp_140_fu_2650_p4 = {{Eka_1_fu_2640_p2[63:61]}};

assign tmp_141_fu_2678_p4 = {{Eme_1_fu_2668_p2[63:19]}};

assign tmp_142_fu_2706_p4 = {{Esi_1_fu_2696_p2[63:3]}};

assign tmp_143_fu_2724_p2 = (64'd18446744073709551615 ^ BCe_8_fu_2632_p3);

assign tmp_144_fu_2730_p2 = (tmp_143_fu_2724_p2 & BCi_8_fu_2660_p3);

assign tmp_145_fu_2742_p2 = (64'd18446744073709551615 ^ BCi_8_fu_2660_p3);

assign tmp_146_fu_2748_p2 = (tmp_145_fu_2742_p2 & BCo_8_fu_2688_p3);

assign tmp_147_fu_2760_p2 = (64'd18446744073709551615 ^ BCo_8_fu_2688_p3);

assign tmp_148_fu_2766_p2 = (tmp_147_fu_2760_p2 & BCu_8_fu_2716_p3);

assign tmp_149_fu_2270_p3 = BCi_6_fu_2186_p2[32'd63];

assign tmp_14_fu_1148_p2 = (64'd18446744073709551615 ^ BCo_1_fu_1070_p3);

assign tmp_150_fu_2778_p2 = (64'd18446744073709551615 ^ BCu_8_fu_2716_p3);

assign tmp_151_fu_2292_p1 = BCo_6_fu_2210_p2[62:0];

assign tmp_152_fu_2784_p2 = (tmp_150_fu_2778_p2 & BCa_8_fu_2604_p3);

assign tmp_153_fu_2296_p3 = BCo_6_fu_2210_p2[32'd63];

assign tmp_154_fu_2796_p2 = (64'd18446744073709551615 ^ BCa_8_fu_2604_p3);

assign tmp_155_fu_2318_p1 = BCu_6_fu_2234_p2[62:0];

assign tmp_156_fu_2802_p2 = (tmp_154_fu_2796_p2 & BCe_8_fu_2632_p3);

assign tmp_157_fu_2322_p3 = BCu_6_fu_2234_p2[32'd63];

assign tmp_158_fu_2850_p4 = {{Egi_1_fu_2840_p2[63:58]}};

assign tmp_159_fu_2878_p4 = {{Eko_1_fu_2868_p2[63:39]}};

assign tmp_15_fu_1154_p2 = (tmp_14_fu_1148_p2 & BCu_1_fu_1098_p3);

assign tmp_160_fu_2906_p4 = {{Emu_1_fu_2896_p2[63:56]}};

assign tmp_161_fu_2934_p4 = {{Esa_1_fu_2924_p2[63:46]}};

assign tmp_162_fu_2952_p2 = (64'd18446744073709551615 ^ BCe_9_fu_2860_p3);

assign tmp_163_fu_2344_p1 = BCa_6_fu_2138_p2[62:0];

assign tmp_164_fu_2958_p2 = (tmp_162_fu_2952_p2 & BCi_9_fu_2888_p3);

assign tmp_165_fu_2970_p2 = (64'd18446744073709551615 ^ BCi_9_fu_2888_p3);

assign tmp_166_fu_2976_p2 = (tmp_165_fu_2970_p2 & BCo_9_fu_2916_p3);

assign tmp_167_fu_2988_p2 = (64'd18446744073709551615 ^ BCo_9_fu_2916_p3);

assign tmp_168_fu_2994_p2 = (tmp_167_fu_2988_p2 & BCu_9_fu_2944_p3);

assign tmp_169_fu_2348_p3 = BCa_6_fu_2138_p2[32'd63];

assign tmp_16_fu_1166_p2 = (64'd18446744073709551615 ^ BCu_1_fu_1098_p3);

assign tmp_170_fu_3006_p2 = (64'd18446744073709551615 ^ BCu_9_fu_2944_p3);

assign tmp_171_fu_2382_p1 = Ege_1_fu_2376_p2[19:0];

assign tmp_172_fu_3012_p2 = (tmp_170_fu_3006_p2 & BCa_9_fu_2832_p3);

assign tmp_173_fu_2410_p1 = Eki_1_fu_2404_p2[20:0];

assign tmp_174_fu_3024_p2 = (64'd18446744073709551615 ^ BCa_9_fu_2832_p3);

assign tmp_175_fu_2438_p1 = Emo_1_fu_2432_p2[42:0];

assign tmp_176_fu_3030_p2 = (tmp_174_fu_3024_p2 & BCe_9_fu_2860_p3);

assign tmp_177_fu_2466_p1 = Esu_1_fu_2460_p2[49:0];

assign tmp_178_fu_3052_p4 = {{Ebu_1_fu_3042_p2[63:37]}};

assign tmp_179_fu_3080_p4 = {{Ega_1_fu_3070_p2[63:28]}};

assign tmp_17_fu_858_p1 = BCe_fu_780_p2[62:0];

assign tmp_180_fu_3108_p4 = {{Eke_1_fu_3098_p2[63:54]}};

assign tmp_181_fu_3136_p4 = {{Emi_1_fu_3126_p2[63:49]}};

assign tmp_182_fu_3164_p4 = {{Eso_1_fu_3154_p2[63:8]}};

assign tmp_183_fu_3182_p2 = (64'd18446744073709551615 ^ BCe_10_fu_3090_p3);

assign tmp_184_fu_3188_p2 = (tmp_183_fu_3182_p2 & BCi_10_fu_3118_p3);

assign tmp_185_fu_3200_p2 = (64'd18446744073709551615 ^ BCi_10_fu_3118_p3);

assign tmp_186_fu_3206_p2 = (tmp_185_fu_3200_p2 & BCo_10_fu_3146_p3);

assign tmp_187_fu_3218_p2 = (64'd18446744073709551615 ^ BCo_10_fu_3146_p3);

assign tmp_188_fu_3224_p2 = (tmp_187_fu_3218_p2 & BCu_10_fu_3174_p3);

assign tmp_189_fu_2590_p1 = Ebo_1_fu_2584_p2[35:0];

assign tmp_18_fu_1172_p2 = (tmp_16_fu_1166_p2 & Aba_2_fu_988_p2);

assign tmp_190_fu_3236_p2 = (64'd18446744073709551615 ^ BCu_10_fu_3174_p3);

assign tmp_191_fu_2618_p1 = Egu_1_fu_2612_p2[43:0];

assign tmp_192_fu_3242_p2 = (tmp_190_fu_3236_p2 & BCa_10_fu_3062_p3);

assign tmp_193_fu_2646_p1 = Eka_1_fu_2640_p2[60:0];

assign tmp_194_fu_3254_p2 = (64'd18446744073709551615 ^ BCa_10_fu_3062_p3);

assign tmp_195_fu_2674_p1 = Eme_1_fu_2668_p2[18:0];

assign tmp_196_fu_3260_p2 = (tmp_194_fu_3254_p2 & BCe_10_fu_3090_p3);

assign tmp_197_fu_2702_p1 = Esi_1_fu_2696_p2[2:0];

assign tmp_198_fu_3282_p4 = {{Ebi_1_fu_3272_p2[63:2]}};

assign tmp_199_fu_3310_p4 = {{Ego_1_fu_3300_p2[63:9]}};

assign tmp_19_fu_862_p3 = BCe_fu_780_p2[32'd63];

assign tmp_1_fu_1032_p4 = {{Aki_fu_1022_p2[63:21]}};

assign tmp_200_fu_3338_p4 = {{Eku_1_fu_3328_p2[63:25]}};

assign tmp_201_fu_3366_p4 = {{Ema_1_fu_3356_p2[63:23]}};

assign tmp_202_fu_3394_p4 = {{Ese_1_fu_3384_p2[63:62]}};

assign tmp_203_fu_3412_p2 = (64'd18446744073709551615 ^ BCe_11_fu_3320_p3);

assign tmp_204_fu_3418_p2 = (tmp_203_fu_3412_p2 & BCi_11_fu_3348_p3);

assign tmp_205_fu_3430_p2 = (64'd18446744073709551615 ^ BCi_11_fu_3348_p3);

assign tmp_206_fu_3436_p2 = (tmp_205_fu_3430_p2 & BCo_11_fu_3376_p3);

assign tmp_207_fu_3448_p2 = (64'd18446744073709551615 ^ BCo_11_fu_3376_p3);

assign tmp_208_fu_3454_p2 = (tmp_207_fu_3448_p2 & BCu_11_fu_3404_p3);

assign tmp_209_fu_2820_p1 = Ebe_1_fu_2814_p2[62:0];

assign tmp_20_fu_1184_p2 = (64'd18446744073709551615 ^ Aba_2_fu_988_p2);

assign tmp_210_fu_3466_p2 = (64'd18446744073709551615 ^ BCu_11_fu_3404_p3);

assign tmp_211_fu_2824_p3 = Ebe_1_fu_2814_p2[32'd63];

assign tmp_212_fu_3472_p2 = (tmp_210_fu_3466_p2 & BCa_11_fu_3292_p3);

assign tmp_213_fu_2846_p1 = Egi_1_fu_2840_p2[57:0];

assign tmp_214_fu_3484_p2 = (64'd18446744073709551615 ^ BCa_11_fu_3292_p3);

assign tmp_215_fu_2874_p1 = Eko_1_fu_2868_p2[38:0];

assign tmp_216_fu_3490_p2 = (tmp_214_fu_3484_p2 & BCe_11_fu_3320_p3);

assign tmp_217_fu_2902_p1 = Emu_1_fu_2896_p2[55:0];

assign tmp_21_fu_884_p1 = BCi_fu_804_p2[62:0];

assign tmp_223_fu_2930_p1 = Esa_1_fu_2924_p2[45:0];

assign tmp_224_fu_3048_p1 = Ebu_1_fu_3042_p2[36:0];

assign tmp_225_fu_3076_p1 = Ega_1_fu_3070_p2[27:0];

assign tmp_226_fu_3104_p1 = Eke_1_fu_3098_p2[53:0];

assign tmp_227_fu_3132_p1 = Emi_1_fu_3126_p2[48:0];

assign tmp_228_fu_3160_p1 = Eso_1_fu_3154_p2[7:0];

assign tmp_229_fu_3278_p1 = Ebi_1_fu_3272_p2[1:0];

assign tmp_22_fu_1190_p2 = (tmp_20_fu_1184_p2 & BCe_1_fu_1014_p3);

assign tmp_230_fu_3306_p1 = Ego_1_fu_3300_p2[8:0];

assign tmp_231_fu_3334_p1 = Eku_1_fu_3328_p2[24:0];

assign tmp_232_fu_3362_p1 = Ema_1_fu_3356_p2[22:0];

assign tmp_233_fu_3390_p1 = Ese_1_fu_3384_p2[61:0];

assign tmp_23_fu_1212_p4 = {{Abo_fu_1202_p2[63:36]}};

assign tmp_24_fu_1240_p4 = {{Agu_fu_1230_p2[63:44]}};

assign tmp_25_fu_1268_p4 = {{Aka_fu_1258_p2[63:61]}};

assign tmp_26_fu_1296_p4 = {{Ame_fu_1286_p2[63:19]}};

assign tmp_27_fu_1324_p4 = {{Asi_fu_1314_p2[63:3]}};

assign tmp_28_fu_1342_p2 = (64'd18446744073709551615 ^ BCe_2_fu_1250_p3);

assign tmp_29_fu_1348_p2 = (tmp_28_fu_1342_p2 & BCi_2_fu_1278_p3);

assign tmp_2_fu_870_p3 = {{tmp_17_fu_858_p1}, {tmp_19_fu_862_p3}};

assign tmp_30_fu_1360_p2 = (64'd18446744073709551615 ^ BCi_2_fu_1278_p3);

assign tmp_31_fu_1366_p2 = (tmp_30_fu_1360_p2 & BCo_2_fu_1306_p3);

assign tmp_32_fu_1378_p2 = (64'd18446744073709551615 ^ BCo_2_fu_1306_p3);

assign tmp_33_fu_1384_p2 = (tmp_32_fu_1378_p2 & BCu_2_fu_1334_p3);

assign tmp_34_fu_888_p3 = BCi_fu_804_p2[32'd63];

assign tmp_35_fu_1396_p2 = (64'd18446744073709551615 ^ BCu_2_fu_1334_p3);

assign tmp_36_fu_910_p1 = BCo_fu_828_p2[62:0];

assign tmp_37_fu_1402_p2 = (tmp_35_fu_1396_p2 & BCa_2_fu_1222_p3);

assign tmp_38_fu_914_p3 = BCo_fu_828_p2[32'd63];

assign tmp_39_fu_1414_p2 = (64'd18446744073709551615 ^ BCa_2_fu_1222_p3);

assign tmp_3_fu_948_p3 = {{tmp_40_fu_936_p1}, {tmp_42_fu_940_p3}};

assign tmp_40_fu_936_p1 = BCu_fu_852_p2[62:0];

assign tmp_41_fu_1420_p2 = (tmp_39_fu_1414_p2 & BCe_2_fu_1250_p3);

assign tmp_42_fu_940_p3 = BCu_fu_852_p2[32'd63];

assign tmp_43_fu_1468_p4 = {{Agi_fu_1458_p2[63:58]}};

assign tmp_44_fu_1496_p4 = {{Ako_fu_1486_p2[63:39]}};

assign tmp_45_fu_1524_p4 = {{Amu_fu_1514_p2[63:56]}};

assign tmp_46_fu_1552_p4 = {{Asa_fu_1542_p2[63:46]}};

assign tmp_47_fu_1570_p2 = (64'd18446744073709551615 ^ BCe_3_fu_1478_p3);

assign tmp_48_fu_962_p1 = BCa_fu_756_p2[62:0];

assign tmp_49_fu_1576_p2 = (tmp_47_fu_1570_p2 & BCi_3_fu_1506_p3);

assign tmp_4_fu_1060_p4 = {{Amo_fu_1050_p2[63:43]}};

assign tmp_50_fu_1588_p2 = (64'd18446744073709551615 ^ BCi_3_fu_1506_p3);

assign tmp_51_fu_1594_p2 = (tmp_50_fu_1588_p2 & BCo_3_fu_1534_p3);

assign tmp_52_fu_1606_p2 = (64'd18446744073709551615 ^ BCo_3_fu_1534_p3);

assign tmp_53_fu_1612_p2 = (tmp_52_fu_1606_p2 & BCu_3_fu_1562_p3);

assign tmp_54_fu_966_p3 = BCa_fu_756_p2[32'd63];

assign tmp_55_fu_1624_p2 = (64'd18446744073709551615 ^ BCu_3_fu_1562_p3);

assign tmp_56_fu_1000_p1 = Age_fu_994_p2[19:0];

assign tmp_57_fu_1630_p2 = (tmp_55_fu_1624_p2 & BCa_3_fu_1450_p3);

assign tmp_58_fu_1028_p1 = Aki_fu_1022_p2[20:0];

assign tmp_59_fu_1642_p2 = (64'd18446744073709551615 ^ BCa_3_fu_1450_p3);

assign tmp_5_fu_896_p3 = {{tmp_21_fu_884_p1}, {tmp_34_fu_888_p3}};

assign tmp_60_fu_1056_p1 = Amo_fu_1050_p2[42:0];

assign tmp_61_fu_1648_p2 = (tmp_59_fu_1642_p2 & BCe_3_fu_1478_p3);

assign tmp_62_fu_1084_p1 = Asu_fu_1078_p2[49:0];

assign tmp_63_fu_1670_p4 = {{Abu_fu_1660_p2[63:37]}};

assign tmp_64_fu_1698_p4 = {{Aga_fu_1688_p2[63:28]}};

assign tmp_65_fu_1726_p4 = {{Ake_fu_1716_p2[63:54]}};

assign tmp_66_fu_1754_p4 = {{Ami_fu_1744_p2[63:49]}};

assign tmp_67_fu_1782_p4 = {{Aso_fu_1772_p2[63:8]}};

assign tmp_68_fu_1800_p2 = (64'd18446744073709551615 ^ BCe_4_fu_1708_p3);

assign tmp_69_fu_1806_p2 = (tmp_68_fu_1800_p2 & BCi_4_fu_1736_p3);

assign tmp_6_fu_1088_p4 = {{Asu_fu_1078_p2[63:50]}};

assign tmp_70_fu_1818_p2 = (64'd18446744073709551615 ^ BCi_4_fu_1736_p3);

assign tmp_71_fu_1824_p2 = (tmp_70_fu_1818_p2 & BCo_4_fu_1764_p3);

assign tmp_72_fu_1836_p2 = (64'd18446744073709551615 ^ BCo_4_fu_1764_p3);

assign tmp_73_fu_1842_p2 = (tmp_72_fu_1836_p2 & BCu_4_fu_1792_p3);

assign tmp_74_fu_1208_p1 = Abo_fu_1202_p2[35:0];

assign tmp_75_fu_1854_p2 = (64'd18446744073709551615 ^ BCu_4_fu_1792_p3);

assign tmp_76_fu_1236_p1 = Agu_fu_1230_p2[43:0];

assign tmp_77_fu_1860_p2 = (tmp_75_fu_1854_p2 & BCa_4_fu_1680_p3);

assign tmp_78_fu_1264_p1 = Aka_fu_1258_p2[60:0];

assign tmp_79_fu_1872_p2 = (64'd18446744073709551615 ^ BCa_4_fu_1680_p3);

assign tmp_7_fu_1106_p2 = (64'd18446744073709551615 ^ BCe_1_fu_1014_p3);

assign tmp_80_fu_1292_p1 = Ame_fu_1286_p2[18:0];

assign tmp_81_fu_1878_p2 = (tmp_79_fu_1872_p2 & BCe_4_fu_1708_p3);

assign tmp_82_fu_1320_p1 = Asi_fu_1314_p2[2:0];

assign tmp_83_fu_1900_p4 = {{Abi_fu_1890_p2[63:2]}};

assign tmp_84_fu_1928_p4 = {{Ago_fu_1918_p2[63:9]}};

assign tmp_85_fu_1956_p4 = {{Aku_fu_1946_p2[63:25]}};

assign tmp_86_fu_1984_p4 = {{Ama_fu_1974_p2[63:23]}};

assign tmp_87_fu_2012_p4 = {{Ase_fu_2002_p2[63:62]}};

assign tmp_88_fu_2030_p2 = (64'd18446744073709551615 ^ BCe_5_fu_1938_p3);

assign tmp_89_fu_2036_p2 = (tmp_88_fu_2030_p2 & BCi_5_fu_1966_p3);

assign tmp_8_fu_922_p3 = {{tmp_36_fu_910_p1}, {tmp_38_fu_914_p3}};

assign tmp_90_fu_2048_p2 = (64'd18446744073709551615 ^ BCi_5_fu_1966_p3);

assign tmp_91_fu_2054_p2 = (tmp_90_fu_2048_p2 & BCo_5_fu_1994_p3);

assign tmp_92_fu_2066_p2 = (64'd18446744073709551615 ^ BCo_5_fu_1994_p3);

assign tmp_93_fu_2072_p2 = (tmp_92_fu_2066_p2 & BCu_5_fu_2022_p3);

assign tmp_94_fu_1438_p1 = Abe_fu_1432_p2[62:0];

assign tmp_95_fu_2084_p2 = (64'd18446744073709551615 ^ BCu_5_fu_2022_p3);

assign tmp_96_fu_1442_p3 = Abe_fu_1432_p2[32'd63];

assign tmp_97_fu_2090_p2 = (tmp_95_fu_2084_p2 & BCa_5_fu_1910_p3);

assign tmp_98_fu_1464_p1 = Agi_fu_1458_p2[57:0];

assign tmp_99_fu_2102_p2 = (64'd18446744073709551615 ^ BCa_5_fu_1910_p3);

assign tmp_9_fu_974_p3 = {{tmp_48_fu_962_p1}, {tmp_54_fu_966_p3}};

assign tmp_fu_608_p2 = ((round_reg_585 < 5'd24) ? 1'b1 : 1'b0);

assign tmp_s_fu_1004_p4 = {{Age_fu_994_p2[63:20]}};

endmodule //KeccakF1600_StatePer
